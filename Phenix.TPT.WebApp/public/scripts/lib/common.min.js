/*! jQuery v1.11.3 | (c) 2005, 2015 jQuery Foundation, Inc. | jquery.org/license */ ! function(a, b) {
    "object" == typeof module && "object" == typeof module.exports ? module.exports = a.document ? b(a, !0) : function(a) {
        if (!a.document) throw new Error("jQuery requires a window with a document");
        return b(a)
    } : b(a)
}("undefined" != typeof window ? window : this, function(a, b) {
    var c = [],
        d = c.slice,
        e = c.concat,
        f = c.push,
        g = c.indexOf,
        h = {},
        i = h.toString,
        j = h.hasOwnProperty,
        k = {},
        l = "1.11.3",
        m = function(a, b) {
            return new m.fn.init(a, b)
        },
        n = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
        o = /^-ms-/,
        p = /-([\da-z])/gi,
        q = function(a, b) {
            return b.toUpperCase()
        };
    m.fn = m.prototype = {
        jquery: l,
        constructor: m,
        selector: "",
        length: 0,
        toArray: function() {
            return d.call(this)
        },
        get: function(a) {
            return null != a ? 0 > a ? this[a + this.length] : this[a] : d.call(this)
        },
        pushStack: function(a) {
            var b = m.merge(this.constructor(), a);
            return b.prevObject = this, b.context = this.context, b
        },
        each: function(a, b) {
            return m.each(this, a, b)
        },
        map: function(a) {
            return this.pushStack(m.map(this, function(b, c) {
                return a.call(b, c, b)
            }))
        },
        slice: function() {
            return this.pushStack(d.apply(this, arguments))
        },
        first: function() {
            return this.eq(0)
        },
        last: function() {
            return this.eq(-1)
        },
        eq: function(a) {
            var b = this.length,
                c = +a + (0 > a ? b : 0);
            return this.pushStack(c >= 0 && b > c ? [this[c]] : [])
        },
        end: function() {
            return this.prevObject || this.constructor(null)
        },
        push: f,
        sort: c.sort,
        splice: c.splice
    }, m.extend = m.fn.extend = function() {
        var a, b, c, d, e, f, g = arguments[0] || {},
            h = 1,
            i = arguments.length,
            j = !1;
        for ("boolean" == typeof g && (j = g, g = arguments[h] || {}, h++), "object" == typeof g || m.isFunction(g) || (g = {}), h === i && (g = this, h--); i > h; h++)
            if (null != (e = arguments[h]))
                for (d in e) a = g[d], c = e[d], g !== c && (j && c && (m.isPlainObject(c) || (b = m.isArray(c))) ? (b ? (b = !1, f = a && m.isArray(a) ? a : []) : f = a && m.isPlainObject(a) ? a : {}, g[d] = m.extend(j, f, c)) : void 0 !== c && (g[d] = c));
        return g
    }, m.extend({
        expando: "jQuery" + (l + Math.random()).replace(/\D/g, ""),
        isReady: !0,
        error: function(a) {
            throw new Error(a)
        },
        noop: function() {},
        isFunction: function(a) {
            return "function" === m.type(a)
        },
        isArray: Array.isArray || function(a) {
            return "array" === m.type(a)
        },
        isWindow: function(a) {
            return null != a && a == a.window
        },
        isNumeric: function(a) {
            return !m.isArray(a) && a - parseFloat(a) + 1 >= 0
        },
        isEmptyObject: function(a) {
            var b;
            for (b in a) return !1;
            return !0
        },
        isPlainObject: function(a) {
            var b;
            if (!a || "object" !== m.type(a) || a.nodeType || m.isWindow(a)) return !1;
            try {
                if (a.constructor && !j.call(a, "constructor") && !j.call(a.constructor.prototype, "isPrototypeOf")) return !1
            } catch (c) {
                return !1
            }
            if (k.ownLast)
                for (b in a) return j.call(a, b);
            for (b in a);
            return void 0 === b || j.call(a, b)
        },
        type: function(a) {
            return null == a ? a + "" : "object" == typeof a || "function" == typeof a ? h[i.call(a)] || "object" : typeof a
        },
        globalEval: function(b) {
            b && m.trim(b) && (a.execScript || function(b) {
                a.eval.call(a, b)
            })(b)
        },
        camelCase: function(a) {
            return a.replace(o, "ms-").replace(p, q)
        },
        nodeName: function(a, b) {
            return a.nodeName && a.nodeName.toLowerCase() === b.toLowerCase()
        },
        each: function(a, b, c) {
            var d, e = 0,
                f = a.length,
                g = r(a);
            if (c) {
                if (g) {
                    for (; f > e; e++)
                        if (d = b.apply(a[e], c), d === !1) break
                } else
                    for (e in a)
                        if (d = b.apply(a[e], c), d === !1) break
            } else if (g) {
                for (; f > e; e++)
                    if (d = b.call(a[e], e, a[e]), d === !1) break
            } else
                for (e in a)
                    if (d = b.call(a[e], e, a[e]), d === !1) break;
            return a
        },
        trim: function(a) {
            return null == a ? "" : (a + "").replace(n, "")
        },
        makeArray: function(a, b) {
            var c = b || [];
            return null != a && (r(Object(a)) ? m.merge(c, "string" == typeof a ? [a] : a) : f.call(c, a)), c
        },
        inArray: function(a, b, c) {
            var d;
            if (b) {
                if (g) return g.call(b, a, c);
                for (d = b.length, c = c ? 0 > c ? Math.max(0, d + c) : c : 0; d > c; c++)
                    if (c in b && b[c] === a) return c
            }
            return -1
        },
        merge: function(a, b) {
            var c = +b.length,
                d = 0,
                e = a.length;
            while (c > d) a[e++] = b[d++];
            if (c !== c)
                while (void 0 !== b[d]) a[e++] = b[d++];
            return a.length = e, a
        },
        grep: function(a, b, c) {
            for (var d, e = [], f = 0, g = a.length, h = !c; g > f; f++) d = !b(a[f], f), d !== h && e.push(a[f]);
            return e
        },
        map: function(a, b, c) {
            var d, f = 0,
                g = a.length,
                h = r(a),
                i = [];
            if (h)
                for (; g > f; f++) d = b(a[f], f, c), null != d && i.push(d);
            else
                for (f in a) d = b(a[f], f, c), null != d && i.push(d);
            return e.apply([], i)
        },
        guid: 1,
        proxy: function(a, b) {
            var c, e, f;
            return "string" == typeof b && (f = a[b], b = a, a = f), m.isFunction(a) ? (c = d.call(arguments, 2), e = function() {
                return a.apply(b || this, c.concat(d.call(arguments)))
            }, e.guid = a.guid = a.guid || m.guid++, e) : void 0
        },
        now: function() {
            return +new Date
        },
        support: k
    }), m.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(a, b) {
        h["[object " + b + "]"] = b.toLowerCase()
    });

    function r(a) {
        var b = "length" in a && a.length,
            c = m.type(a);
        return "function" === c || m.isWindow(a) ? !1 : 1 === a.nodeType && b ? !0 : "array" === c || 0 === b || "number" == typeof b && b > 0 && b - 1 in a
    }
    var s = function(a) {
        var b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u = "sizzle" + 1 * new Date,
            v = a.document,
            w = 0,
            x = 0,
            y = ha(),
            z = ha(),
            A = ha(),
            B = function(a, b) {
                return a === b && (l = !0), 0
            },
            C = 1 << 31,
            D = {}.hasOwnProperty,
            E = [],
            F = E.pop,
            G = E.push,
            H = E.push,
            I = E.slice,
            J = function(a, b) {
                for (var c = 0, d = a.length; d > c; c++)
                    if (a[c] === b) return c;
                return -1
            },
            K = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
            L = "[\\x20\\t\\r\\n\\f]",
            M = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",
            N = M.replace("w", "w#"),
            O = "\\[" + L + "*(" + M + ")(?:" + L + "*([*^$|!~]?=)" + L + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + N + "))|)" + L + "*\\]",
            P = ":(" + M + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + O + ")*)|.*)\\)|)",
            Q = new RegExp(L + "+", "g"),
            R = new RegExp("^" + L + "+|((?:^|[^\\\\])(?:\\\\.)*)" + L + "+$", "g"),
            S = new RegExp("^" + L + "*," + L + "*"),
            T = new RegExp("^" + L + "*([>+~]|" + L + ")" + L + "*"),
            U = new RegExp("=" + L + "*([^\\]'\"]*?)" + L + "*\\]", "g"),
            V = new RegExp(P),
            W = new RegExp("^" + N + "$"),
            X = {
                ID: new RegExp("^#(" + M + ")"),
                CLASS: new RegExp("^\\.(" + M + ")"),
                TAG: new RegExp("^(" + M.replace("w", "w*") + ")"),
                ATTR: new RegExp("^" + O),
                PSEUDO: new RegExp("^" + P),
                CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + L + "*(even|odd|(([+-]|)(\\d*)n|)" + L + "*(?:([+-]|)" + L + "*(\\d+)|))" + L + "*\\)|)", "i"),
                bool: new RegExp("^(?:" + K + ")$", "i"),
                needsContext: new RegExp("^" + L + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + L + "*((?:-\\d)?\\d*)" + L + "*\\)|)(?=[^-]|$)", "i")
            },
            Y = /^(?:input|select|textarea|button)$/i,
            Z = /^h\d$/i,
            $ = /^[^{]+\{\s*\[native \w/,
            _ = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
            aa = /[+~]/,
            ba = /'|\\/g,
            ca = new RegExp("\\\\([\\da-f]{1,6}" + L + "?|(" + L + ")|.)", "ig"),
            da = function(a, b, c) {
                var d = "0x" + b - 65536;
                return d !== d || c ? b : 0 > d ? String.fromCharCode(d + 65536) : String.fromCharCode(d >> 10 | 55296, 1023 & d | 56320)
            },
            ea = function() {
                m()
            };
        try {
            H.apply(E = I.call(v.childNodes), v.childNodes), E[v.childNodes.length].nodeType
        } catch (fa) {
            H = {
                apply: E.length ? function(a, b) {
                    G.apply(a, I.call(b))
                } : function(a, b) {
                    var c = a.length,
                        d = 0;
                    while (a[c++] = b[d++]);
                    a.length = c - 1
                }
            }
        }

        function ga(a, b, d, e) {
            var f, h, j, k, l, o, r, s, w, x;
            if ((b ? b.ownerDocument || b : v) !== n && m(b), b = b || n, d = d || [], k = b.nodeType, "string" != typeof a || !a || 1 !== k && 9 !== k && 11 !== k) return d;
            if (!e && p) {
                if (11 !== k && (f = _.exec(a)))
                    if (j = f[1]) {
                        if (9 === k) {
                            if (h = b.getElementById(j), !h || !h.parentNode) return d;
                            if (h.id === j) return d.push(h), d
                        } else if (b.ownerDocument && (h = b.ownerDocument.getElementById(j)) && t(b, h) && h.id === j) return d.push(h), d
                    } else {
                        if (f[2]) return H.apply(d, b.getElementsByTagName(a)), d;
                        if ((j = f[3]) && c.getElementsByClassName) return H.apply(d, b.getElementsByClassName(j)), d
                    }
                if (c.qsa && (!q || !q.test(a))) {
                    if (s = r = u, w = b, x = 1 !== k && a, 1 === k && "object" !== b.nodeName.toLowerCase()) {
                        o = g(a), (r = b.getAttribute("id")) ? s = r.replace(ba, "\\$&") : b.setAttribute("id", s), s = "[id='" + s + "'] ", l = o.length;
                        while (l--) o[l] = s + ra(o[l]);
                        w = aa.test(a) && pa(b.parentNode) || b, x = o.join(",")
                    }
                    if (x) try {
                        return H.apply(d, w.querySelectorAll(x)), d
                    } catch (y) {} finally {
                        r || b.removeAttribute("id")
                    }
                }
            }
            return i(a.replace(R, "$1"), b, d, e)
        }

        function ha() {
            var a = [];

            function b(c, e) {
                return a.push(c + " ") > d.cacheLength && delete b[a.shift()], b[c + " "] = e
            }
            return b
        }

        function ia(a) {
            return a[u] = !0, a
        }

        function ja(a) {
            var b = n.createElement("div");
            try {
                return !!a(b)
            } catch (c) {
                return !1
            } finally {
                b.parentNode && b.parentNode.removeChild(b), b = null
            }
        }

        function ka(a, b) {
            var c = a.split("|"),
                e = a.length;
            while (e--) d.attrHandle[c[e]] = b
        }

        function la(a, b) {
            var c = b && a,
                d = c && 1 === a.nodeType && 1 === b.nodeType && (~b.sourceIndex || C) - (~a.sourceIndex || C);
            if (d) return d;
            if (c)
                while (c = c.nextSibling)
                    if (c === b) return -1;
            return a ? 1 : -1
        }

        function ma(a) {
            return function(b) {
                var c = b.nodeName.toLowerCase();
                return "input" === c && b.type === a
            }
        }

        function na(a) {
            return function(b) {
                var c = b.nodeName.toLowerCase();
                return ("input" === c || "button" === c) && b.type === a
            }
        }

        function oa(a) {
            return ia(function(b) {
                return b = +b, ia(function(c, d) {
                    var e, f = a([], c.length, b),
                        g = f.length;
                    while (g--) c[e = f[g]] && (c[e] = !(d[e] = c[e]))
                })
            })
        }

        function pa(a) {
            return a && "undefined" != typeof a.getElementsByTagName && a
        }
        c = ga.support = {}, f = ga.isXML = function(a) {
            var b = a && (a.ownerDocument || a).documentElement;
            return b ? "HTML" !== b.nodeName : !1
        }, m = ga.setDocument = function(a) {
            var b, e, g = a ? a.ownerDocument || a : v;
            return g !== n && 9 === g.nodeType && g.documentElement ? (n = g, o = g.documentElement, e = g.defaultView, e && e !== e.top && (e.addEventListener ? e.addEventListener("unload", ea, !1) : e.attachEvent && e.attachEvent("onunload", ea)), p = !f(g), c.attributes = ja(function(a) {
                return a.className = "i", !a.getAttribute("className")
            }), c.getElementsByTagName = ja(function(a) {
                return a.appendChild(g.createComment("")), !a.getElementsByTagName("*").length
            }), c.getElementsByClassName = $.test(g.getElementsByClassName), c.getById = ja(function(a) {
                return o.appendChild(a).id = u, !g.getElementsByName || !g.getElementsByName(u).length
            }), c.getById ? (d.find.ID = function(a, b) {
                if ("undefined" != typeof b.getElementById && p) {
                    var c = b.getElementById(a);
                    return c && c.parentNode ? [c] : []
                }
            }, d.filter.ID = function(a) {
                var b = a.replace(ca, da);
                return function(a) {
                    return a.getAttribute("id") === b
                }
            }) : (delete d.find.ID, d.filter.ID = function(a) {
                var b = a.replace(ca, da);
                return function(a) {
                    var c = "undefined" != typeof a.getAttributeNode && a.getAttributeNode("id");
                    return c && c.value === b
                }
            }), d.find.TAG = c.getElementsByTagName ? function(a, b) {
                return "undefined" != typeof b.getElementsByTagName ? b.getElementsByTagName(a) : c.qsa ? b.querySelectorAll(a) : void 0
            } : function(a, b) {
                var c, d = [],
                    e = 0,
                    f = b.getElementsByTagName(a);
                if ("*" === a) {
                    while (c = f[e++]) 1 === c.nodeType && d.push(c);
                    return d
                }
                return f
            }, d.find.CLASS = c.getElementsByClassName && function(a, b) {
                return p ? b.getElementsByClassName(a) : void 0
            }, r = [], q = [], (c.qsa = $.test(g.querySelectorAll)) && (ja(function(a) {
                o.appendChild(a).innerHTML = "<a id='" + u + "'></a><select id='" + u + "-\f]' msallowcapture=''><option selected=''></option></select>", a.querySelectorAll("[msallowcapture^='']").length && q.push("[*^$]=" + L + "*(?:''|\"\")"), a.querySelectorAll("[selected]").length || q.push("\\[" + L + "*(?:value|" + K + ")"), a.querySelectorAll("[id~=" + u + "-]").length || q.push("~="), a.querySelectorAll(":checked").length || q.push(":checked"), a.querySelectorAll("a#" + u + "+*").length || q.push(".#.+[+~]")
            }), ja(function(a) {
                var b = g.createElement("input");
                b.setAttribute("type", "hidden"), a.appendChild(b).setAttribute("name", "D"), a.querySelectorAll("[name=d]").length && q.push("name" + L + "*[*^$|!~]?="), a.querySelectorAll(":enabled").length || q.push(":enabled", ":disabled"), a.querySelectorAll("*,:x"), q.push(",.*:")
            })), (c.matchesSelector = $.test(s = o.matches || o.webkitMatchesSelector || o.mozMatchesSelector || o.oMatchesSelector || o.msMatchesSelector)) && ja(function(a) {
                c.disconnectedMatch = s.call(a, "div"), s.call(a, "[s!='']:x"), r.push("!=", P)
            }), q = q.length && new RegExp(q.join("|")), r = r.length && new RegExp(r.join("|")), b = $.test(o.compareDocumentPosition), t = b || $.test(o.contains) ? function(a, b) {
                var c = 9 === a.nodeType ? a.documentElement : a,
                    d = b && b.parentNode;
                return a === d || !(!d || 1 !== d.nodeType || !(c.contains ? c.contains(d) : a.compareDocumentPosition && 16 & a.compareDocumentPosition(d)))
            } : function(a, b) {
                if (b)
                    while (b = b.parentNode)
                        if (b === a) return !0;
                return !1
            }, B = b ? function(a, b) {
                if (a === b) return l = !0, 0;
                var d = !a.compareDocumentPosition - !b.compareDocumentPosition;
                return d ? d : (d = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1, 1 & d || !c.sortDetached && b.compareDocumentPosition(a) === d ? a === g || a.ownerDocument === v && t(v, a) ? -1 : b === g || b.ownerDocument === v && t(v, b) ? 1 : k ? J(k, a) - J(k, b) : 0 : 4 & d ? -1 : 1)
            } : function(a, b) {
                if (a === b) return l = !0, 0;
                var c, d = 0,
                    e = a.parentNode,
                    f = b.parentNode,
                    h = [a],
                    i = [b];
                if (!e || !f) return a === g ? -1 : b === g ? 1 : e ? -1 : f ? 1 : k ? J(k, a) - J(k, b) : 0;
                if (e === f) return la(a, b);
                c = a;
                while (c = c.parentNode) h.unshift(c);
                c = b;
                while (c = c.parentNode) i.unshift(c);
                while (h[d] === i[d]) d++;
                return d ? la(h[d], i[d]) : h[d] === v ? -1 : i[d] === v ? 1 : 0
            }, g) : n
        }, ga.matches = function(a, b) {
            return ga(a, null, null, b)
        }, ga.matchesSelector = function(a, b) {
            if ((a.ownerDocument || a) !== n && m(a), b = b.replace(U, "='$1']"), !(!c.matchesSelector || !p || r && r.test(b) || q && q.test(b))) try {
                var d = s.call(a, b);
                if (d || c.disconnectedMatch || a.document && 11 !== a.document.nodeType) return d
            } catch (e) {}
            return ga(b, n, null, [a]).length > 0
        }, ga.contains = function(a, b) {
            return (a.ownerDocument || a) !== n && m(a), t(a, b)
        }, ga.attr = function(a, b) {
            (a.ownerDocument || a) !== n && m(a);
            var e = d.attrHandle[b.toLowerCase()],
                f = e && D.call(d.attrHandle, b.toLowerCase()) ? e(a, b, !p) : void 0;
            return void 0 !== f ? f : c.attributes || !p ? a.getAttribute(b) : (f = a.getAttributeNode(b)) && f.specified ? f.value : null
        }, ga.error = function(a) {
            throw new Error("Syntax error, unrecognized expression: " + a)
        }, ga.uniqueSort = function(a) {
            var b, d = [],
                e = 0,
                f = 0;
            if (l = !c.detectDuplicates, k = !c.sortStable && a.slice(0), a.sort(B), l) {
                while (b = a[f++]) b === a[f] && (e = d.push(f));
                while (e--) a.splice(d[e], 1)
            }
            return k = null, a
        }, e = ga.getText = function(a) {
            var b, c = "",
                d = 0,
                f = a.nodeType;
            if (f) {
                if (1 === f || 9 === f || 11 === f) {
                    if ("string" == typeof a.textContent) return a.textContent;
                    for (a = a.firstChild; a; a = a.nextSibling) c += e(a)
                } else if (3 === f || 4 === f) return a.nodeValue
            } else
                while (b = a[d++]) c += e(b);
            return c
        }, d = ga.selectors = {
            cacheLength: 50,
            createPseudo: ia,
            match: X,
            attrHandle: {},
            find: {},
            relative: {
                ">": {
                    dir: "parentNode",
                    first: !0
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: !0
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                ATTR: function(a) {
                    return a[1] = a[1].replace(ca, da), a[3] = (a[3] || a[4] || a[5] || "").replace(ca, da), "~=" === a[2] && (a[3] = " " + a[3] + " "), a.slice(0, 4)
                },
                CHILD: function(a) {
                    return a[1] = a[1].toLowerCase(), "nth" === a[1].slice(0, 3) ? (a[3] || ga.error(a[0]), a[4] = +(a[4] ? a[5] + (a[6] || 1) : 2 * ("even" === a[3] || "odd" === a[3])), a[5] = +(a[7] + a[8] || "odd" === a[3])) : a[3] && ga.error(a[0]), a
                },
                PSEUDO: function(a) {
                    var b, c = !a[6] && a[2];
                    return X.CHILD.test(a[0]) ? null : (a[3] ? a[2] = a[4] || a[5] || "" : c && V.test(c) && (b = g(c, !0)) && (b = c.indexOf(")", c.length - b) - c.length) && (a[0] = a[0].slice(0, b), a[2] = c.slice(0, b)), a.slice(0, 3))
                }
            },
            filter: {
                TAG: function(a) {
                    var b = a.replace(ca, da).toLowerCase();
                    return "*" === a ? function() {
                        return !0
                    } : function(a) {
                        return a.nodeName && a.nodeName.toLowerCase() === b
                    }
                },
                CLASS: function(a) {
                    var b = y[a + " "];
                    return b || (b = new RegExp("(^|" + L + ")" + a + "(" + L + "|$)")) && y(a, function(a) {
                        return b.test("string" == typeof a.className && a.className || "undefined" != typeof a.getAttribute && a.getAttribute("class") || "")
                    })
                },
                ATTR: function(a, b, c) {
                    return function(d) {
                        var e = ga.attr(d, a);
                        return null == e ? "!=" === b : b ? (e += "", "=" === b ? e === c : "!=" === b ? e !== c : "^=" === b ? c && 0 === e.indexOf(c) : "*=" === b ? c && e.indexOf(c) > -1 : "$=" === b ? c && e.slice(-c.length) === c : "~=" === b ? (" " + e.replace(Q, " ") + " ").indexOf(c) > -1 : "|=" === b ? e === c || e.slice(0, c.length + 1) === c + "-" : !1) : !0
                    }
                },
                CHILD: function(a, b, c, d, e) {
                    var f = "nth" !== a.slice(0, 3),
                        g = "last" !== a.slice(-4),
                        h = "of-type" === b;
                    return 1 === d && 0 === e ? function(a) {
                        return !!a.parentNode
                    } : function(b, c, i) {
                        var j, k, l, m, n, o, p = f !== g ? "nextSibling" : "previousSibling",
                            q = b.parentNode,
                            r = h && b.nodeName.toLowerCase(),
                            s = !i && !h;
                        if (q) {
                            if (f) {
                                while (p) {
                                    l = b;
                                    while (l = l[p])
                                        if (h ? l.nodeName.toLowerCase() === r : 1 === l.nodeType) return !1;
                                    o = p = "only" === a && !o && "nextSibling"
                                }
                                return !0
                            }
                            if (o = [g ? q.firstChild : q.lastChild], g && s) {
                                k = q[u] || (q[u] = {}), j = k[a] || [], n = j[0] === w && j[1], m = j[0] === w && j[2], l = n && q.childNodes[n];
                                while (l = ++n && l && l[p] || (m = n = 0) || o.pop())
                                    if (1 === l.nodeType && ++m && l === b) {
                                        k[a] = [w, n, m];
                                        break
                                    }
                            } else if (s && (j = (b[u] || (b[u] = {}))[a]) && j[0] === w) m = j[1];
                            else
                                while (l = ++n && l && l[p] || (m = n = 0) || o.pop())
                                    if ((h ? l.nodeName.toLowerCase() === r : 1 === l.nodeType) && ++m && (s && ((l[u] || (l[u] = {}))[a] = [w, m]), l === b)) break;
                            return m -= e, m === d || m % d === 0 && m / d >= 0
                        }
                    }
                },
                PSEUDO: function(a, b) {
                    var c, e = d.pseudos[a] || d.setFilters[a.toLowerCase()] || ga.error("unsupported pseudo: " + a);
                    return e[u] ? e(b) : e.length > 1 ? (c = [a, a, "", b], d.setFilters.hasOwnProperty(a.toLowerCase()) ? ia(function(a, c) {
                        var d, f = e(a, b),
                            g = f.length;
                        while (g--) d = J(a, f[g]), a[d] = !(c[d] = f[g])
                    }) : function(a) {
                        return e(a, 0, c)
                    }) : e
                }
            },
            pseudos: {
                not: ia(function(a) {
                    var b = [],
                        c = [],
                        d = h(a.replace(R, "$1"));
                    return d[u] ? ia(function(a, b, c, e) {
                        var f, g = d(a, null, e, []),
                            h = a.length;
                        while (h--)(f = g[h]) && (a[h] = !(b[h] = f))
                    }) : function(a, e, f) {
                        return b[0] = a, d(b, null, f, c), b[0] = null, !c.pop()
                    }
                }),
                has: ia(function(a) {
                    return function(b) {
                        return ga(a, b).length > 0
                    }
                }),
                contains: ia(function(a) {
                    return a = a.replace(ca, da),
                        function(b) {
                            return (b.textContent || b.innerText || e(b)).indexOf(a) > -1
                        }
                }),
                lang: ia(function(a) {
                    return W.test(a || "") || ga.error("unsupported lang: " + a), a = a.replace(ca, da).toLowerCase(),
                        function(b) {
                            var c;
                            do
                                if (c = p ? b.lang : b.getAttribute("xml:lang") || b.getAttribute("lang")) return c = c.toLowerCase(), c === a || 0 === c.indexOf(a + "-");
                            while ((b = b.parentNode) && 1 === b.nodeType);
                            return !1
                        }
                }),
                target: function(b) {
                    var c = a.location && a.location.hash;
                    return c && c.slice(1) === b.id
                },
                root: function(a) {
                    return a === o
                },
                focus: function(a) {
                    return a === n.activeElement && (!n.hasFocus || n.hasFocus()) && !!(a.type || a.href || ~a.tabIndex)
                },
                enabled: function(a) {
                    return a.disabled === !1
                },
                disabled: function(a) {
                    return a.disabled === !0
                },
                checked: function(a) {
                    var b = a.nodeName.toLowerCase();
                    return "input" === b && !!a.checked || "option" === b && !!a.selected
                },
                selected: function(a) {
                    return a.parentNode && a.parentNode.selectedIndex, a.selected === !0
                },
                empty: function(a) {
                    for (a = a.firstChild; a; a = a.nextSibling)
                        if (a.nodeType < 6) return !1;
                    return !0
                },
                parent: function(a) {
                    return !d.pseudos.empty(a)
                },
                header: function(a) {
                    return Z.test(a.nodeName)
                },
                input: function(a) {
                    return Y.test(a.nodeName)
                },
                button: function(a) {
                    var b = a.nodeName.toLowerCase();
                    return "input" === b && "button" === a.type || "button" === b
                },
                text: function(a) {
                    var b;
                    return "input" === a.nodeName.toLowerCase() && "text" === a.type && (null == (b = a.getAttribute("type")) || "text" === b.toLowerCase())
                },
                first: oa(function() {
                    return [0]
                }),
                last: oa(function(a, b) {
                    return [b - 1]
                }),
                eq: oa(function(a, b, c) {
                    return [0 > c ? c + b : c]
                }),
                even: oa(function(a, b) {
                    for (var c = 0; b > c; c += 2) a.push(c);
                    return a
                }),
                odd: oa(function(a, b) {
                    for (var c = 1; b > c; c += 2) a.push(c);
                    return a
                }),
                lt: oa(function(a, b, c) {
                    for (var d = 0 > c ? c + b : c; --d >= 0;) a.push(d);
                    return a
                }),
                gt: oa(function(a, b, c) {
                    for (var d = 0 > c ? c + b : c; ++d < b;) a.push(d);
                    return a
                })
            }
        }, d.pseudos.nth = d.pseudos.eq;
        for (b in {
                radio: !0,
                checkbox: !0,
                file: !0,
                password: !0,
                image: !0
            }) d.pseudos[b] = ma(b);
        for (b in {
                submit: !0,
                reset: !0
            }) d.pseudos[b] = na(b);

        function qa() {}
        qa.prototype = d.filters = d.pseudos, d.setFilters = new qa, g = ga.tokenize = function(a, b) {
            var c, e, f, g, h, i, j, k = z[a + " "];
            if (k) return b ? 0 : k.slice(0);
            h = a, i = [], j = d.preFilter;
            while (h) {
                (!c || (e = S.exec(h))) && (e && (h = h.slice(e[0].length) || h), i.push(f = [])), c = !1, (e = T.exec(h)) && (c = e.shift(), f.push({
                    value: c,
                    type: e[0].replace(R, " ")
                }), h = h.slice(c.length));
                for (g in d.filter) !(e = X[g].exec(h)) || j[g] && !(e = j[g](e)) || (c = e.shift(), f.push({
                    value: c,
                    type: g,
                    matches: e
                }), h = h.slice(c.length));
                if (!c) break
            }
            return b ? h.length : h ? ga.error(a) : z(a, i).slice(0)
        };

        function ra(a) {
            for (var b = 0, c = a.length, d = ""; c > b; b++) d += a[b].value;
            return d
        }

        function sa(a, b, c) {
            var d = b.dir,
                e = c && "parentNode" === d,
                f = x++;
            return b.first ? function(b, c, f) {
                while (b = b[d])
                    if (1 === b.nodeType || e) return a(b, c, f)
            } : function(b, c, g) {
                var h, i, j = [w, f];
                if (g) {
                    while (b = b[d])
                        if ((1 === b.nodeType || e) && a(b, c, g)) return !0
                } else
                    while (b = b[d])
                        if (1 === b.nodeType || e) {
                            if (i = b[u] || (b[u] = {}), (h = i[d]) && h[0] === w && h[1] === f) return j[2] = h[2];
                            if (i[d] = j, j[2] = a(b, c, g)) return !0
                        }
            }
        }

        function ta(a) {
            return a.length > 1 ? function(b, c, d) {
                var e = a.length;
                while (e--)
                    if (!a[e](b, c, d)) return !1;
                return !0
            } : a[0]
        }

        function ua(a, b, c) {
            for (var d = 0, e = b.length; e > d; d++) ga(a, b[d], c);
            return c
        }

        function va(a, b, c, d, e) {
            for (var f, g = [], h = 0, i = a.length, j = null != b; i > h; h++)(f = a[h]) && (!c || c(f, d, e)) && (g.push(f), j && b.push(h));
            return g
        }

        function wa(a, b, c, d, e, f) {
            return d && !d[u] && (d = wa(d)), e && !e[u] && (e = wa(e, f)), ia(function(f, g, h, i) {
                var j, k, l, m = [],
                    n = [],
                    o = g.length,
                    p = f || ua(b || "*", h.nodeType ? [h] : h, []),
                    q = !a || !f && b ? p : va(p, m, a, h, i),
                    r = c ? e || (f ? a : o || d) ? [] : g : q;
                if (c && c(q, r, h, i), d) {
                    j = va(r, n), d(j, [], h, i), k = j.length;
                    while (k--)(l = j[k]) && (r[n[k]] = !(q[n[k]] = l))
                }
                if (f) {
                    if (e || a) {
                        if (e) {
                            j = [], k = r.length;
                            while (k--)(l = r[k]) && j.push(q[k] = l);
                            e(null, r = [], j, i)
                        }
                        k = r.length;
                        while (k--)(l = r[k]) && (j = e ? J(f, l) : m[k]) > -1 && (f[j] = !(g[j] = l))
                    }
                } else r = va(r === g ? r.splice(o, r.length) : r), e ? e(null, g, r, i) : H.apply(g, r)
            })
        }

        function xa(a) {
            for (var b, c, e, f = a.length, g = d.relative[a[0].type], h = g || d.relative[" "], i = g ? 1 : 0, k = sa(function(a) {
                    return a === b
                }, h, !0), l = sa(function(a) {
                    return J(b, a) > -1
                }, h, !0), m = [function(a, c, d) {
                    var e = !g && (d || c !== j) || ((b = c).nodeType ? k(a, c, d) : l(a, c, d));
                    return b = null, e
                }]; f > i; i++)
                if (c = d.relative[a[i].type]) m = [sa(ta(m), c)];
                else {
                    if (c = d.filter[a[i].type].apply(null, a[i].matches), c[u]) {
                        for (e = ++i; f > e; e++)
                            if (d.relative[a[e].type]) break;
                        return wa(i > 1 && ta(m), i > 1 && ra(a.slice(0, i - 1).concat({
                            value: " " === a[i - 2].type ? "*" : ""
                        })).replace(R, "$1"), c, e > i && xa(a.slice(i, e)), f > e && xa(a = a.slice(e)), f > e && ra(a))
                    }
                    m.push(c)
                }
            return ta(m)
        }

        function ya(a, b) {
            var c = b.length > 0,
                e = a.length > 0,
                f = function(f, g, h, i, k) {
                    var l, m, o, p = 0,
                        q = "0",
                        r = f && [],
                        s = [],
                        t = j,
                        u = f || e && d.find.TAG("*", k),
                        v = w += null == t ? 1 : Math.random() || .1,
                        x = u.length;
                    for (k && (j = g !== n && g); q !== x && null != (l = u[q]); q++) {
                        if (e && l) {
                            m = 0;
                            while (o = a[m++])
                                if (o(l, g, h)) {
                                    i.push(l);
                                    break
                                }
                            k && (w = v)
                        }
                        c && ((l = !o && l) && p--, f && r.push(l))
                    }
                    if (p += q, c && q !== p) {
                        m = 0;
                        while (o = b[m++]) o(r, s, g, h);
                        if (f) {
                            if (p > 0)
                                while (q--) r[q] || s[q] || (s[q] = F.call(i));
                            s = va(s)
                        }
                        H.apply(i, s), k && !f && s.length > 0 && p + b.length > 1 && ga.uniqueSort(i)
                    }
                    return k && (w = v, j = t), r
                };
            return c ? ia(f) : f
        }
        return h = ga.compile = function(a, b) {
            var c, d = [],
                e = [],
                f = A[a + " "];
            if (!f) {
                b || (b = g(a)), c = b.length;
                while (c--) f = xa(b[c]), f[u] ? d.push(f) : e.push(f);
                f = A(a, ya(e, d)), f.selector = a
            }
            return f
        }, i = ga.select = function(a, b, e, f) {
            var i, j, k, l, m, n = "function" == typeof a && a,
                o = !f && g(a = n.selector || a);
            if (e = e || [], 1 === o.length) {
                if (j = o[0] = o[0].slice(0), j.length > 2 && "ID" === (k = j[0]).type && c.getById && 9 === b.nodeType && p && d.relative[j[1].type]) {
                    if (b = (d.find.ID(k.matches[0].replace(ca, da), b) || [])[0], !b) return e;
                    n && (b = b.parentNode), a = a.slice(j.shift().value.length)
                }
                i = X.needsContext.test(a) ? 0 : j.length;
                while (i--) {
                    if (k = j[i], d.relative[l = k.type]) break;
                    if ((m = d.find[l]) && (f = m(k.matches[0].replace(ca, da), aa.test(j[0].type) && pa(b.parentNode) || b))) {
                        if (j.splice(i, 1), a = f.length && ra(j), !a) return H.apply(e, f), e;
                        break
                    }
                }
            }
            return (n || h(a, o))(f, b, !p, e, aa.test(a) && pa(b.parentNode) || b), e
        }, c.sortStable = u.split("").sort(B).join("") === u, c.detectDuplicates = !!l, m(), c.sortDetached = ja(function(a) {
            return 1 & a.compareDocumentPosition(n.createElement("div"))
        }), ja(function(a) {
            return a.innerHTML = "<a href='#'></a>", "#" === a.firstChild.getAttribute("href")
        }) || ka("type|href|height|width", function(a, b, c) {
            return c ? void 0 : a.getAttribute(b, "type" === b.toLowerCase() ? 1 : 2)
        }), c.attributes && ja(function(a) {
            return a.innerHTML = "<input/>", a.firstChild.setAttribute("value", ""), "" === a.firstChild.getAttribute("value")
        }) || ka("value", function(a, b, c) {
            return c || "input" !== a.nodeName.toLowerCase() ? void 0 : a.defaultValue
        }), ja(function(a) {
            return null == a.getAttribute("disabled")
        }) || ka(K, function(a, b, c) {
            var d;
            return c ? void 0 : a[b] === !0 ? b.toLowerCase() : (d = a.getAttributeNode(b)) && d.specified ? d.value : null
        }), ga
    }(a);
    m.find = s, m.expr = s.selectors, m.expr[":"] = m.expr.pseudos, m.unique = s.uniqueSort, m.text = s.getText, m.isXMLDoc = s.isXML, m.contains = s.contains;
    var t = m.expr.match.needsContext,
        u = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
        v = /^.[^:#\[\.,]*$/;

    function w(a, b, c) {
        if (m.isFunction(b)) return m.grep(a, function(a, d) {
            return !!b.call(a, d, a) !== c
        });
        if (b.nodeType) return m.grep(a, function(a) {
            return a === b !== c
        });
        if ("string" == typeof b) {
            if (v.test(b)) return m.filter(b, a, c);
            b = m.filter(b, a)
        }
        return m.grep(a, function(a) {
            return m.inArray(a, b) >= 0 !== c
        })
    }
    m.filter = function(a, b, c) {
        var d = b[0];
        return c && (a = ":not(" + a + ")"), 1 === b.length && 1 === d.nodeType ? m.find.matchesSelector(d, a) ? [d] : [] : m.find.matches(a, m.grep(b, function(a) {
            return 1 === a.nodeType
        }))
    }, m.fn.extend({
        find: function(a) {
            var b, c = [],
                d = this,
                e = d.length;
            if ("string" != typeof a) return this.pushStack(m(a).filter(function() {
                for (b = 0; e > b; b++)
                    if (m.contains(d[b], this)) return !0
            }));
            for (b = 0; e > b; b++) m.find(a, d[b], c);
            return c = this.pushStack(e > 1 ? m.unique(c) : c), c.selector = this.selector ? this.selector + " " + a : a, c
        },
        filter: function(a) {
            return this.pushStack(w(this, a || [], !1))
        },
        not: function(a) {
            return this.pushStack(w(this, a || [], !0))
        },
        is: function(a) {
            return !!w(this, "string" == typeof a && t.test(a) ? m(a) : a || [], !1).length
        }
    });
    var x, y = a.document,
        z = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,
        A = m.fn.init = function(a, b) {
            var c, d;
            if (!a) return this;
            if ("string" == typeof a) {
                if (c = "<" === a.charAt(0) && ">" === a.charAt(a.length - 1) && a.length >= 3 ? [null, a, null] : z.exec(a), !c || !c[1] && b) return !b || b.jquery ? (b || x).find(a) : this.constructor(b).find(a);
                if (c[1]) {
                    if (b = b instanceof m ? b[0] : b, m.merge(this, m.parseHTML(c[1], b && b.nodeType ? b.ownerDocument || b : y, !0)), u.test(c[1]) && m.isPlainObject(b))
                        for (c in b) m.isFunction(this[c]) ? this[c](b[c]) : this.attr(c, b[c]);
                    return this
                }
                if (d = y.getElementById(c[2]), d && d.parentNode) {
                    if (d.id !== c[2]) return x.find(a);
                    this.length = 1, this[0] = d
                }
                return this.context = y, this.selector = a, this
            }
            return a.nodeType ? (this.context = this[0] = a, this.length = 1, this) : m.isFunction(a) ? "undefined" != typeof x.ready ? x.ready(a) : a(m) : (void 0 !== a.selector && (this.selector = a.selector, this.context = a.context), m.makeArray(a, this))
        };
    A.prototype = m.fn, x = m(y);
    var B = /^(?:parents|prev(?:Until|All))/,
        C = {
            children: !0,
            contents: !0,
            next: !0,
            prev: !0
        };
    m.extend({
        dir: function(a, b, c) {
            var d = [],
                e = a[b];
            while (e && 9 !== e.nodeType && (void 0 === c || 1 !== e.nodeType || !m(e).is(c))) 1 === e.nodeType && d.push(e), e = e[b];
            return d
        },
        sibling: function(a, b) {
            for (var c = []; a; a = a.nextSibling) 1 === a.nodeType && a !== b && c.push(a);
            return c
        }
    }), m.fn.extend({
        has: function(a) {
            var b, c = m(a, this),
                d = c.length;
            return this.filter(function() {
                for (b = 0; d > b; b++)
                    if (m.contains(this, c[b])) return !0
            })
        },
        closest: function(a, b) {
            for (var c, d = 0, e = this.length, f = [], g = t.test(a) || "string" != typeof a ? m(a, b || this.context) : 0; e > d; d++)
                for (c = this[d]; c && c !== b; c = c.parentNode)
                    if (c.nodeType < 11 && (g ? g.index(c) > -1 : 1 === c.nodeType && m.find.matchesSelector(c, a))) {
                        f.push(c);
                        break
                    }
            return this.pushStack(f.length > 1 ? m.unique(f) : f)
        },
        index: function(a) {
            return a ? "string" == typeof a ? m.inArray(this[0], m(a)) : m.inArray(a.jquery ? a[0] : a, this) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
        },
        add: function(a, b) {
            return this.pushStack(m.unique(m.merge(this.get(), m(a, b))))
        },
        addBack: function(a) {
            return this.add(null == a ? this.prevObject : this.prevObject.filter(a))
        }
    });

    function D(a, b) {
        do a = a[b]; while (a && 1 !== a.nodeType);
        return a
    }
    m.each({
        parent: function(a) {
            var b = a.parentNode;
            return b && 11 !== b.nodeType ? b : null
        },
        parents: function(a) {
            return m.dir(a, "parentNode")
        },
        parentsUntil: function(a, b, c) {
            return m.dir(a, "parentNode", c)
        },
        next: function(a) {
            return D(a, "nextSibling")
        },
        prev: function(a) {
            return D(a, "previousSibling")
        },
        nextAll: function(a) {
            return m.dir(a, "nextSibling")
        },
        prevAll: function(a) {
            return m.dir(a, "previousSibling")
        },
        nextUntil: function(a, b, c) {
            return m.dir(a, "nextSibling", c)
        },
        prevUntil: function(a, b, c) {
            return m.dir(a, "previousSibling", c)
        },
        siblings: function(a) {
            return m.sibling((a.parentNode || {}).firstChild, a)
        },
        children: function(a) {
            return m.sibling(a.firstChild)
        },
        contents: function(a) {
            return m.nodeName(a, "iframe") ? a.contentDocument || a.contentWindow.document : m.merge([], a.childNodes)
        }
    }, function(a, b) {
        m.fn[a] = function(c, d) {
            var e = m.map(this, b, c);
            return "Until" !== a.slice(-5) && (d = c), d && "string" == typeof d && (e = m.filter(d, e)), this.length > 1 && (C[a] || (e = m.unique(e)), B.test(a) && (e = e.reverse())), this.pushStack(e)
        }
    });
    var E = /\S+/g,
        F = {};

    function G(a) {
        var b = F[a] = {};
        return m.each(a.match(E) || [], function(a, c) {
            b[c] = !0
        }), b
    }
    m.Callbacks = function(a) {
        a = "string" == typeof a ? F[a] || G(a) : m.extend({}, a);
        var b, c, d, e, f, g, h = [],
            i = !a.once && [],
            j = function(l) {
                for (c = a.memory && l, d = !0, f = g || 0, g = 0, e = h.length, b = !0; h && e > f; f++)
                    if (h[f].apply(l[0], l[1]) === !1 && a.stopOnFalse) {
                        c = !1;
                        break
                    }
                b = !1, h && (i ? i.length && j(i.shift()) : c ? h = [] : k.disable())
            },
            k = {
                add: function() {
                    if (h) {
                        var d = h.length;
                        ! function f(b) {
                            m.each(b, function(b, c) {
                                var d = m.type(c);
                                "function" === d ? a.unique && k.has(c) || h.push(c) : c && c.length && "string" !== d && f(c)
                            })
                        }(arguments), b ? e = h.length : c && (g = d, j(c))
                    }
                    return this
                },
                remove: function() {
                    return h && m.each(arguments, function(a, c) {
                        var d;
                        while ((d = m.inArray(c, h, d)) > -1) h.splice(d, 1), b && (e >= d && e--, f >= d && f--)
                    }), this
                },
                has: function(a) {
                    return a ? m.inArray(a, h) > -1 : !(!h || !h.length)
                },
                empty: function() {
                    return h = [], e = 0, this
                },
                disable: function() {
                    return h = i = c = void 0, this
                },
                disabled: function() {
                    return !h
                },
                lock: function() {
                    return i = void 0, c || k.disable(), this
                },
                locked: function() {
                    return !i
                },
                fireWith: function(a, c) {
                    return !h || d && !i || (c = c || [], c = [a, c.slice ? c.slice() : c], b ? i.push(c) : j(c)), this
                },
                fire: function() {
                    return k.fireWith(this, arguments), this
                },
                fired: function() {
                    return !!d
                }
            };
        return k
    }, m.extend({
        Deferred: function(a) {
            var b = [
                    ["resolve", "done", m.Callbacks("once memory"), "resolved"],
                    ["reject", "fail", m.Callbacks("once memory"), "rejected"],
                    ["notify", "progress", m.Callbacks("memory")]
                ],
                c = "pending",
                d = {
                    state: function() {
                        return c
                    },
                    always: function() {
                        return e.done(arguments).fail(arguments), this
                    },
                    then: function() {
                        var a = arguments;
                        return m.Deferred(function(c) {
                            m.each(b, function(b, f) {
                                var g = m.isFunction(a[b]) && a[b];
                                e[f[1]](function() {
                                    var a = g && g.apply(this, arguments);
                                    a && m.isFunction(a.promise) ? a.promise().done(c.resolve).fail(c.reject).progress(c.notify) : c[f[0] + "With"](this === d ? c.promise() : this, g ? [a] : arguments)
                                })
                            }), a = null
                        }).promise()
                    },
                    promise: function(a) {
                        return null != a ? m.extend(a, d) : d
                    }
                },
                e = {};
            return d.pipe = d.then, m.each(b, function(a, f) {
                var g = f[2],
                    h = f[3];
                d[f[1]] = g.add, h && g.add(function() {
                    c = h
                }, b[1 ^ a][2].disable, b[2][2].lock), e[f[0]] = function() {
                    return e[f[0] + "With"](this === e ? d : this, arguments), this
                }, e[f[0] + "With"] = g.fireWith
            }), d.promise(e), a && a.call(e, e), e
        },
        when: function(a) {
            var b = 0,
                c = d.call(arguments),
                e = c.length,
                f = 1 !== e || a && m.isFunction(a.promise) ? e : 0,
                g = 1 === f ? a : m.Deferred(),
                h = function(a, b, c) {
                    return function(e) {
                        b[a] = this, c[a] = arguments.length > 1 ? d.call(arguments) : e, c === i ? g.notifyWith(b, c) : --f || g.resolveWith(b, c)
                    }
                },
                i, j, k;
            if (e > 1)
                for (i = new Array(e), j = new Array(e), k = new Array(e); e > b; b++) c[b] && m.isFunction(c[b].promise) ? c[b].promise().done(h(b, k, c)).fail(g.reject).progress(h(b, j, i)) : --f;
            return f || g.resolveWith(k, c), g.promise()
        }
    });
    var H;
    m.fn.ready = function(a) {
        return m.ready.promise().done(a), this
    }, m.extend({
        isReady: !1,
        readyWait: 1,
        holdReady: function(a) {
            a ? m.readyWait++ : m.ready(!0)
        },
        ready: function(a) {
            if (a === !0 ? !--m.readyWait : !m.isReady) {
                if (!y.body) return setTimeout(m.ready);
                m.isReady = !0, a !== !0 && --m.readyWait > 0 || (H.resolveWith(y, [m]), m.fn.triggerHandler && (m(y).triggerHandler("ready"), m(y).off("ready")))
            }
        }
    });

    function I() {
        y.addEventListener ? (y.removeEventListener("DOMContentLoaded", J, !1), a.removeEventListener("load", J, !1)) : (y.detachEvent("onreadystatechange", J), a.detachEvent("onload", J))
    }

    function J() {
        (y.addEventListener || "load" === event.type || "complete" === y.readyState) && (I(), m.ready())
    }
    m.ready.promise = function(b) {
        if (!H)
            if (H = m.Deferred(), "complete" === y.readyState) setTimeout(m.ready);
            else if (y.addEventListener) y.addEventListener("DOMContentLoaded", J, !1), a.addEventListener("load", J, !1);
        else {
            y.attachEvent("onreadystatechange", J), a.attachEvent("onload", J);
            var c = !1;
            try {
                c = null == a.frameElement && y.documentElement
            } catch (d) {}
            c && c.doScroll && ! function e() {
                if (!m.isReady) {
                    try {
                        c.doScroll("left")
                    } catch (a) {
                        return setTimeout(e, 50)
                    }
                    I(), m.ready()
                }
            }()
        }
        return H.promise(b)
    };
    var K = "undefined",
        L;
    for (L in m(k)) break;
    k.ownLast = "0" !== L, k.inlineBlockNeedsLayout = !1, m(function() {
            var a, b, c, d;
            c = y.getElementsByTagName("body")[0], c && c.style && (b = y.createElement("div"), d = y.createElement("div"), d.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px", c.appendChild(d).appendChild(b), typeof b.style.zoom !== K && (b.style.cssText = "display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1", k.inlineBlockNeedsLayout = a = 3 === b.offsetWidth, a && (c.style.zoom = 1)), c.removeChild(d))
        }),
        function() {
            var a = y.createElement("div");
            if (null == k.deleteExpando) {
                k.deleteExpando = !0;
                try {
                    delete a.test
                } catch (b) {
                    k.deleteExpando = !1
                }
            }
            a = null
        }(), m.acceptData = function(a) {
            var b = m.noData[(a.nodeName + " ").toLowerCase()],
                c = +a.nodeType || 1;
            return 1 !== c && 9 !== c ? !1 : !b || b !== !0 && a.getAttribute("classid") === b
        };
    var M = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
        N = /([A-Z])/g;

    function O(a, b, c) {
        if (void 0 === c && 1 === a.nodeType) {
            var d = "data-" + b.replace(N, "-$1").toLowerCase();
            if (c = a.getAttribute(d), "string" == typeof c) {
                try {
                    c = "true" === c ? !0 : "false" === c ? !1 : "null" === c ? null : +c + "" === c ? +c : M.test(c) ? m.parseJSON(c) : c
                } catch (e) {}
                m.data(a, b, c)
            } else c = void 0
        }
        return c
    }

    function P(a) {
        var b;
        for (b in a)
            if (("data" !== b || !m.isEmptyObject(a[b])) && "toJSON" !== b) return !1;

        return !0
    }

    function Q(a, b, d, e) {
        if (m.acceptData(a)) {
            var f, g, h = m.expando,
                i = a.nodeType,
                j = i ? m.cache : a,
                k = i ? a[h] : a[h] && h;
            if (k && j[k] && (e || j[k].data) || void 0 !== d || "string" != typeof b) return k || (k = i ? a[h] = c.pop() || m.guid++ : h), j[k] || (j[k] = i ? {} : {
                toJSON: m.noop
            }), ("object" == typeof b || "function" == typeof b) && (e ? j[k] = m.extend(j[k], b) : j[k].data = m.extend(j[k].data, b)), g = j[k], e || (g.data || (g.data = {}), g = g.data), void 0 !== d && (g[m.camelCase(b)] = d), "string" == typeof b ? (f = g[b], null == f && (f = g[m.camelCase(b)])) : f = g, f
        }
    }

    function R(a, b, c) {
        if (m.acceptData(a)) {
            var d, e, f = a.nodeType,
                g = f ? m.cache : a,
                h = f ? a[m.expando] : m.expando;
            if (g[h]) {
                if (b && (d = c ? g[h] : g[h].data)) {
                    m.isArray(b) ? b = b.concat(m.map(b, m.camelCase)) : b in d ? b = [b] : (b = m.camelCase(b), b = b in d ? [b] : b.split(" ")), e = b.length;
                    while (e--) delete d[b[e]];
                    if (c ? !P(d) : !m.isEmptyObject(d)) return
                }(c || (delete g[h].data, P(g[h]))) && (f ? m.cleanData([a], !0) : k.deleteExpando || g != g.window ? delete g[h] : g[h] = null)
            }
        }
    }
    m.extend({
        cache: {},
        noData: {
            "applet ": !0,
            "embed ": !0,
            "object ": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"
        },
        hasData: function(a) {
            return a = a.nodeType ? m.cache[a[m.expando]] : a[m.expando], !!a && !P(a)
        },
        data: function(a, b, c) {
            return Q(a, b, c)
        },
        removeData: function(a, b) {
            return R(a, b)
        },
        _data: function(a, b, c) {
            return Q(a, b, c, !0)
        },
        _removeData: function(a, b) {
            return R(a, b, !0)
        }
    }), m.fn.extend({
        data: function(a, b) {
            var c, d, e, f = this[0],
                g = f && f.attributes;
            if (void 0 === a) {
                if (this.length && (e = m.data(f), 1 === f.nodeType && !m._data(f, "parsedAttrs"))) {
                    c = g.length;
                    while (c--) g[c] && (d = g[c].name, 0 === d.indexOf("data-") && (d = m.camelCase(d.slice(5)), O(f, d, e[d])));
                    m._data(f, "parsedAttrs", !0)
                }
                return e
            }
            return "object" == typeof a ? this.each(function() {
                m.data(this, a)
            }) : arguments.length > 1 ? this.each(function() {
                m.data(this, a, b)
            }) : f ? O(f, a, m.data(f, a)) : void 0
        },
        removeData: function(a) {
            return this.each(function() {
                m.removeData(this, a)
            })
        }
    }), m.extend({
        queue: function(a, b, c) {
            var d;
            return a ? (b = (b || "fx") + "queue", d = m._data(a, b), c && (!d || m.isArray(c) ? d = m._data(a, b, m.makeArray(c)) : d.push(c)), d || []) : void 0
        },
        dequeue: function(a, b) {
            b = b || "fx";
            var c = m.queue(a, b),
                d = c.length,
                e = c.shift(),
                f = m._queueHooks(a, b),
                g = function() {
                    m.dequeue(a, b)
                };
            "inprogress" === e && (e = c.shift(), d--), e && ("fx" === b && c.unshift("inprogress"), delete f.stop, e.call(a, g, f)), !d && f && f.empty.fire()
        },
        _queueHooks: function(a, b) {
            var c = b + "queueHooks";
            return m._data(a, c) || m._data(a, c, {
                empty: m.Callbacks("once memory").add(function() {
                    m._removeData(a, b + "queue"), m._removeData(a, c)
                })
            })
        }
    }), m.fn.extend({
        queue: function(a, b) {
            var c = 2;
            return "string" != typeof a && (b = a, a = "fx", c--), arguments.length < c ? m.queue(this[0], a) : void 0 === b ? this : this.each(function() {
                var c = m.queue(this, a, b);
                m._queueHooks(this, a), "fx" === a && "inprogress" !== c[0] && m.dequeue(this, a)
            })
        },
        dequeue: function(a) {
            return this.each(function() {
                m.dequeue(this, a)
            })
        },
        clearQueue: function(a) {
            return this.queue(a || "fx", [])
        },
        promise: function(a, b) {
            var c, d = 1,
                e = m.Deferred(),
                f = this,
                g = this.length,
                h = function() {
                    --d || e.resolveWith(f, [f])
                };
            "string" != typeof a && (b = a, a = void 0), a = a || "fx";
            while (g--) c = m._data(f[g], a + "queueHooks"), c && c.empty && (d++, c.empty.add(h));
            return h(), e.promise(b)
        }
    });
    var S = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
        T = ["Top", "Right", "Bottom", "Left"],
        U = function(a, b) {
            return a = b || a, "none" === m.css(a, "display") || !m.contains(a.ownerDocument, a)
        },
        V = m.access = function(a, b, c, d, e, f, g) {
            var h = 0,
                i = a.length,
                j = null == c;
            if ("object" === m.type(c)) {
                e = !0;
                for (h in c) m.access(a, b, h, c[h], !0, f, g)
            } else if (void 0 !== d && (e = !0, m.isFunction(d) || (g = !0), j && (g ? (b.call(a, d), b = null) : (j = b, b = function(a, b, c) {
                    return j.call(m(a), c)
                })), b))
                for (; i > h; h++) b(a[h], c, g ? d : d.call(a[h], h, b(a[h], c)));
            return e ? a : j ? b.call(a) : i ? b(a[0], c) : f
        },
        W = /^(?:checkbox|radio)$/i;
    ! function() {
        var a = y.createElement("input"),
            b = y.createElement("div"),
            c = y.createDocumentFragment();
        if (b.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", k.leadingWhitespace = 3 === b.firstChild.nodeType, k.tbody = !b.getElementsByTagName("tbody").length, k.htmlSerialize = !!b.getElementsByTagName("link").length, k.html5Clone = "<:nav></:nav>" !== y.createElement("nav").cloneNode(!0).outerHTML, a.type = "checkbox", a.checked = !0, c.appendChild(a), k.appendChecked = a.checked, b.innerHTML = "<textarea>x</textarea>", k.noCloneChecked = !!b.cloneNode(!0).lastChild.defaultValue, c.appendChild(b), b.innerHTML = "<input type='radio' checked='checked' name='t'/>", k.checkClone = b.cloneNode(!0).cloneNode(!0).lastChild.checked, k.noCloneEvent = !0, b.attachEvent && (b.attachEvent("onclick", function() {
                k.noCloneEvent = !1
            }), b.cloneNode(!0).click()), null == k.deleteExpando) {
            k.deleteExpando = !0;
            try {
                delete b.test
            } catch (d) {
                k.deleteExpando = !1
            }
        }
    }(),
    function() {
        var b, c, d = y.createElement("div");
        for (b in {
                submit: !0,
                change: !0,
                focusin: !0
            }) c = "on" + b, (k[b + "Bubbles"] = c in a) || (d.setAttribute(c, "t"), k[b + "Bubbles"] = d.attributes[c].expando === !1);
        d = null
    }();
    var X = /^(?:input|select|textarea)$/i,
        Y = /^key/,
        Z = /^(?:mouse|pointer|contextmenu)|click/,
        $ = /^(?:focusinfocus|focusoutblur)$/,
        _ = /^([^.]*)(?:\.(.+)|)$/;

    function aa() {
        return !0
    }

    function ba() {
        return !1
    }

    function ca() {
        try {
            return y.activeElement
        } catch (a) {}
    }
    m.event = {
        global: {},
        add: function(a, b, c, d, e) {
            var f, g, h, i, j, k, l, n, o, p, q, r = m._data(a);
            if (r) {
                c.handler && (i = c, c = i.handler, e = i.selector), c.guid || (c.guid = m.guid++), (g = r.events) || (g = r.events = {}), (k = r.handle) || (k = r.handle = function(a) {
                    return typeof m === K || a && m.event.triggered === a.type ? void 0 : m.event.dispatch.apply(k.elem, arguments)
                }, k.elem = a), b = (b || "").match(E) || [""], h = b.length;
                while (h--) f = _.exec(b[h]) || [], o = q = f[1], p = (f[2] || "").split(".").sort(), o && (j = m.event.special[o] || {}, o = (e ? j.delegateType : j.bindType) || o, j = m.event.special[o] || {}, l = m.extend({
                    type: o,
                    origType: q,
                    data: d,
                    handler: c,
                    guid: c.guid,
                    selector: e,
                    needsContext: e && m.expr.match.needsContext.test(e),
                    namespace: p.join(".")
                }, i), (n = g[o]) || (n = g[o] = [], n.delegateCount = 0, j.setup && j.setup.call(a, d, p, k) !== !1 || (a.addEventListener ? a.addEventListener(o, k, !1) : a.attachEvent && a.attachEvent("on" + o, k))), j.add && (j.add.call(a, l), l.handler.guid || (l.handler.guid = c.guid)), e ? n.splice(n.delegateCount++, 0, l) : n.push(l), m.event.global[o] = !0);
                a = null
            }
        },
        remove: function(a, b, c, d, e) {
            var f, g, h, i, j, k, l, n, o, p, q, r = m.hasData(a) && m._data(a);
            if (r && (k = r.events)) {
                b = (b || "").match(E) || [""], j = b.length;
                while (j--)
                    if (h = _.exec(b[j]) || [], o = q = h[1], p = (h[2] || "").split(".").sort(), o) {
                        l = m.event.special[o] || {}, o = (d ? l.delegateType : l.bindType) || o, n = k[o] || [], h = h[2] && new RegExp("(^|\\.)" + p.join("\\.(?:.*\\.|)") + "(\\.|$)"), i = f = n.length;
                        while (f--) g = n[f], !e && q !== g.origType || c && c.guid !== g.guid || h && !h.test(g.namespace) || d && d !== g.selector && ("**" !== d || !g.selector) || (n.splice(f, 1), g.selector && n.delegateCount--, l.remove && l.remove.call(a, g));
                        i && !n.length && (l.teardown && l.teardown.call(a, p, r.handle) !== !1 || m.removeEvent(a, o, r.handle), delete k[o])
                    } else
                        for (o in k) m.event.remove(a, o + b[j], c, d, !0);
                m.isEmptyObject(k) && (delete r.handle, m._removeData(a, "events"))
            }
        },
        trigger: function(b, c, d, e) {
            var f, g, h, i, k, l, n, o = [d || y],
                p = j.call(b, "type") ? b.type : b,
                q = j.call(b, "namespace") ? b.namespace.split(".") : [];
            if (h = l = d = d || y, 3 !== d.nodeType && 8 !== d.nodeType && !$.test(p + m.event.triggered) && (p.indexOf(".") >= 0 && (q = p.split("."), p = q.shift(), q.sort()), g = p.indexOf(":") < 0 && "on" + p, b = b[m.expando] ? b : new m.Event(p, "object" == typeof b && b), b.isTrigger = e ? 2 : 3, b.namespace = q.join("."), b.namespace_re = b.namespace ? new RegExp("(^|\\.)" + q.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, b.result = void 0, b.target || (b.target = d), c = null == c ? [b] : m.makeArray(c, [b]), k = m.event.special[p] || {}, e || !k.trigger || k.trigger.apply(d, c) !== !1)) {
                if (!e && !k.noBubble && !m.isWindow(d)) {
                    for (i = k.delegateType || p, $.test(i + p) || (h = h.parentNode); h; h = h.parentNode) o.push(h), l = h;
                    l === (d.ownerDocument || y) && o.push(l.defaultView || l.parentWindow || a)
                }
                n = 0;
                while ((h = o[n++]) && !b.isPropagationStopped()) b.type = n > 1 ? i : k.bindType || p, f = (m._data(h, "events") || {})[b.type] && m._data(h, "handle"), f && f.apply(h, c), f = g && h[g], f && f.apply && m.acceptData(h) && (b.result = f.apply(h, c), b.result === !1 && b.preventDefault());
                if (b.type = p, !e && !b.isDefaultPrevented() && (!k._default || k._default.apply(o.pop(), c) === !1) && m.acceptData(d) && g && d[p] && !m.isWindow(d)) {
                    l = d[g], l && (d[g] = null), m.event.triggered = p;
                    try {
                        d[p]()
                    } catch (r) {}
                    m.event.triggered = void 0, l && (d[g] = l)
                }
                return b.result
            }
        },
        dispatch: function(a) {
            a = m.event.fix(a);
            var b, c, e, f, g, h = [],
                i = d.call(arguments),
                j = (m._data(this, "events") || {})[a.type] || [],
                k = m.event.special[a.type] || {};
            if (i[0] = a, a.delegateTarget = this, !k.preDispatch || k.preDispatch.call(this, a) !== !1) {
                h = m.event.handlers.call(this, a, j), b = 0;
                while ((f = h[b++]) && !a.isPropagationStopped()) {
                    a.currentTarget = f.elem, g = 0;
                    while ((e = f.handlers[g++]) && !a.isImmediatePropagationStopped())(!a.namespace_re || a.namespace_re.test(e.namespace)) && (a.handleObj = e, a.data = e.data, c = ((m.event.special[e.origType] || {}).handle || e.handler).apply(f.elem, i), void 0 !== c && (a.result = c) === !1 && (a.preventDefault(), a.stopPropagation()))
                }
                return k.postDispatch && k.postDispatch.call(this, a), a.result
            }
        },
        handlers: function(a, b) {
            var c, d, e, f, g = [],
                h = b.delegateCount,
                i = a.target;
            if (h && i.nodeType && (!a.button || "click" !== a.type))
                for (; i != this; i = i.parentNode || this)
                    if (1 === i.nodeType && (i.disabled !== !0 || "click" !== a.type)) {
                        for (e = [], f = 0; h > f; f++) d = b[f], c = d.selector + " ", void 0 === e[c] && (e[c] = d.needsContext ? m(c, this).index(i) >= 0 : m.find(c, this, null, [i]).length), e[c] && e.push(d);
                        e.length && g.push({
                            elem: i,
                            handlers: e
                        })
                    }
            return h < b.length && g.push({
                elem: this,
                handlers: b.slice(h)
            }), g
        },
        fix: function(a) {
            if (a[m.expando]) return a;
            var b, c, d, e = a.type,
                f = a,
                g = this.fixHooks[e];
            g || (this.fixHooks[e] = g = Z.test(e) ? this.mouseHooks : Y.test(e) ? this.keyHooks : {}), d = g.props ? this.props.concat(g.props) : this.props, a = new m.Event(f), b = d.length;
            while (b--) c = d[b], a[c] = f[c];
            return a.target || (a.target = f.srcElement || y), 3 === a.target.nodeType && (a.target = a.target.parentNode), a.metaKey = !!a.metaKey, g.filter ? g.filter(a, f) : a
        },
        props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
        fixHooks: {},
        keyHooks: {
            props: "char charCode key keyCode".split(" "),
            filter: function(a, b) {
                return null == a.which && (a.which = null != b.charCode ? b.charCode : b.keyCode), a
            }
        },
        mouseHooks: {
            props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
            filter: function(a, b) {
                var c, d, e, f = b.button,
                    g = b.fromElement;
                return null == a.pageX && null != b.clientX && (d = a.target.ownerDocument || y, e = d.documentElement, c = d.body, a.pageX = b.clientX + (e && e.scrollLeft || c && c.scrollLeft || 0) - (e && e.clientLeft || c && c.clientLeft || 0), a.pageY = b.clientY + (e && e.scrollTop || c && c.scrollTop || 0) - (e && e.clientTop || c && c.clientTop || 0)), !a.relatedTarget && g && (a.relatedTarget = g === a.target ? b.toElement : g), a.which || void 0 === f || (a.which = 1 & f ? 1 : 2 & f ? 3 : 4 & f ? 2 : 0), a
            }
        },
        special: {
            load: {
                noBubble: !0
            },
            focus: {
                trigger: function() {
                    if (this !== ca() && this.focus) try {
                        return this.focus(), !1
                    } catch (a) {}
                },
                delegateType: "focusin"
            },
            blur: {
                trigger: function() {
                    return this === ca() && this.blur ? (this.blur(), !1) : void 0
                },
                delegateType: "focusout"
            },
            click: {
                trigger: function() {
                    return m.nodeName(this, "input") && "checkbox" === this.type && this.click ? (this.click(), !1) : void 0
                },
                _default: function(a) {
                    return m.nodeName(a.target, "a")
                }
            },
            beforeunload: {
                postDispatch: function(a) {
                    void 0 !== a.result && a.originalEvent && (a.originalEvent.returnValue = a.result)
                }
            }
        },
        simulate: function(a, b, c, d) {
            var e = m.extend(new m.Event, c, {
                type: a,
                isSimulated: !0,
                originalEvent: {}
            });
            d ? m.event.trigger(e, null, b) : m.event.dispatch.call(b, e), e.isDefaultPrevented() && c.preventDefault()
        }
    }, m.removeEvent = y.removeEventListener ? function(a, b, c) {
        a.removeEventListener && a.removeEventListener(b, c, !1)
    } : function(a, b, c) {
        var d = "on" + b;
        a.detachEvent && (typeof a[d] === K && (a[d] = null), a.detachEvent(d, c))
    }, m.Event = function(a, b) {
        return this instanceof m.Event ? (a && a.type ? (this.originalEvent = a, this.type = a.type, this.isDefaultPrevented = a.defaultPrevented || void 0 === a.defaultPrevented && a.returnValue === !1 ? aa : ba) : this.type = a, b && m.extend(this, b), this.timeStamp = a && a.timeStamp || m.now(), void(this[m.expando] = !0)) : new m.Event(a, b)
    }, m.Event.prototype = {
        isDefaultPrevented: ba,
        isPropagationStopped: ba,
        isImmediatePropagationStopped: ba,
        preventDefault: function() {
            var a = this.originalEvent;
            this.isDefaultPrevented = aa, a && (a.preventDefault ? a.preventDefault() : a.returnValue = !1)
        },
        stopPropagation: function() {
            var a = this.originalEvent;
            this.isPropagationStopped = aa, a && (a.stopPropagation && a.stopPropagation(), a.cancelBubble = !0)
        },
        stopImmediatePropagation: function() {
            var a = this.originalEvent;
            this.isImmediatePropagationStopped = aa, a && a.stopImmediatePropagation && a.stopImmediatePropagation(), this.stopPropagation()
        }
    }, m.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout"
    }, function(a, b) {
        m.event.special[a] = {
            delegateType: b,
            bindType: b,
            handle: function(a) {
                var c, d = this,
                    e = a.relatedTarget,
                    f = a.handleObj;
                return (!e || e !== d && !m.contains(d, e)) && (a.type = f.origType, c = f.handler.apply(this, arguments), a.type = b), c
            }
        }
    }), k.submitBubbles || (m.event.special.submit = {
        setup: function() {
            return m.nodeName(this, "form") ? !1 : void m.event.add(this, "click._submit keypress._submit", function(a) {
                var b = a.target,
                    c = m.nodeName(b, "input") || m.nodeName(b, "button") ? b.form : void 0;
                c && !m._data(c, "submitBubbles") && (m.event.add(c, "submit._submit", function(a) {
                    a._submit_bubble = !0
                }), m._data(c, "submitBubbles", !0))
            })
        },
        postDispatch: function(a) {
            a._submit_bubble && (delete a._submit_bubble, this.parentNode && !a.isTrigger && m.event.simulate("submit", this.parentNode, a, !0))
        },
        teardown: function() {
            return m.nodeName(this, "form") ? !1 : void m.event.remove(this, "._submit")
        }
    }), k.changeBubbles || (m.event.special.change = {
        setup: function() {
            return X.test(this.nodeName) ? (("checkbox" === this.type || "radio" === this.type) && (m.event.add(this, "propertychange._change", function(a) {
                "checked" === a.originalEvent.propertyName && (this._just_changed = !0)
            }), m.event.add(this, "click._change", function(a) {
                this._just_changed && !a.isTrigger && (this._just_changed = !1), m.event.simulate("change", this, a, !0)
            })), !1) : void m.event.add(this, "beforeactivate._change", function(a) {
                var b = a.target;
                X.test(b.nodeName) && !m._data(b, "changeBubbles") && (m.event.add(b, "change._change", function(a) {
                    !this.parentNode || a.isSimulated || a.isTrigger || m.event.simulate("change", this.parentNode, a, !0)
                }), m._data(b, "changeBubbles", !0))
            })
        },
        handle: function(a) {
            var b = a.target;
            return this !== b || a.isSimulated || a.isTrigger || "radio" !== b.type && "checkbox" !== b.type ? a.handleObj.handler.apply(this, arguments) : void 0
        },
        teardown: function() {
            return m.event.remove(this, "._change"), !X.test(this.nodeName)
        }
    }), k.focusinBubbles || m.each({
        focus: "focusin",
        blur: "focusout"
    }, function(a, b) {
        var c = function(a) {
            m.event.simulate(b, a.target, m.event.fix(a), !0)
        };
        m.event.special[b] = {
            setup: function() {
                var d = this.ownerDocument || this,
                    e = m._data(d, b);
                e || d.addEventListener(a, c, !0), m._data(d, b, (e || 0) + 1)
            },
            teardown: function() {
                var d = this.ownerDocument || this,
                    e = m._data(d, b) - 1;
                e ? m._data(d, b, e) : (d.removeEventListener(a, c, !0), m._removeData(d, b))
            }
        }
    }), m.fn.extend({
        on: function(a, b, c, d, e) {
            var f, g;
            if ("object" == typeof a) {
                "string" != typeof b && (c = c || b, b = void 0);
                for (f in a) this.on(f, b, c, a[f], e);
                return this
            }
            if (null == c && null == d ? (d = b, c = b = void 0) : null == d && ("string" == typeof b ? (d = c, c = void 0) : (d = c, c = b, b = void 0)), d === !1) d = ba;
            else if (!d) return this;
            return 1 === e && (g = d, d = function(a) {
                return m().off(a), g.apply(this, arguments)
            }, d.guid = g.guid || (g.guid = m.guid++)), this.each(function() {
                m.event.add(this, a, d, c, b)
            })
        },
        one: function(a, b, c, d) {
            return this.on(a, b, c, d, 1)
        },
        off: function(a, b, c) {
            var d, e;
            if (a && a.preventDefault && a.handleObj) return d = a.handleObj, m(a.delegateTarget).off(d.namespace ? d.origType + "." + d.namespace : d.origType, d.selector, d.handler), this;
            if ("object" == typeof a) {
                for (e in a) this.off(e, b, a[e]);
                return this
            }
            return (b === !1 || "function" == typeof b) && (c = b, b = void 0), c === !1 && (c = ba), this.each(function() {
                m.event.remove(this, a, c, b)
            })
        },
        trigger: function(a, b) {
            return this.each(function() {
                m.event.trigger(a, b, this)
            })
        },
        triggerHandler: function(a, b) {
            var c = this[0];
            return c ? m.event.trigger(a, b, c, !0) : void 0
        }
    });

    function da(a) {
        var b = ea.split("|"),
            c = a.createDocumentFragment();
        if (c.createElement)
            while (b.length) c.createElement(b.pop());
        return c
    }
    var ea = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
        fa = / jQuery\d+="(?:null|\d+)"/g,
        ga = new RegExp("<(?:" + ea + ")[\\s/>]", "i"),
        ha = /^\s+/,
        ia = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
        ja = /<([\w:]+)/,
        ka = /<tbody/i,
        la = /<|&#?\w+;/,
        ma = /<(?:script|style|link)/i,
        na = /checked\s*(?:[^=]|=\s*.checked.)/i,
        oa = /^$|\/(?:java|ecma)script/i,
        pa = /^true\/(.*)/,
        qa = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,
        ra = {
            option: [1, "<select multiple='multiple'>", "</select>"],
            legend: [1, "<fieldset>", "</fieldset>"],
            area: [1, "<map>", "</map>"],
            param: [1, "<object>", "</object>"],
            thead: [1, "<table>", "</table>"],
            tr: [2, "<table><tbody>", "</tbody></table>"],
            col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
            td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
            _default: k.htmlSerialize ? [0, "", ""] : [1, "X<div>", "</div>"]
        },
        sa = da(y),
        ta = sa.appendChild(y.createElement("div"));
    ra.optgroup = ra.option, ra.tbody = ra.tfoot = ra.colgroup = ra.caption = ra.thead, ra.th = ra.td;

    function ua(a, b) {
        var c, d, e = 0,
            f = typeof a.getElementsByTagName !== K ? a.getElementsByTagName(b || "*") : typeof a.querySelectorAll !== K ? a.querySelectorAll(b || "*") : void 0;
        if (!f)
            for (f = [], c = a.childNodes || a; null != (d = c[e]); e++) !b || m.nodeName(d, b) ? f.push(d) : m.merge(f, ua(d, b));
        return void 0 === b || b && m.nodeName(a, b) ? m.merge([a], f) : f
    }

    function va(a) {
        W.test(a.type) && (a.defaultChecked = a.checked)
    }

    function wa(a, b) {
        return m.nodeName(a, "table") && m.nodeName(11 !== b.nodeType ? b : b.firstChild, "tr") ? a.getElementsByTagName("tbody")[0] || a.appendChild(a.ownerDocument.createElement("tbody")) : a
    }

    function xa(a) {
        return a.type = (null !== m.find.attr(a, "type")) + "/" + a.type, a
    }

    function ya(a) {
        var b = pa.exec(a.type);
        return b ? a.type = b[1] : a.removeAttribute("type"), a
    }

    function za(a, b) {
        for (var c, d = 0; null != (c = a[d]); d++) m._data(c, "globalEval", !b || m._data(b[d], "globalEval"))
    }

    function Aa(a, b) {
        if (1 === b.nodeType && m.hasData(a)) {
            var c, d, e, f = m._data(a),
                g = m._data(b, f),
                h = f.events;
            if (h) {
                delete g.handle, g.events = {};
                for (c in h)
                    for (d = 0, e = h[c].length; e > d; d++) m.event.add(b, c, h[c][d])
            }
            g.data && (g.data = m.extend({}, g.data))
        }
    }

    function Ba(a, b) {
        var c, d, e;
        if (1 === b.nodeType) {
            if (c = b.nodeName.toLowerCase(), !k.noCloneEvent && b[m.expando]) {
                e = m._data(b);
                for (d in e.events) m.removeEvent(b, d, e.handle);
                b.removeAttribute(m.expando)
            }
            "script" === c && b.text !== a.text ? (xa(b).text = a.text, ya(b)) : "object" === c ? (b.parentNode && (b.outerHTML = a.outerHTML), k.html5Clone && a.innerHTML && !m.trim(b.innerHTML) && (b.innerHTML = a.innerHTML)) : "input" === c && W.test(a.type) ? (b.defaultChecked = b.checked = a.checked, b.value !== a.value && (b.value = a.value)) : "option" === c ? b.defaultSelected = b.selected = a.defaultSelected : ("input" === c || "textarea" === c) && (b.defaultValue = a.defaultValue)
        }
    }
    m.extend({
        clone: function(a, b, c) {
            var d, e, f, g, h, i = m.contains(a.ownerDocument, a);
            if (k.html5Clone || m.isXMLDoc(a) || !ga.test("<" + a.nodeName + ">") ? f = a.cloneNode(!0) : (ta.innerHTML = a.outerHTML, ta.removeChild(f = ta.firstChild)), !(k.noCloneEvent && k.noCloneChecked || 1 !== a.nodeType && 11 !== a.nodeType || m.isXMLDoc(a)))
                for (d = ua(f), h = ua(a), g = 0; null != (e = h[g]); ++g) d[g] && Ba(e, d[g]);
            if (b)
                if (c)
                    for (h = h || ua(a), d = d || ua(f), g = 0; null != (e = h[g]); g++) Aa(e, d[g]);
                else Aa(a, f);
            return d = ua(f, "script"), d.length > 0 && za(d, !i && ua(a, "script")), d = h = e = null, f
        },
        buildFragment: function(a, b, c, d) {
            for (var e, f, g, h, i, j, l, n = a.length, o = da(b), p = [], q = 0; n > q; q++)
                if (f = a[q], f || 0 === f)
                    if ("object" === m.type(f)) m.merge(p, f.nodeType ? [f] : f);
                    else if (la.test(f)) {
                h = h || o.appendChild(b.createElement("div")), i = (ja.exec(f) || ["", ""])[1].toLowerCase(), l = ra[i] || ra._default, h.innerHTML = l[1] + f.replace(ia, "<$1></$2>") + l[2], e = l[0];
                while (e--) h = h.lastChild;
                if (!k.leadingWhitespace && ha.test(f) && p.push(b.createTextNode(ha.exec(f)[0])), !k.tbody) {
                    f = "table" !== i || ka.test(f) ? "<table>" !== l[1] || ka.test(f) ? 0 : h : h.firstChild, e = f && f.childNodes.length;
                    while (e--) m.nodeName(j = f.childNodes[e], "tbody") && !j.childNodes.length && f.removeChild(j)
                }
                m.merge(p, h.childNodes), h.textContent = "";
                while (h.firstChild) h.removeChild(h.firstChild);
                h = o.lastChild
            } else p.push(b.createTextNode(f));
            h && o.removeChild(h), k.appendChecked || m.grep(ua(p, "input"), va), q = 0;
            while (f = p[q++])
                if ((!d || -1 === m.inArray(f, d)) && (g = m.contains(f.ownerDocument, f), h = ua(o.appendChild(f), "script"), g && za(h), c)) {
                    e = 0;
                    while (f = h[e++]) oa.test(f.type || "") && c.push(f)
                }
            return h = null, o
        },
        cleanData: function(a, b) {
            for (var d, e, f, g, h = 0, i = m.expando, j = m.cache, l = k.deleteExpando, n = m.event.special; null != (d = a[h]); h++)
                if ((b || m.acceptData(d)) && (f = d[i], g = f && j[f])) {
                    if (g.events)
                        for (e in g.events) n[e] ? m.event.remove(d, e) : m.removeEvent(d, e, g.handle);
                    j[f] && (delete j[f], l ? delete d[i] : typeof d.removeAttribute !== K ? d.removeAttribute(i) : d[i] = null, c.push(f))
                }
        }
    }), m.fn.extend({
        text: function(a) {
            return V(this, function(a) {
                return void 0 === a ? m.text(this) : this.empty().append((this[0] && this[0].ownerDocument || y).createTextNode(a))
            }, null, a, arguments.length)
        },
        append: function() {
            return this.domManip(arguments, function(a) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var b = wa(this, a);
                    b.appendChild(a)
                }
            })
        },
        prepend: function() {
            return this.domManip(arguments, function(a) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var b = wa(this, a);
                    b.insertBefore(a, b.firstChild)
                }
            })
        },
        before: function() {
            return this.domManip(arguments, function(a) {
                this.parentNode && this.parentNode.insertBefore(a, this)
            })
        },
        after: function() {
            return this.domManip(arguments, function(a) {
                this.parentNode && this.parentNode.insertBefore(a, this.nextSibling)
            })
        },
        remove: function(a, b) {
            for (var c, d = a ? m.filter(a, this) : this, e = 0; null != (c = d[e]); e++) b || 1 !== c.nodeType || m.cleanData(ua(c)), c.parentNode && (b && m.contains(c.ownerDocument, c) && za(ua(c, "script")), c.parentNode.removeChild(c));
            return this
        },
        empty: function() {
            for (var a, b = 0; null != (a = this[b]); b++) {
                1 === a.nodeType && m.cleanData(ua(a, !1));
                while (a.firstChild) a.removeChild(a.firstChild);
                a.options && m.nodeName(a, "select") && (a.options.length = 0)
            }
            return this
        },
        clone: function(a, b) {
            return a = null == a ? !1 : a, b = null == b ? a : b, this.map(function() {
                return m.clone(this, a, b)
            })
        },
        html: function(a) {
            return V(this, function(a) {
                var b = this[0] || {},
                    c = 0,
                    d = this.length;
                if (void 0 === a) return 1 === b.nodeType ? b.innerHTML.replace(fa, "") : void 0;
                if (!("string" != typeof a || ma.test(a) || !k.htmlSerialize && ga.test(a) || !k.leadingWhitespace && ha.test(a) || ra[(ja.exec(a) || ["", ""])[1].toLowerCase()])) {
                    a = a.replace(ia, "<$1></$2>");
                    try {
                        for (; d > c; c++) b = this[c] || {}, 1 === b.nodeType && (m.cleanData(ua(b, !1)), b.innerHTML = a);
                        b = 0
                    } catch (e) {}
                }
                b && this.empty().append(a)
            }, null, a, arguments.length)
        },
        replaceWith: function() {
            var a = arguments[0];
            return this.domManip(arguments, function(b) {
                a = this.parentNode, m.cleanData(ua(this)), a && a.replaceChild(b, this)
            }), a && (a.length || a.nodeType) ? this : this.remove()
        },
        detach: function(a) {
            return this.remove(a, !0)
        },
        domManip: function(a, b) {
            a = e.apply([], a);
            var c, d, f, g, h, i, j = 0,
                l = this.length,
                n = this,
                o = l - 1,
                p = a[0],
                q = m.isFunction(p);
            if (q || l > 1 && "string" == typeof p && !k.checkClone && na.test(p)) return this.each(function(c) {
                var d = n.eq(c);
                q && (a[0] = p.call(this, c, d.html())), d.domManip(a, b)
            });
            if (l && (i = m.buildFragment(a, this[0].ownerDocument, !1, this), c = i.firstChild, 1 === i.childNodes.length && (i = c), c)) {
                for (g = m.map(ua(i, "script"), xa), f = g.length; l > j; j++) d = i, j !== o && (d = m.clone(d, !0, !0), f && m.merge(g, ua(d, "script"))), b.call(this[j], d, j);
                if (f)
                    for (h = g[g.length - 1].ownerDocument, m.map(g, ya), j = 0; f > j; j++) d = g[j], oa.test(d.type || "") && !m._data(d, "globalEval") && m.contains(h, d) && (d.src ? m._evalUrl && m._evalUrl(d.src) : m.globalEval((d.text || d.textContent || d.innerHTML || "").replace(qa, "")));
                i = c = null
            }
            return this
        }
    }), m.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(a, b) {
        m.fn[a] = function(a) {
            for (var c, d = 0, e = [], g = m(a), h = g.length - 1; h >= d; d++) c = d === h ? this : this.clone(!0), m(g[d])[b](c), f.apply(e, c.get());
            return this.pushStack(e)
        }
    });
    var Ca, Da = {};

    function Ea(b, c) {
        var d, e = m(c.createElement(b)).appendTo(c.body),
            f = a.getDefaultComputedStyle && (d = a.getDefaultComputedStyle(e[0])) ? d.display : m.css(e[0], "display");
        return e.detach(), f
    }

    function Fa(a) {
        var b = y,
            c = Da[a];
        return c || (c = Ea(a, b), "none" !== c && c || (Ca = (Ca || m("<iframe frameborder='0' width='0' height='0'/>")).appendTo(b.documentElement), b = (Ca[0].contentWindow || Ca[0].contentDocument).document, b.write(), b.close(), c = Ea(a, b), Ca.detach()), Da[a] = c), c
    }! function() {
        var a;
        k.shrinkWrapBlocks = function() {
            if (null != a) return a;
            a = !1;
            var b, c, d;
            return c = y.getElementsByTagName("body")[0], c && c.style ? (b = y.createElement("div"), d = y.createElement("div"), d.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px", c.appendChild(d).appendChild(b), typeof b.style.zoom !== K && (b.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1", b.appendChild(y.createElement("div")).style.width = "5px", a = 3 !== b.offsetWidth), c.removeChild(d), a) : void 0
        }
    }();
    var Ga = /^margin/,
        Ha = new RegExp("^(" + S + ")(?!px)[a-z%]+$", "i"),
        Ia, Ja, Ka = /^(top|right|bottom|left)$/;
    a.getComputedStyle ? (Ia = function(b) {
        return b.ownerDocument.defaultView.opener ? b.ownerDocument.defaultView.getComputedStyle(b, null) : a.getComputedStyle(b, null)
    }, Ja = function(a, b, c) {
        var d, e, f, g, h = a.style;
        return c = c || Ia(a), g = c ? c.getPropertyValue(b) || c[b] : void 0, c && ("" !== g || m.contains(a.ownerDocument, a) || (g = m.style(a, b)), Ha.test(g) && Ga.test(b) && (d = h.width, e = h.minWidth, f = h.maxWidth, h.minWidth = h.maxWidth = h.width = g, g = c.width, h.width = d, h.minWidth = e, h.maxWidth = f)), void 0 === g ? g : g + ""
    }) : y.documentElement.currentStyle && (Ia = function(a) {
        return a.currentStyle
    }, Ja = function(a, b, c) {
        var d, e, f, g, h = a.style;
        return c = c || Ia(a), g = c ? c[b] : void 0, null == g && h && h[b] && (g = h[b]), Ha.test(g) && !Ka.test(b) && (d = h.left, e = a.runtimeStyle, f = e && e.left, f && (e.left = a.currentStyle.left), h.left = "fontSize" === b ? "1em" : g, g = h.pixelLeft + "px", h.left = d, f && (e.left = f)), void 0 === g ? g : g + "" || "auto"
    });

    function La(a, b) {
        return {
            get: function() {
                var c = a();
                if (null != c) return c ? void delete this.get : (this.get = b).apply(this, arguments)
            }
        }
    }! function() {
        var b, c, d, e, f, g, h;
        if (b = y.createElement("div"), b.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", d = b.getElementsByTagName("a")[0], c = d && d.style) {
            c.cssText = "float:left;opacity:.5", k.opacity = "0.5" === c.opacity, k.cssFloat = !!c.cssFloat, b.style.backgroundClip = "content-box", b.cloneNode(!0).style.backgroundClip = "", k.clearCloneStyle = "content-box" === b.style.backgroundClip, k.boxSizing = "" === c.boxSizing || "" === c.MozBoxSizing || "" === c.WebkitBoxSizing, m.extend(k, {
                reliableHiddenOffsets: function() {
                    return null == g && i(), g
                },
                boxSizingReliable: function() {
                    return null == f && i(), f
                },
                pixelPosition: function() {
                    return null == e && i(), e
                },
                reliableMarginRight: function() {
                    return null == h && i(), h
                }
            });

            function i() {
                var b, c, d, i;
                c = y.getElementsByTagName("body")[0], c && c.style && (b = y.createElement("div"), d = y.createElement("div"), d.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px", c.appendChild(d).appendChild(b), b.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute", e = f = !1, h = !0, a.getComputedStyle && (e = "1%" !== (a.getComputedStyle(b, null) || {}).top, f = "4px" === (a.getComputedStyle(b, null) || {
                    width: "4px"
                }).width, i = b.appendChild(y.createElement("div")), i.style.cssText = b.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0", i.style.marginRight = i.style.width = "0", b.style.width = "1px", h = !parseFloat((a.getComputedStyle(i, null) || {}).marginRight), b.removeChild(i)), b.innerHTML = "<table><tr><td></td><td>t</td></tr></table>", i = b.getElementsByTagName("td"), i[0].style.cssText = "margin:0;border:0;padding:0;display:none", g = 0 === i[0].offsetHeight, g && (i[0].style.display = "", i[1].style.display = "none", g = 0 === i[0].offsetHeight), c.removeChild(d))
            }
        }
    }(), m.swap = function(a, b, c, d) {
        var e, f, g = {};
        for (f in b) g[f] = a.style[f], a.style[f] = b[f];
        e = c.apply(a, d || []);
        for (f in b) a.style[f] = g[f];
        return e
    };
    var Ma = /alpha\([^)]*\)/i,
        Na = /opacity\s*=\s*([^)]*)/,
        Oa = /^(none|table(?!-c[ea]).+)/,
        Pa = new RegExp("^(" + S + ")(.*)$", "i"),
        Qa = new RegExp("^([+-])=(" + S + ")", "i"),
        Ra = {
            position: "absolute",
            visibility: "hidden",
            display: "block"
        },
        Sa = {
            letterSpacing: "0",
            fontWeight: "400"
        },
        Ta = ["Webkit", "O", "Moz", "ms"];

    function Ua(a, b) {
        if (b in a) return b;
        var c = b.charAt(0).toUpperCase() + b.slice(1),
            d = b,
            e = Ta.length;
        while (e--)
            if (b = Ta[e] + c, b in a) return b;
        return d
    }

    function Va(a, b) {
        for (var c, d, e, f = [], g = 0, h = a.length; h > g; g++) d = a[g], d.style && (f[g] = m._data(d, "olddisplay"), c = d.style.display, b ? (f[g] || "none" !== c || (d.style.display = ""), "" === d.style.display && U(d) && (f[g] = m._data(d, "olddisplay", Fa(d.nodeName)))) : (e = U(d), (c && "none" !== c || !e) && m._data(d, "olddisplay", e ? c : m.css(d, "display"))));
        for (g = 0; h > g; g++) d = a[g], d.style && (b && "none" !== d.style.display && "" !== d.style.display || (d.style.display = b ? f[g] || "" : "none"));
        return a
    }

    function Wa(a, b, c) {
        var d = Pa.exec(b);
        return d ? Math.max(0, d[1] - (c || 0)) + (d[2] || "px") : b
    }

    function Xa(a, b, c, d, e) {
        for (var f = c === (d ? "border" : "content") ? 4 : "width" === b ? 1 : 0, g = 0; 4 > f; f += 2) "margin" === c && (g += m.css(a, c + T[f], !0, e)), d ? ("content" === c && (g -= m.css(a, "padding" + T[f], !0, e)), "margin" !== c && (g -= m.css(a, "border" + T[f] + "Width", !0, e))) : (g += m.css(a, "padding" + T[f], !0, e), "padding" !== c && (g += m.css(a, "border" + T[f] + "Width", !0, e)));
        return g
    }

    function Ya(a, b, c) {
        var d = !0,
            e = "width" === b ? a.offsetWidth : a.offsetHeight,
            f = Ia(a),
            g = k.boxSizing && "border-box" === m.css(a, "boxSizing", !1, f);
        if (0 >= e || null == e) {
            if (e = Ja(a, b, f), (0 > e || null == e) && (e = a.style[b]), Ha.test(e)) return e;
            d = g && (k.boxSizingReliable() || e === a.style[b]), e = parseFloat(e) || 0
        }
        return e + Xa(a, b, c || (g ? "border" : "content"), d, f) + "px"
    }
    m.extend({
        cssHooks: {
            opacity: {
                get: function(a, b) {
                    if (b) {
                        var c = Ja(a, "opacity");
                        return "" === c ? "1" : c
                    }
                }
            }
        },
        cssNumber: {
            columnCount: !0,
            fillOpacity: !0,
            flexGrow: !0,
            flexShrink: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {
            "float": k.cssFloat ? "cssFloat" : "styleFloat"
        },
        style: function(a, b, c, d) {
            if (a && 3 !== a.nodeType && 8 !== a.nodeType && a.style) {
                var e, f, g, h = m.camelCase(b),
                    i = a.style;
                if (b = m.cssProps[h] || (m.cssProps[h] = Ua(i, h)), g = m.cssHooks[b] || m.cssHooks[h], void 0 === c) return g && "get" in g && void 0 !== (e = g.get(a, !1, d)) ? e : i[b];
                if (f = typeof c, "string" === f && (e = Qa.exec(c)) && (c = (e[1] + 1) * e[2] + parseFloat(m.css(a, b)), f = "number"), null != c && c === c && ("number" !== f || m.cssNumber[h] || (c += "px"), k.clearCloneStyle || "" !== c || 0 !== b.indexOf("background") || (i[b] = "inherit"), !(g && "set" in g && void 0 === (c = g.set(a, c, d))))) try {
                    i[b] = c
                } catch (j) {}
            }
        },
        css: function(a, b, c, d) {
            var e, f, g, h = m.camelCase(b);
            return b = m.cssProps[h] || (m.cssProps[h] = Ua(a.style, h)), g = m.cssHooks[b] || m.cssHooks[h], g && "get" in g && (f = g.get(a, !0, c)), void 0 === f && (f = Ja(a, b, d)), "normal" === f && b in Sa && (f = Sa[b]), "" === c || c ? (e = parseFloat(f), c === !0 || m.isNumeric(e) ? e || 0 : f) : f
        }
    }), m.each(["height", "width"], function(a, b) {
        m.cssHooks[b] = {
            get: function(a, c, d) {
                return c ? Oa.test(m.css(a, "display")) && 0 === a.offsetWidth ? m.swap(a, Ra, function() {
                    return Ya(a, b, d)
                }) : Ya(a, b, d) : void 0
            },
            set: function(a, c, d) {
                var e = d && Ia(a);
                return Wa(a, c, d ? Xa(a, b, d, k.boxSizing && "border-box" === m.css(a, "boxSizing", !1, e), e) : 0)
            }
        }
    }), k.opacity || (m.cssHooks.opacity = {
        get: function(a, b) {
            return Na.test((b && a.currentStyle ? a.currentStyle.filter : a.style.filter) || "") ? .01 * parseFloat(RegExp.$1) + "" : b ? "1" : ""
        },
        set: function(a, b) {
            var c = a.style,
                d = a.currentStyle,
                e = m.isNumeric(b) ? "alpha(opacity=" + 100 * b + ")" : "",
                f = d && d.filter || c.filter || "";
            c.zoom = 1, (b >= 1 || "" === b) && "" === m.trim(f.replace(Ma, "")) && c.removeAttribute && (c.removeAttribute("filter"), "" === b || d && !d.filter) || (c.filter = Ma.test(f) ? f.replace(Ma, e) : f + " " + e)
        }
    }), m.cssHooks.marginRight = La(k.reliableMarginRight, function(a, b) {
        return b ? m.swap(a, {
            display: "inline-block"
        }, Ja, [a, "marginRight"]) : void 0
    }), m.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(a, b) {
        m.cssHooks[a + b] = {
            expand: function(c) {
                for (var d = 0, e = {}, f = "string" == typeof c ? c.split(" ") : [c]; 4 > d; d++) e[a + T[d] + b] = f[d] || f[d - 2] || f[0];
                return e
            }
        }, Ga.test(a) || (m.cssHooks[a + b].set = Wa)
    }), m.fn.extend({
        css: function(a, b) {
            return V(this, function(a, b, c) {
                var d, e, f = {},
                    g = 0;
                if (m.isArray(b)) {
                    for (d = Ia(a), e = b.length; e > g; g++) f[b[g]] = m.css(a, b[g], !1, d);
                    return f
                }
                return void 0 !== c ? m.style(a, b, c) : m.css(a, b)
            }, a, b, arguments.length > 1)
        },
        show: function() {
            return Va(this, !0)
        },
        hide: function() {
            return Va(this)
        },
        toggle: function(a) {
            return "boolean" == typeof a ? a ? this.show() : this.hide() : this.each(function() {
                U(this) ? m(this).show() : m(this).hide()
            })
        }
    });

    function Za(a, b, c, d, e) {
        return new Za.prototype.init(a, b, c, d, e)
    }
    m.Tween = Za, Za.prototype = {
        constructor: Za,
        init: function(a, b, c, d, e, f) {
            this.elem = a, this.prop = c, this.easing = e || "swing", this.options = b, this.start = this.now = this.cur(), this.end = d, this.unit = f || (m.cssNumber[c] ? "" : "px")
        },
        cur: function() {
            var a = Za.propHooks[this.prop];
            return a && a.get ? a.get(this) : Za.propHooks._default.get(this)
        },
        run: function(a) {
            var b, c = Za.propHooks[this.prop];
            return this.options.duration ? this.pos = b = m.easing[this.easing](a, this.options.duration * a, 0, 1, this.options.duration) : this.pos = b = a, this.now = (this.end - this.start) * b + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), c && c.set ? c.set(this) : Za.propHooks._default.set(this), this
        }
    }, Za.prototype.init.prototype = Za.prototype, Za.propHooks = {
        _default: {
            get: function(a) {
                var b;
                return null == a.elem[a.prop] || a.elem.style && null != a.elem.style[a.prop] ? (b = m.css(a.elem, a.prop, ""), b && "auto" !== b ? b : 0) : a.elem[a.prop]
            },
            set: function(a) {
                m.fx.step[a.prop] ? m.fx.step[a.prop](a) : a.elem.style && (null != a.elem.style[m.cssProps[a.prop]] || m.cssHooks[a.prop]) ? m.style(a.elem, a.prop, a.now + a.unit) : a.elem[a.prop] = a.now
            }
        }
    }, Za.propHooks.scrollTop = Za.propHooks.scrollLeft = {
        set: function(a) {
            a.elem.nodeType && a.elem.parentNode && (a.elem[a.prop] = a.now)
        }
    }, m.easing = {
        linear: function(a) {
            return a
        },
        swing: function(a) {
            return .5 - Math.cos(a * Math.PI) / 2
        }
    }, m.fx = Za.prototype.init, m.fx.step = {};
    var $a, _a, ab = /^(?:toggle|show|hide)$/,
        bb = new RegExp("^(?:([+-])=|)(" + S + ")([a-z%]*)$", "i"),
        cb = /queueHooks$/,
        db = [ib],
        eb = {
            "*": [function(a, b) {
                var c = this.createTween(a, b),
                    d = c.cur(),
                    e = bb.exec(b),
                    f = e && e[3] || (m.cssNumber[a] ? "" : "px"),
                    g = (m.cssNumber[a] || "px" !== f && +d) && bb.exec(m.css(c.elem, a)),
                    h = 1,
                    i = 20;
                if (g && g[3] !== f) {
                    f = f || g[3], e = e || [], g = +d || 1;
                    do h = h || ".5", g /= h, m.style(c.elem, a, g + f); while (h !== (h = c.cur() / d) && 1 !== h && --i)
                }
                return e && (g = c.start = +g || +d || 0, c.unit = f, c.end = e[1] ? g + (e[1] + 1) * e[2] : +e[2]), c
            }]
        };

    function fb() {
        return setTimeout(function() {
            $a = void 0
        }), $a = m.now()
    }

    function gb(a, b) {
        var c, d = {
                height: a
            },
            e = 0;
        for (b = b ? 1 : 0; 4 > e; e += 2 - b) c = T[e], d["margin" + c] = d["padding" + c] = a;
        return b && (d.opacity = d.width = a), d
    }

    function hb(a, b, c) {
        for (var d, e = (eb[b] || []).concat(eb["*"]), f = 0, g = e.length; g > f; f++)
            if (d = e[f].call(c, b, a)) return d
    }

    function ib(a, b, c) {
        var d, e, f, g, h, i, j, l, n = this,
            o = {},
            p = a.style,
            q = a.nodeType && U(a),
            r = m._data(a, "fxshow");
        c.queue || (h = m._queueHooks(a, "fx"), null == h.unqueued && (h.unqueued = 0, i = h.empty.fire, h.empty.fire = function() {
            h.unqueued || i()
        }), h.unqueued++, n.always(function() {
            n.always(function() {
                h.unqueued--, m.queue(a, "fx").length || h.empty.fire()
            })
        })), 1 === a.nodeType && ("height" in b || "width" in b) && (c.overflow = [p.overflow, p.overflowX, p.overflowY], j = m.css(a, "display"), l = "none" === j ? m._data(a, "olddisplay") || Fa(a.nodeName) : j, "inline" === l && "none" === m.css(a, "float") && (k.inlineBlockNeedsLayout && "inline" !== Fa(a.nodeName) ? p.zoom = 1 : p.display = "inline-block")), c.overflow && (p.overflow = "hidden", k.shrinkWrapBlocks() || n.always(function() {
            p.overflow = c.overflow[0], p.overflowX = c.overflow[1], p.overflowY = c.overflow[2]
        }));
        for (d in b)
            if (e = b[d], ab.exec(e)) {
                if (delete b[d], f = f || "toggle" === e, e === (q ? "hide" : "show")) {
                    if ("show" !== e || !r || void 0 === r[d]) continue;
                    q = !0
                }
                o[d] = r && r[d] || m.style(a, d)
            } else j = void 0;
        if (m.isEmptyObject(o)) "inline" === ("none" === j ? Fa(a.nodeName) : j) && (p.display = j);
        else {
            r ? "hidden" in r && (q = r.hidden) : r = m._data(a, "fxshow", {}), f && (r.hidden = !q), q ? m(a).show() : n.done(function() {
                m(a).hide()
            }), n.done(function() {
                var b;
                m._removeData(a, "fxshow");
                for (b in o) m.style(a, b, o[b])
            });
            for (d in o) g = hb(q ? r[d] : 0, d, n), d in r || (r[d] = g.start, q && (g.end = g.start, g.start = "width" === d || "height" === d ? 1 : 0))
        }
    }

    function jb(a, b) {
        var c, d, e, f, g;
        for (c in a)
            if (d = m.camelCase(c), e = b[d], f = a[c], m.isArray(f) && (e = f[1], f = a[c] = f[0]), c !== d && (a[d] = f, delete a[c]), g = m.cssHooks[d], g && "expand" in g) {
                f = g.expand(f), delete a[d];
                for (c in f) c in a || (a[c] = f[c], b[c] = e)
            } else b[d] = e
    }

    function kb(a, b, c) {
        var d, e, f = 0,
            g = db.length,
            h = m.Deferred().always(function() {
                delete i.elem
            }),
            i = function() {
                if (e) return !1;
                for (var b = $a || fb(), c = Math.max(0, j.startTime + j.duration - b), d = c / j.duration || 0, f = 1 - d, g = 0, i = j.tweens.length; i > g; g++) j.tweens[g].run(f);
                return h.notifyWith(a, [j, f, c]), 1 > f && i ? c : (h.resolveWith(a, [j]), !1)
            },
            j = h.promise({
                elem: a,
                props: m.extend({}, b),
                opts: m.extend(!0, {
                    specialEasing: {}
                }, c),
                originalProperties: b,
                originalOptions: c,
                startTime: $a || fb(),
                duration: c.duration,
                tweens: [],
                createTween: function(b, c) {
                    var d = m.Tween(a, j.opts, b, c, j.opts.specialEasing[b] || j.opts.easing);
                    return j.tweens.push(d), d
                },
                stop: function(b) {
                    var c = 0,
                        d = b ? j.tweens.length : 0;
                    if (e) return this;
                    for (e = !0; d > c; c++) j.tweens[c].run(1);
                    return b ? h.resolveWith(a, [j, b]) : h.rejectWith(a, [j, b]), this
                }
            }),
            k = j.props;
        for (jb(k, j.opts.specialEasing); g > f; f++)
            if (d = db[f].call(j, a, k, j.opts)) return d;
        return m.map(k, hb, j), m.isFunction(j.opts.start) && j.opts.start.call(a, j), m.fx.timer(m.extend(i, {
            elem: a,
            anim: j,
            queue: j.opts.queue
        })), j.progress(j.opts.progress).done(j.opts.done, j.opts.complete).fail(j.opts.fail).always(j.opts.always)
    }
    m.Animation = m.extend(kb, {
            tweener: function(a, b) {
                m.isFunction(a) ? (b = a, a = ["*"]) : a = a.split(" ");
                for (var c, d = 0, e = a.length; e > d; d++) c = a[d], eb[c] = eb[c] || [], eb[c].unshift(b)
            },
            prefilter: function(a, b) {
                b ? db.unshift(a) : db.push(a)
            }
        }), m.speed = function(a, b, c) {
            var d = a && "object" == typeof a ? m.extend({}, a) : {
                complete: c || !c && b || m.isFunction(a) && a,
                duration: a,
                easing: c && b || b && !m.isFunction(b) && b
            };
            return d.duration = m.fx.off ? 0 : "number" == typeof d.duration ? d.duration : d.duration in m.fx.speeds ? m.fx.speeds[d.duration] : m.fx.speeds._default, (null == d.queue || d.queue === !0) && (d.queue = "fx"), d.old = d.complete, d.complete = function() {
                m.isFunction(d.old) && d.old.call(this), d.queue && m.dequeue(this, d.queue)
            }, d
        }, m.fn.extend({
            fadeTo: function(a, b, c, d) {
                return this.filter(U).css("opacity", 0).show().end().animate({
                    opacity: b
                }, a, c, d)
            },
            animate: function(a, b, c, d) {
                var e = m.isEmptyObject(a),
                    f = m.speed(b, c, d),
                    g = function() {
                        var b = kb(this, m.extend({}, a), f);
                        (e || m._data(this, "finish")) && b.stop(!0)
                    };
                return g.finish = g, e || f.queue === !1 ? this.each(g) : this.queue(f.queue, g)
            },
            stop: function(a, b, c) {
                var d = function(a) {
                    var b = a.stop;
                    delete a.stop, b(c)
                };
                return "string" != typeof a && (c = b, b = a, a = void 0), b && a !== !1 && this.queue(a || "fx", []), this.each(function() {
                    var b = !0,
                        e = null != a && a + "queueHooks",
                        f = m.timers,
                        g = m._data(this);
                    if (e) g[e] && g[e].stop && d(g[e]);
                    else
                        for (e in g) g[e] && g[e].stop && cb.test(e) && d(g[e]);
                    for (e = f.length; e--;) f[e].elem !== this || null != a && f[e].queue !== a || (f[e].anim.stop(c), b = !1, f.splice(e, 1));
                    (b || !c) && m.dequeue(this, a)
                })
            },
            finish: function(a) {
                return a !== !1 && (a = a || "fx"), this.each(function() {
                    var b, c = m._data(this),
                        d = c[a + "queue"],
                        e = c[a + "queueHooks"],
                        f = m.timers,
                        g = d ? d.length : 0;
                    for (c.finish = !0, m.queue(this, a, []), e && e.stop && e.stop.call(this, !0), b = f.length; b--;) f[b].elem === this && f[b].queue === a && (f[b].anim.stop(!0), f.splice(b, 1));
                    for (b = 0; g > b; b++) d[b] && d[b].finish && d[b].finish.call(this);
                    delete c.finish
                })
            }
        }), m.each(["toggle", "show", "hide"], function(a, b) {
            var c = m.fn[b];
            m.fn[b] = function(a, d, e) {
                return null == a || "boolean" == typeof a ? c.apply(this, arguments) : this.animate(gb(b, !0), a, d, e)
            }
        }), m.each({
            slideDown: gb("show"),
            slideUp: gb("hide"),
            slideToggle: gb("toggle"),
            fadeIn: {
                opacity: "show"
            },
            fadeOut: {
                opacity: "hide"
            },
            fadeToggle: {
                opacity: "toggle"
            }
        }, function(a, b) {
            m.fn[a] = function(a, c, d) {
                return this.animate(b, a, c, d)
            }
        }), m.timers = [], m.fx.tick = function() {
            var a, b = m.timers,
                c = 0;
            for ($a = m.now(); c < b.length; c++) a = b[c], a() || b[c] !== a || b.splice(c--, 1);
            b.length || m.fx.stop(), $a = void 0
        }, m.fx.timer = function(a) {
            m.timers.push(a), a() ? m.fx.start() : m.timers.pop()
        }, m.fx.interval = 13, m.fx.start = function() {
            _a || (_a = setInterval(m.fx.tick, m.fx.interval))
        }, m.fx.stop = function() {
            clearInterval(_a), _a = null
        }, m.fx.speeds = {
            slow: 600,
            fast: 200,
            _default: 400
        }, m.fn.delay = function(a, b) {
            return a = m.fx ? m.fx.speeds[a] || a : a, b = b || "fx", this.queue(b, function(b, c) {
                var d = setTimeout(b, a);
                c.stop = function() {
                    clearTimeout(d)
                }
            })
        },
        function() {
            var a, b, c, d, e;
            b = y.createElement("div"), b.setAttribute("className", "t"), b.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", d = b.getElementsByTagName("a")[0], c = y.createElement("select"), e = c.appendChild(y.createElement("option")), a = b.getElementsByTagName("input")[0], d.style.cssText = "top:1px", k.getSetAttribute = "t" !== b.className, k.style = /top/.test(d.getAttribute("style")), k.hrefNormalized = "/a" === d.getAttribute("href"), k.checkOn = !!a.value, k.optSelected = e.selected, k.enctype = !!y.createElement("form").enctype, c.disabled = !0, k.optDisabled = !e.disabled, a = y.createElement("input"), a.setAttribute("value", ""), k.input = "" === a.getAttribute("value"), a.value = "t", a.setAttribute("type", "radio"), k.radioValue = "t" === a.value
        }();
    var lb = /\r/g;
    m.fn.extend({
        val: function(a) {
            var b, c, d, e = this[0]; {
                if (arguments.length) return d = m.isFunction(a), this.each(function(c) {
                    var e;
                    1 === this.nodeType && (e = d ? a.call(this, c, m(this).val()) : a, null == e ? e = "" : "number" == typeof e ? e += "" : m.isArray(e) && (e = m.map(e, function(a) {
                        return null == a ? "" : a + ""
                    })), b = m.valHooks[this.type] || m.valHooks[this.nodeName.toLowerCase()], b && "set" in b && void 0 !== b.set(this, e, "value") || (this.value = e))
                });
                if (e) return b = m.valHooks[e.type] || m.valHooks[e.nodeName.toLowerCase()], b && "get" in b && void 0 !== (c = b.get(e, "value")) ? c : (c = e.value, "string" == typeof c ? c.replace(lb, "") : null == c ? "" : c)
            }
        }
    }), m.extend({
        valHooks: {
            option: {
                get: function(a) {
                    var b = m.find.attr(a, "value");
                    return null != b ? b : m.trim(m.text(a))
                }
            },
            select: {
                get: function(a) {
                    for (var b, c, d = a.options, e = a.selectedIndex, f = "select-one" === a.type || 0 > e, g = f ? null : [], h = f ? e + 1 : d.length, i = 0 > e ? h : f ? e : 0; h > i; i++)
                        if (c = d[i], !(!c.selected && i !== e || (k.optDisabled ? c.disabled : null !== c.getAttribute("disabled")) || c.parentNode.disabled && m.nodeName(c.parentNode, "optgroup"))) {
                            if (b = m(c).val(), f) return b;
                            g.push(b)
                        }
                    return g
                },
                set: function(a, b) {
                    var c, d, e = a.options,
                        f = m.makeArray(b),
                        g = e.length;
                    while (g--)
                        if (d = e[g], m.inArray(m.valHooks.option.get(d), f) >= 0) try {
                            d.selected = c = !0
                        } catch (h) {
                            d.scrollHeight
                        } else d.selected = !1;
                    return c || (a.selectedIndex = -1), e
                }
            }
        }
    }), m.each(["radio", "checkbox"], function() {
        m.valHooks[this] = {
            set: function(a, b) {
                return m.isArray(b) ? a.checked = m.inArray(m(a).val(), b) >= 0 : void 0
            }
        }, k.checkOn || (m.valHooks[this].get = function(a) {
            return null === a.getAttribute("value") ? "on" : a.value
        })
    });
    var mb, nb, ob = m.expr.attrHandle,
        pb = /^(?:checked|selected)$/i,
        qb = k.getSetAttribute,
        rb = k.input;
    m.fn.extend({
        attr: function(a, b) {
            return V(this, m.attr, a, b, arguments.length > 1)
        },
        removeAttr: function(a) {
            return this.each(function() {
                m.removeAttr(this, a)
            })
        }
    }), m.extend({
        attr: function(a, b, c) {
            var d, e, f = a.nodeType;
            if (a && 3 !== f && 8 !== f && 2 !== f) return typeof a.getAttribute === K ? m.prop(a, b, c) : (1 === f && m.isXMLDoc(a) || (b = b.toLowerCase(), d = m.attrHooks[b] || (m.expr.match.bool.test(b) ? nb : mb)), void 0 === c ? d && "get" in d && null !== (e = d.get(a, b)) ? e : (e = m.find.attr(a, b), null == e ? void 0 : e) : null !== c ? d && "set" in d && void 0 !== (e = d.set(a, c, b)) ? e : (a.setAttribute(b, c + ""), c) : void m.removeAttr(a, b))
        },
        removeAttr: function(a, b) {
            var c, d, e = 0,
                f = b && b.match(E);
            if (f && 1 === a.nodeType)
                while (c = f[e++]) d = m.propFix[c] || c, m.expr.match.bool.test(c) ? rb && qb || !pb.test(c) ? a[d] = !1 : a[m.camelCase("default-" + c)] = a[d] = !1 : m.attr(a, c, ""), a.removeAttribute(qb ? c : d)
        },
        attrHooks: {
            type: {
                set: function(a, b) {
                    if (!k.radioValue && "radio" === b && m.nodeName(a, "input")) {
                        var c = a.value;
                        return a.setAttribute("type", b), c && (a.value = c), b
                    }
                }
            }
        }
    }), nb = {
        set: function(a, b, c) {
            return b === !1 ? m.removeAttr(a, c) : rb && qb || !pb.test(c) ? a.setAttribute(!qb && m.propFix[c] || c, c) : a[m.camelCase("default-" + c)] = a[c] = !0, c
        }
    }, m.each(m.expr.match.bool.source.match(/\w+/g), function(a, b) {
        var c = ob[b] || m.find.attr;
        ob[b] = rb && qb || !pb.test(b) ? function(a, b, d) {
            var e, f;
            return d || (f = ob[b], ob[b] = e, e = null != c(a, b, d) ? b.toLowerCase() : null, ob[b] = f), e
        } : function(a, b, c) {
            return c ? void 0 : a[m.camelCase("default-" + b)] ? b.toLowerCase() : null
        }
    }), rb && qb || (m.attrHooks.value = {
        set: function(a, b, c) {
            return m.nodeName(a, "input") ? void(a.defaultValue = b) : mb && mb.set(a, b, c)
        }
    }), qb || (mb = {
        set: function(a, b, c) {
            var d = a.getAttributeNode(c);
            return d || a.setAttributeNode(d = a.ownerDocument.createAttribute(c)), d.value = b += "", "value" === c || b === a.getAttribute(c) ? b : void 0
        }
    }, ob.id = ob.name = ob.coords = function(a, b, c) {
        var d;
        return c ? void 0 : (d = a.getAttributeNode(b)) && "" !== d.value ? d.value : null
    }, m.valHooks.button = {
        get: function(a, b) {
            var c = a.getAttributeNode(b);
            return c && c.specified ? c.value : void 0
        },
        set: mb.set
    }, m.attrHooks.contenteditable = {
        set: function(a, b, c) {
            mb.set(a, "" === b ? !1 : b, c)
        }
    }, m.each(["width", "height"], function(a, b) {
        m.attrHooks[b] = {
            set: function(a, c) {
                return "" === c ? (a.setAttribute(b, "auto"), c) : void 0
            }
        }
    })), k.style || (m.attrHooks.style = {
        get: function(a) {
            return a.style.cssText || void 0
        },
        set: function(a, b) {
            return a.style.cssText = b + ""
        }
    });
    var sb = /^(?:input|select|textarea|button|object)$/i,
        tb = /^(?:a|area)$/i;
    m.fn.extend({
        prop: function(a, b) {
            return V(this, m.prop, a, b, arguments.length > 1)
        },
        removeProp: function(a) {
            return a = m.propFix[a] || a, this.each(function() {
                try {
                    this[a] = void 0, delete this[a]
                } catch (b) {}
            })
        }
    }), m.extend({
        propFix: {
            "for": "htmlFor",
            "class": "className"
        },
        prop: function(a, b, c) {
            var d, e, f, g = a.nodeType;
            if (a && 3 !== g && 8 !== g && 2 !== g) return f = 1 !== g || !m.isXMLDoc(a), f && (b = m.propFix[b] || b, e = m.propHooks[b]), void 0 !== c ? e && "set" in e && void 0 !== (d = e.set(a, c, b)) ? d : a[b] = c : e && "get" in e && null !== (d = e.get(a, b)) ? d : a[b]
        },
        propHooks: {
            tabIndex: {
                get: function(a) {
                    var b = m.find.attr(a, "tabindex");
                    return b ? parseInt(b, 10) : sb.test(a.nodeName) || tb.test(a.nodeName) && a.href ? 0 : -1
                }
            }
        }
    }), k.hrefNormalized || m.each(["href", "src"], function(a, b) {
        m.propHooks[b] = {
            get: function(a) {
                return a.getAttribute(b, 4)
            }
        }
    }), k.optSelected || (m.propHooks.selected = {
        get: function(a) {
            var b = a.parentNode;
            return b && (b.selectedIndex, b.parentNode && b.parentNode.selectedIndex), null
        }
    }), m.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
        m.propFix[this.toLowerCase()] = this
    }), k.enctype || (m.propFix.enctype = "encoding");
    var ub = /[\t\r\n\f]/g;
    m.fn.extend({
        addClass: function(a) {
            var b, c, d, e, f, g, h = 0,
                i = this.length,
                j = "string" == typeof a && a;
            if (m.isFunction(a)) return this.each(function(b) {
                m(this).addClass(a.call(this, b, this.className))
            });
            if (j)
                for (b = (a || "").match(E) || []; i > h; h++)
                    if (c = this[h], d = 1 === c.nodeType && (c.className ? (" " + c.className + " ").replace(ub, " ") : " ")) {
                        f = 0;
                        while (e = b[f++]) d.indexOf(" " + e + " ") < 0 && (d += e + " ");
                        g = m.trim(d), c.className !== g && (c.className = g)
                    }
            return this
        },
        removeClass: function(a) {
            var b, c, d, e, f, g, h = 0,
                i = this.length,
                j = 0 === arguments.length || "string" == typeof a && a;
            if (m.isFunction(a)) return this.each(function(b) {
                m(this).removeClass(a.call(this, b, this.className))
            });
            if (j)
                for (b = (a || "").match(E) || []; i > h; h++)
                    if (c = this[h], d = 1 === c.nodeType && (c.className ? (" " + c.className + " ").replace(ub, " ") : "")) {
                        f = 0;
                        while (e = b[f++])
                            while (d.indexOf(" " + e + " ") >= 0) d = d.replace(" " + e + " ", " ");
                        g = a ? m.trim(d) : "", c.className !== g && (c.className = g)
                    }
            return this
        },
        toggleClass: function(a, b) {
            var c = typeof a;
            return "boolean" == typeof b && "string" === c ? b ? this.addClass(a) : this.removeClass(a) : this.each(m.isFunction(a) ? function(c) {
                m(this).toggleClass(a.call(this, c, this.className, b), b)
            } : function() {
                if ("string" === c) {
                    var b, d = 0,
                        e = m(this),
                        f = a.match(E) || [];
                    while (b = f[d++]) e.hasClass(b) ? e.removeClass(b) : e.addClass(b)
                } else(c === K || "boolean" === c) && (this.className && m._data(this, "__className__", this.className), this.className = this.className || a === !1 ? "" : m._data(this, "__className__") || "")
            })
        },
        hasClass: function(a) {
            for (var b = " " + a + " ", c = 0, d = this.length; d > c; c++)
                if (1 === this[c].nodeType && (" " + this[c].className + " ").replace(ub, " ").indexOf(b) >= 0) return !0;
            return !1
        }
    }), m.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function(a, b) {
        m.fn[b] = function(a, c) {
            return arguments.length > 0 ? this.on(b, null, a, c) : this.trigger(b)
        }
    }), m.fn.extend({
        hover: function(a, b) {
            return this.mouseenter(a).mouseleave(b || a)
        },
        bind: function(a, b, c) {
            return this.on(a, null, b, c)
        },
        unbind: function(a, b) {
            return this.off(a, null, b)
        },
        delegate: function(a, b, c, d) {
            return this.on(b, a, c, d)
        },
        undelegate: function(a, b, c) {
            return 1 === arguments.length ? this.off(a, "**") : this.off(b, a || "**", c)
        }
    });
    var vb = m.now(),
        wb = /\?/,
        xb = /(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;
    m.parseJSON = function(b) {
        if (a.JSON && a.JSON.parse) return a.JSON.parse(b + "");
        var c, d = null,
            e = m.trim(b + "");
        return e && !m.trim(e.replace(xb, function(a, b, e, f) {
            return c && b && (d = 0), 0 === d ? a : (c = e || b, d += !f - !e, "")
        })) ? Function("return " + e)() : m.error("Invalid JSON: " + b)
    }, m.parseXML = function(b) {
        var c, d;
        if (!b || "string" != typeof b) return null;
        try {
            a.DOMParser ? (d = new DOMParser, c = d.parseFromString(b, "text/xml")) : (c = new ActiveXObject("Microsoft.XMLDOM"), c.async = "false", c.loadXML(b))
        } catch (e) {
            c = void 0
        }
        return c && c.documentElement && !c.getElementsByTagName("parsererror").length || m.error("Invalid XML: " + b), c
    };
    var yb, zb, Ab = /#.*$/,
        Bb = /([?&])_=[^&]*/,
        Cb = /^(.*?):[ \t]*([^\r\n]*)\r?$/gm,
        Db = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
        Eb = /^(?:GET|HEAD)$/,
        Fb = /^\/\//,
        Gb = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,
        Hb = {},
        Ib = {},
        Jb = "*/".concat("*");
    try {
        zb = location.href
    } catch (Kb) {
        zb = y.createElement("a"), zb.href = "", zb = zb.href
    }
    yb = Gb.exec(zb.toLowerCase()) || [];

    function Lb(a) {
        return function(b, c) {
            "string" != typeof b && (c = b, b = "*");
            var d, e = 0,
                f = b.toLowerCase().match(E) || [];
            if (m.isFunction(c))
                while (d = f[e++]) "+" === d.charAt(0) ? (d = d.slice(1) || "*", (a[d] = a[d] || []).unshift(c)) : (a[d] = a[d] || []).push(c)
        }
    }

    function Mb(a, b, c, d) {
        var e = {},
            f = a === Ib;

        function g(h) {
            var i;
            return e[h] = !0, m.each(a[h] || [], function(a, h) {
                var j = h(b, c, d);
                return "string" != typeof j || f || e[j] ? f ? !(i = j) : void 0 : (b.dataTypes.unshift(j), g(j), !1)
            }), i
        }
        return g(b.dataTypes[0]) || !e["*"] && g("*")
    }

    function Nb(a, b) {
        var c, d, e = m.ajaxSettings.flatOptions || {};
        for (d in b) void 0 !== b[d] && ((e[d] ? a : c || (c = {}))[d] = b[d]);
        return c && m.extend(!0, a, c), a
    }

    function Ob(a, b, c) {
        var d, e, f, g, h = a.contents,
            i = a.dataTypes;
        while ("*" === i[0]) i.shift(), void 0 === e && (e = a.mimeType || b.getResponseHeader("Content-Type"));
        if (e)
            for (g in h)
                if (h[g] && h[g].test(e)) {
                    i.unshift(g);
                    break
                }
        if (i[0] in c) f = i[0];
        else {
            for (g in c) {
                if (!i[0] || a.converters[g + " " + i[0]]) {
                    f = g;
                    break
                }
                d || (d = g)
            }
            f = f || d
        }
        return f ? (f !== i[0] && i.unshift(f), c[f]) : void 0
    }

    function Pb(a, b, c, d) {
        var e, f, g, h, i, j = {},
            k = a.dataTypes.slice();
        if (k[1])
            for (g in a.converters) j[g.toLowerCase()] = a.converters[g];
        f = k.shift();
        while (f)
            if (a.responseFields[f] && (c[a.responseFields[f]] = b), !i && d && a.dataFilter && (b = a.dataFilter(b, a.dataType)), i = f, f = k.shift())
                if ("*" === f) f = i;
                else if ("*" !== i && i !== f) {
            if (g = j[i + " " + f] || j["* " + f], !g)
                for (e in j)
                    if (h = e.split(" "), h[1] === f && (g = j[i + " " + h[0]] || j["* " + h[0]])) {
                        g === !0 ? g = j[e] : j[e] !== !0 && (f = h[0], k.unshift(h[1]));
                        break
                    }
            if (g !== !0)
                if (g && a["throws"]) b = g(b);
                else try {
                    b = g(b)
                } catch (l) {
                    return {
                        state: "parsererror",
                        error: g ? l : "No conversion from " + i + " to " + f
                    }
                }
        }
        return {
            state: "success",
            data: b
        }
    }
    m.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: zb,
            type: "GET",
            isLocal: Db.test(yb[1]),
            global: !0,
            processData: !0,
            async: !0,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            accepts: {
                "*": Jb,
                text: "text/plain",
                html: "text/html",
                xml: "application/xml, text/xml",
                json: "application/json, text/javascript"
            },
            contents: {
                xml: /xml/,
                html: /html/,
                json: /json/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText",
                json: "responseJSON"
            },
            converters: {
                "* text": String,
                "text html": !0,
                "text json": m.parseJSON,
                "text xml": m.parseXML
            },
            flatOptions: {
                url: !0,
                context: !0
            }
        },
        ajaxSetup: function(a, b) {
            return b ? Nb(Nb(a, m.ajaxSettings), b) : Nb(m.ajaxSettings, a)
        },
        ajaxPrefilter: Lb(Hb),
        ajaxTransport: Lb(Ib),
        ajax: function(a, b) {
            "object" == typeof a && (b = a, a = void 0), b = b || {};
            var c, d, e, f, g, h, i, j, k = m.ajaxSetup({}, b),
                l = k.context || k,
                n = k.context && (l.nodeType || l.jquery) ? m(l) : m.event,
                o = m.Deferred(),
                p = m.Callbacks("once memory"),
                q = k.statusCode || {},
                r = {},
                s = {},
                t = 0,
                u = "canceled",
                v = {
                    readyState: 0,
                    getResponseHeader: function(a) {
                        var b;
                        if (2 === t) {
                            if (!j) {
                                j = {};
                                while (b = Cb.exec(f)) j[b[1].toLowerCase()] = b[2]
                            }
                            b = j[a.toLowerCase()]
                        }
                        return null == b ? null : b
                    },
                    getAllResponseHeaders: function() {
                        return 2 === t ? f : null
                    },
                    setRequestHeader: function(a, b) {
                        var c = a.toLowerCase();
                        return t || (a = s[c] = s[c] || a, r[a] = b), this
                    },
                    overrideMimeType: function(a) {
                        return t || (k.mimeType = a), this
                    },
                    statusCode: function(a) {
                        var b;
                        if (a)
                            if (2 > t)
                                for (b in a) q[b] = [q[b], a[b]];
                            else v.always(a[v.status]);
                        return this
                    },
                    abort: function(a) {
                        var b = a || u;
                        return i && i.abort(b), x(0, b), this
                    }
                };
            if (o.promise(v).complete = p.add, v.success = v.done, v.error = v.fail, k.url = ((a || k.url || zb) + "").replace(Ab, "").replace(Fb, yb[1] + "//"), k.type = b.method || b.type || k.method || k.type, k.dataTypes = m.trim(k.dataType || "*").toLowerCase().match(E) || [""], null == k.crossDomain && (c = Gb.exec(k.url.toLowerCase()), k.crossDomain = !(!c || c[1] === yb[1] && c[2] === yb[2] && (c[3] || ("http:" === c[1] ? "80" : "443")) === (yb[3] || ("http:" === yb[1] ? "80" : "443")))), k.data && k.processData && "string" != typeof k.data && (k.data = m.param(k.data, k.traditional)), Mb(Hb, k, b, v), 2 === t) return v;
            h = m.event && k.global, h && 0 === m.active++ && m.event.trigger("ajaxStart"), k.type = k.type.toUpperCase(), k.hasContent = !Eb.test(k.type), e = k.url, k.hasContent || (k.data && (e = k.url += (wb.test(e) ? "&" : "?") + k.data, delete k.data), k.cache === !1 && (k.url = Bb.test(e) ? e.replace(Bb, "$1_=" + vb++) : e + (wb.test(e) ? "&" : "?") + "_=" + vb++)), k.ifModified && (m.lastModified[e] && v.setRequestHeader("If-Modified-Since", m.lastModified[e]), m.etag[e] && v.setRequestHeader("If-None-Match", m.etag[e])), (k.data && k.hasContent && k.contentType !== !1 || b.contentType) && v.setRequestHeader("Content-Type", k.contentType), v.setRequestHeader("Accept", k.dataTypes[0] && k.accepts[k.dataTypes[0]] ? k.accepts[k.dataTypes[0]] + ("*" !== k.dataTypes[0] ? ", " + Jb + "; q=0.01" : "") : k.accepts["*"]);
            for (d in k.headers) v.setRequestHeader(d, k.headers[d]);
            if (k.beforeSend && (k.beforeSend.call(l, v, k) === !1 || 2 === t)) return v.abort();
            u = "abort";
            for (d in {
                    success: 1,
                    error: 1,
                    complete: 1
                }) v[d](k[d]);
            if (i = Mb(Ib, k, b, v)) {
                v.readyState = 1, h && n.trigger("ajaxSend", [v, k]), k.async && k.timeout > 0 && (g = setTimeout(function() {
                    v.abort("timeout")
                }, k.timeout));
                try {
                    t = 1, i.send(r, x)
                } catch (w) {
                    if (!(2 > t)) throw w;
                    x(-1, w)
                }
            } else x(-1, "No Transport");

            function x(a, b, c, d) {
                var j, r, s, u, w, x = b;
                2 !== t && (t = 2, g && clearTimeout(g), i = void 0, f = d || "", v.readyState = a > 0 ? 4 : 0, j = a >= 200 && 300 > a || 304 === a, c && (u = Ob(k, v, c)), u = Pb(k, u, v, j), j ? (k.ifModified && (w = v.getResponseHeader("Last-Modified"), w && (m.lastModified[e] = w), w = v.getResponseHeader("etag"), w && (m.etag[e] = w)), 204 === a || "HEAD" === k.type ? x = "nocontent" : 304 === a ? x = "notmodified" : (x = u.state, r = u.data, s = u.error, j = !s)) : (s = x, (a || !x) && (x = "error", 0 > a && (a = 0))), v.status = a, v.statusText = (b || x) + "", j ? o.resolveWith(l, [r, x, v]) : o.rejectWith(l, [v, x, s]), v.statusCode(q), q = void 0, h && n.trigger(j ? "ajaxSuccess" : "ajaxError", [v, k, j ? r : s]), p.fireWith(l, [v, x]), h && (n.trigger("ajaxComplete", [v, k]), --m.active || m.event.trigger("ajaxStop")))
            }
            return v
        },
        getJSON: function(a, b, c) {
            return m.get(a, b, c, "json")
        },
        getScript: function(a, b) {
            return m.get(a, void 0, b, "script")
        }
    }), m.each(["get", "post"], function(a, b) {
        m[b] = function(a, c, d, e) {
            return m.isFunction(c) && (e = e || d, d = c, c = void 0), m.ajax({
                url: a,
                type: b,
                dataType: e,
                data: c,
                success: d
            })
        }
    }), m._evalUrl = function(a) {
        return m.ajax({
            url: a,
            type: "GET",
            dataType: "script",
            async: !1,
            global: !1,
            "throws": !0
        })
    }, m.fn.extend({
        wrapAll: function(a) {
            if (m.isFunction(a)) return this.each(function(b) {
                m(this).wrapAll(a.call(this, b))
            });
            if (this[0]) {
                var b = m(a, this[0].ownerDocument).eq(0).clone(!0);
                this[0].parentNode && b.insertBefore(this[0]), b.map(function() {
                    var a = this;
                    while (a.firstChild && 1 === a.firstChild.nodeType) a = a.firstChild;
                    return a
                }).append(this)
            }
            return this
        },
        wrapInner: function(a) {
            return this.each(m.isFunction(a) ? function(b) {
                m(this).wrapInner(a.call(this, b))
            } : function() {
                var b = m(this),
                    c = b.contents();
                c.length ? c.wrapAll(a) : b.append(a)
            })
        },
        wrap: function(a) {
            var b = m.isFunction(a);
            return this.each(function(c) {
                m(this).wrapAll(b ? a.call(this, c) : a)
            })
        },
        unwrap: function() {
            return this.parent().each(function() {
                m.nodeName(this, "body") || m(this).replaceWith(this.childNodes)
            }).end()
        }
    }), m.expr.filters.hidden = function(a) {
        return a.offsetWidth <= 0 && a.offsetHeight <= 0 || !k.reliableHiddenOffsets() && "none" === (a.style && a.style.display || m.css(a, "display"))
    }, m.expr.filters.visible = function(a) {
        return !m.expr.filters.hidden(a)
    };
    var Qb = /%20/g,
        Rb = /\[\]$/,
        Sb = /\r?\n/g,
        Tb = /^(?:submit|button|image|reset|file)$/i,
        Ub = /^(?:input|select|textarea|keygen)/i;

    function Vb(a, b, c, d) {
        var e;
        if (m.isArray(b)) m.each(b, function(b, e) {
            c || Rb.test(a) ? d(a, e) : Vb(a + "[" + ("object" == typeof e ? b : "") + "]", e, c, d)
        });
        else if (c || "object" !== m.type(b)) d(a, b);
        else
            for (e in b) Vb(a + "[" + e + "]", b[e], c, d)
    }
    m.param = function(a, b) {
        var c, d = [],
            e = function(a, b) {
                b = m.isFunction(b) ? b() : null == b ? "" : b, d[d.length] = encodeURIComponent(a) + "=" + encodeURIComponent(b)
            };
        if (void 0 === b && (b = m.ajaxSettings && m.ajaxSettings.traditional), m.isArray(a) || a.jquery && !m.isPlainObject(a)) m.each(a, function() {
            e(this.name, this.value)
        });
        else
            for (c in a) Vb(c, a[c], b, e);
        return d.join("&").replace(Qb, "+")
    }, m.fn.extend({
        serialize: function() {
            return m.param(this.serializeArray())
        },
        serializeArray: function() {
            return this.map(function() {
                var a = m.prop(this, "elements");
                return a ? m.makeArray(a) : this
            }).filter(function() {
                var a = this.type;
                return this.name && !m(this).is(":disabled") && Ub.test(this.nodeName) && !Tb.test(a) && (this.checked || !W.test(a))
            }).map(function(a, b) {
                var c = m(this).val();
                return null == c ? null : m.isArray(c) ? m.map(c, function(a) {
                    return {
                        name: b.name,
                        value: a.replace(Sb, "\r\n")
                    }
                }) : {
                    name: b.name,
                    value: c.replace(Sb, "\r\n")
                }
            }).get()
        }
    }), m.ajaxSettings.xhr = void 0 !== a.ActiveXObject ? function() {
        return !this.isLocal && /^(get|post|head|put|delete|options)$/i.test(this.type) && Zb() || $b()
    } : Zb;
    var Wb = 0,
        Xb = {},
        Yb = m.ajaxSettings.xhr();
    a.attachEvent && a.attachEvent("onunload", function() {
        for (var a in Xb) Xb[a](void 0, !0)
    }), k.cors = !!Yb && "withCredentials" in Yb, Yb = k.ajax = !!Yb, Yb && m.ajaxTransport(function(a) {
        if (!a.crossDomain || k.cors) {
            var b;
            return {
                send: function(c, d) {
                    var e, f = a.xhr(),
                        g = ++Wb;
                    if (f.open(a.type, a.url, a.async, a.username, a.password), a.xhrFields)
                        for (e in a.xhrFields) f[e] = a.xhrFields[e];
                    a.mimeType && f.overrideMimeType && f.overrideMimeType(a.mimeType), a.crossDomain || c["X-Requested-With"] || (c["X-Requested-With"] = "XMLHttpRequest");
                    for (e in c) void 0 !== c[e] && f.setRequestHeader(e, c[e] + "");
                    f.send(a.hasContent && a.data || null), b = function(c, e) {
                        var h, i, j;
                        if (b && (e || 4 === f.readyState))
                            if (delete Xb[g], b = void 0, f.onreadystatechange = m.noop, e) 4 !== f.readyState && f.abort();
                            else {
                                j = {}, h = f.status, "string" == typeof f.responseText && (j.text = f.responseText);
                                try {
                                    i = f.statusText
                                } catch (k) {
                                    i = ""
                                }
                                h || !a.isLocal || a.crossDomain ? 1223 === h && (h = 204) : h = j.text ? 200 : 404
                            }
                        j && d(h, i, j, f.getAllResponseHeaders())
                    }, a.async ? 4 === f.readyState ? setTimeout(b) : f.onreadystatechange = Xb[g] = b : b()
                },
                abort: function() {
                    b && b(void 0, !0)
                }
            }
        }
    });

    function Zb() {
        try {
            return new a.XMLHttpRequest
        } catch (b) {}
    }

    function $b() {
        try {
            return new a.ActiveXObject("Microsoft.XMLHTTP")
        } catch (b) {}
    }
    m.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /(?:java|ecma)script/
        },
        converters: {
            "text script": function(a) {
                return m.globalEval(a), a
            }
        }
    }), m.ajaxPrefilter("script", function(a) {
        void 0 === a.cache && (a.cache = !1), a.crossDomain && (a.type = "GET", a.global = !1)
    }), m.ajaxTransport("script", function(a) {
        if (a.crossDomain) {
            var b, c = y.head || m("head")[0] || y.documentElement;
            return {
                send: function(d, e) {
                    b = y.createElement("script"), b.async = !0, a.scriptCharset && (b.charset = a.scriptCharset), b.src = a.url, b.onload = b.onreadystatechange = function(a, c) {
                        (c || !b.readyState || /loaded|complete/.test(b.readyState)) && (b.onload = b.onreadystatechange = null, b.parentNode && b.parentNode.removeChild(b), b = null, c || e(200, "success"))
                    }, c.insertBefore(b, c.firstChild)
                },
                abort: function() {
                    b && b.onload(void 0, !0)
                }
            }
        }
    });
    var _b = [],
        ac = /(=)\?(?=&|$)|\?\?/;
    m.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            var a = _b.pop() || m.expando + "_" + vb++;
            return this[a] = !0, a
        }
    }), m.ajaxPrefilter("json jsonp", function(b, c, d) {
        var e, f, g, h = b.jsonp !== !1 && (ac.test(b.url) ? "url" : "string" == typeof b.data && !(b.contentType || "").indexOf("application/x-www-form-urlencoded") && ac.test(b.data) && "data");
        return h || "jsonp" === b.dataTypes[0] ? (e = b.jsonpCallback = m.isFunction(b.jsonpCallback) ? b.jsonpCallback() : b.jsonpCallback, h ? b[h] = b[h].replace(ac, "$1" + e) : b.jsonp !== !1 && (b.url += (wb.test(b.url) ? "&" : "?") + b.jsonp + "=" + e), b.converters["script json"] = function() {
            return g || m.error(e + " was not called"), g[0]
        }, b.dataTypes[0] = "json", f = a[e], a[e] = function() {
            g = arguments
        }, d.always(function() {
            a[e] = f, b[e] && (b.jsonpCallback = c.jsonpCallback, _b.push(e)), g && m.isFunction(f) && f(g[0]), g = f = void 0
        }), "script") : void 0
    }), m.parseHTML = function(a, b, c) {
        if (!a || "string" != typeof a) return null;
        "boolean" == typeof b && (c = b, b = !1), b = b || y;
        var d = u.exec(a),
            e = !c && [];
        return d ? [b.createElement(d[1])] : (d = m.buildFragment([a], b, e), e && e.length && m(e).remove(), m.merge([], d.childNodes))
    };
    var bc = m.fn.load;
    m.fn.load = function(a, b, c) {
        if ("string" != typeof a && bc) return bc.apply(this, arguments);
        var d, e, f, g = this,
            h = a.indexOf(" ");
        return h >= 0 && (d = m.trim(a.slice(h, a.length)), a = a.slice(0, h)), m.isFunction(b) ? (c = b, b = void 0) : b && "object" == typeof b && (f = "POST"), g.length > 0 && m.ajax({
            url: a,
            type: f,
            dataType: "html",
            data: b
        }).done(function(a) {
            e = arguments, g.html(d ? m("<div>").append(m.parseHTML(a)).find(d) : a)
        }).complete(c && function(a, b) {
            g.each(c, e || [a.responseText, b, a])
        }), this
    }, m.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(a, b) {
        m.fn[b] = function(a) {
            return this.on(b, a)
        }
    }), m.expr.filters.animated = function(a) {
        return m.grep(m.timers, function(b) {
            return a === b.elem
        }).length
    };
    var cc = a.document.documentElement;

    function dc(a) {
        return m.isWindow(a) ? a : 9 === a.nodeType ? a.defaultView || a.parentWindow : !1
    }
    m.offset = {
        setOffset: function(a, b, c) {
            var d, e, f, g, h, i, j, k = m.css(a, "position"),
                l = m(a),
                n = {};
            "static" === k && (a.style.position = "relative"), h = l.offset(), f = m.css(a, "top"), i = m.css(a, "left"), j = ("absolute" === k || "fixed" === k) && m.inArray("auto", [f, i]) > -1, j ? (d = l.position(), g = d.top, e = d.left) : (g = parseFloat(f) || 0, e = parseFloat(i) || 0), m.isFunction(b) && (b = b.call(a, c, h)), null != b.top && (n.top = b.top - h.top + g), null != b.left && (n.left = b.left - h.left + e), "using" in b ? b.using.call(a, n) : l.css(n)
        }
    }, m.fn.extend({
        offset: function(a) {
            if (arguments.length) return void 0 === a ? this : this.each(function(b) {
                m.offset.setOffset(this, a, b)
            });
            var b, c, d = {
                    top: 0,
                    left: 0
                },
                e = this[0],
                f = e && e.ownerDocument;
            if (f) return b = f.documentElement, m.contains(b, e) ? (typeof e.getBoundingClientRect !== K && (d = e.getBoundingClientRect()), c = dc(f), {
                top: d.top + (c.pageYOffset || b.scrollTop) - (b.clientTop || 0),
                left: d.left + (c.pageXOffset || b.scrollLeft) - (b.clientLeft || 0)
            }) : d
        },
        position: function() {
            if (this[0]) {
                var a, b, c = {
                        top: 0,
                        left: 0
                    },
                    d = this[0];
                return "fixed" === m.css(d, "position") ? b = d.getBoundingClientRect() : (a = this.offsetParent(), b = this.offset(), m.nodeName(a[0], "html") || (c = a.offset()), c.top += m.css(a[0], "borderTopWidth", !0), c.left += m.css(a[0], "borderLeftWidth", !0)), {
                    top: b.top - c.top - m.css(d, "marginTop", !0),
                    left: b.left - c.left - m.css(d, "marginLeft", !0)
                }
            }
        },
        offsetParent: function() {
            return this.map(function() {
                var a = this.offsetParent || cc;
                while (a && !m.nodeName(a, "html") && "static" === m.css(a, "position")) a = a.offsetParent;
                return a || cc
            })
        }
    }), m.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(a, b) {
        var c = /Y/.test(b);
        m.fn[a] = function(d) {
            return V(this, function(a, d, e) {
                var f = dc(a);
                return void 0 === e ? f ? b in f ? f[b] : f.document.documentElement[d] : a[d] : void(f ? f.scrollTo(c ? m(f).scrollLeft() : e, c ? e : m(f).scrollTop()) : a[d] = e)
            }, a, d, arguments.length, null)
        }
    }), m.each(["top", "left"], function(a, b) {
        m.cssHooks[b] = La(k.pixelPosition, function(a, c) {
            return c ? (c = Ja(a, b), Ha.test(c) ? m(a).position()[b] + "px" : c) : void 0
        })
    }), m.each({
        Height: "height",
        Width: "width"
    }, function(a, b) {
        m.each({
            padding: "inner" + a,
            content: b,
            "": "outer" + a
        }, function(c, d) {
            m.fn[d] = function(d, e) {
                var f = arguments.length && (c || "boolean" != typeof d),
                    g = c || (d === !0 || e === !0 ? "margin" : "border");
                return V(this, function(b, c, d) {
                    var e;
                    return m.isWindow(b) ? b.document.documentElement["client" + a] : 9 === b.nodeType ? (e = b.documentElement, Math.max(b.body["scroll" + a], e["scroll" + a], b.body["offset" + a], e["offset" + a], e["client" + a])) : void 0 === d ? m.css(b, c, g) : m.style(b, c, d, g)
                }, b, f ? d : void 0, f, null)
            }
        })
    }), m.fn.size = function() {
        return this.length
    }, m.fn.andSelf = m.fn.addBack, "function" == typeof define && define.amd && define("jquery", [], function() {
        return m
    });
    var ec = a.jQuery,
        fc = a.$;
    return m.noConflict = function(b) {
        return a.$ === m && (a.$ = fc), b && a.jQuery === m && (a.jQuery = ec), m
    }, typeof b === K && (a.jQuery = a.$ = m), m
});

/*!
 * jQuery Validation Plugin v1.13.1
 *
 * http://jqueryvalidation.org/
 *
 * Copyright (c) 2014 Jörn Zaefferer
 * Released under the MIT license
 */
(function(factory) {
    if (typeof define === "function" && define.amd) {
        define(["jquery"], factory);
    } else {
        factory(jQuery);
    }
}(function($) {

    $.extend($.fn, {
        // http://jqueryvalidation.org/validate/
        validate: function(options) {

            // if nothing is selected, return nothing; can't chain anyway
            if (!this.length) {
                if (options && options.debug && window.console) {
                    console.warn("Nothing selected, can't validate, returning nothing.");
                }
                return;
            }

            // check if a validator for this form was already created
            var validator = $.data(this[0], "validator");
            if (validator) {
                return validator;
            }

            // Add novalidate tag if HTML5.
            this.attr("novalidate", "novalidate");

            validator = new $.validator(options, this[0]);
            $.data(this[0], "validator", validator);

            if (validator.settings.onsubmit) {

                this.validateDelegate(":submit", "click", function(event) {
                    if (validator.settings.submitHandler) {
                        validator.submitButton = event.target;
                    }
                    // allow suppressing validation by adding a cancel class to the submit button
                    if ($(event.target).hasClass("cancel")) {
                        validator.cancelSubmit = true;
                    }

                    // allow suppressing validation by adding the html5 formnovalidate attribute to the submit button
                    if ($(event.target).attr("formnovalidate") !== undefined) {
                        validator.cancelSubmit = true;
                    }
                });

                // validate the form on submit
                this.submit(function(event) {
                    if (validator.settings.debug) {
                        // prevent form submit to be able to see console output
                        event.preventDefault();
                    }

                    function handle() {
                        var hidden, result;
                        if (validator.settings.submitHandler) {
                            if (validator.submitButton) {
                                // insert a hidden input as a replacement for the missing submit button
                                hidden = $("<input type='hidden'/>")
                                    .attr("name", validator.submitButton.name)
                                    .val($(validator.submitButton).val())
                                    .appendTo(validator.currentForm);
                            }
                            result = validator.settings.submitHandler.call(validator, validator.currentForm, event);
                            if (validator.submitButton) {
                                // and clean up afterwards; thanks to no-block-scope, hidden can be referenced
                                hidden.remove();
                            }
                            if (result !== undefined) {
                                return result;
                            }
                            return false;
                        }
                        return true;
                    }

                    // prevent submit for invalid forms or custom submit handlers
                    if (validator.cancelSubmit) {
                        validator.cancelSubmit = false;
                        return handle();
                    }
                    if (validator.form()) {
                        if (validator.pendingRequest) {
                            validator.formSubmitted = true;
                            return false;
                        }
                        return handle();
                    } else {
                        validator.focusInvalid();
                        return false;
                    }
                });
            }

            return validator;
        },
        // http://jqueryvalidation.org/valid/
        valid: function() {
            var valid, validator;

            if ($(this[0]).is("form")) {
                valid = this.validate().form();
            } else {
                valid = true;
                validator = $(this[0].form).validate();
                this.each(function() {
                    valid = validator.element(this) && valid;
                });
            }
            return valid;
        },
        // attributes: space separated list of attributes to retrieve and remove
        removeAttrs: function(attributes) {
            var result = {},
                $element = this;
            $.each(attributes.split(/\s/), function(index, value) {
                result[value] = $element.attr(value);
                $element.removeAttr(value);
            });
            return result;
        },
        // http://jqueryvalidation.org/rules/
        rules: function(command, argument) {
            var element = this[0],
                settings, staticRules, existingRules, data, param, filtered;

            if (command) {
                settings = $.data(element.form, "validator").settings;
                staticRules = settings.rules;
                existingRules = $.validator.staticRules(element);
                switch (command) {
                    case "add":
                        $.extend(existingRules, $.validator.normalizeRule(argument));
                        // remove messages from rules, but allow them to be set separately
                        delete existingRules.messages;
                        staticRules[element.name] = existingRules;
                        if (argument.messages) {
                            settings.messages[element.name] = $.extend(settings.messages[element.name], argument.messages);
                        }
                        break;
                    case "remove":
                        if (!argument) {
                            delete staticRules[element.name];
                            return existingRules;
                        }
                        filtered = {};
                        $.each(argument.split(/\s/), function(index, method) {
                            filtered[method] = existingRules[method];
                            delete existingRules[method];
                            if (method === "required") {
                                $(element).removeAttr("aria-required");
                            }
                        });
                        return filtered;
                }
            }

            data = $.validator.normalizeRules(
                $.extend({},
                    $.validator.classRules(element),
                    $.validator.attributeRules(element),
                    $.validator.dataRules(element),
                    $.validator.staticRules(element)
                ), element);

            // make sure required is at front
            if (data.required) {
                param = data.required;
                delete data.required;
                data = $.extend({
                    required: param
                }, data);
                $(element).attr("aria-required", "true");
            }

            // make sure remote is at back
            if (data.remote) {
                param = data.remote;
                delete data.remote;
                data = $.extend(data, {
                    remote: param
                });
            }

            return data;
        }
    });

    // Custom selectors
    $.extend($.expr[":"], {
        // http://jqueryvalidation.org/blank-selector/
        blank: function(a) {
            return !$.trim("" + $(a).val());
        },
        // http://jqueryvalidation.org/filled-selector/
        filled: function(a) {
            return !!$.trim("" + $(a).val());
        },
        // http://jqueryvalidation.org/unchecked-selector/
        unchecked: function(a) {
            return !$(a).prop("checked");
        }
    });

    // constructor for validator
    $.validator = function(options, form) {
        this.settings = $.extend(true, {}, $.validator.defaults, options);
        this.currentForm = form;
        this.init();
    };

    // http://jqueryvalidation.org/jQuery.validator.format/
    $.validator.format = function(source, params) {
        if (arguments.length === 1) {
            return function() {
                var args = $.makeArray(arguments);
                args.unshift(source);
                return $.validator.format.apply(this, args);
            };
        }
        if (arguments.length > 2 && params.constructor !== Array) {
            params = $.makeArray(arguments).slice(1);
        }
        if (params.constructor !== Array) {
            params = [params];
        }
        $.each(params, function(i, n) {
            source = source.replace(new RegExp("\\{" + i + "\\}", "g"), function() {
                return n;
            });
        });
        return source;
    };

    $.extend($.validator, {

        defaults: {
            messages: {},
            groups: {},
            rules: {},
            errorClass: "error",
            validClass: "valid",
            errorElement: "label",
            focusCleanup: false,
            focusInvalid: true,
            errorContainer: $([]),
            errorLabelContainer: $([]),
            onsubmit: true,
            ignore: ":hidden",
            ignoreTitle: false,
            onfocusin: function(element) {
                this.lastActive = element;

                // Hide error label and remove error class on focus if enabled
                if (this.settings.focusCleanup) {
                    if (this.settings.unhighlight) {
                        this.settings.unhighlight.call(this, element, this.settings.errorClass, this.settings.validClass);
                    }
                    this.hideThese(this.errorsFor(element));
                }
            },
            onfocusout: function(element) {
                if (!this.checkable(element) && (element.name in this.submitted || !this.optional(element))) {
                    this.element(element);
                }
            },
            onkeyup: function(element, event) {
                if (event.which === 9 && this.elementValue(element) === "") {
                    return;
                } else if (element.name in this.submitted || element === this.lastElement) {
                    this.element(element);
                }
            },
            onclick: function(element) {
                // click on selects, radiobuttons and checkboxes
                if (element.name in this.submitted) {
                    this.element(element);

                    // or option elements, check parent select in that case
                } else if (element.parentNode.name in this.submitted) {
                    this.element(element.parentNode);
                }
            },
            highlight: function(element, errorClass, validClass) {
                if (element.type === "radio") {
                    this.findByName(element.name).addClass(errorClass).removeClass(validClass);
                } else {
                    $(element).addClass(errorClass).removeClass(validClass);
                }
            },
            unhighlight: function(element, errorClass, validClass) {
                if (element.type === "radio") {
                    this.findByName(element.name).removeClass(errorClass).addClass(validClass);
                } else {
                    $(element).removeClass(errorClass).addClass(validClass);
                }
            }
        },

        // http://jqueryvalidation.org/jQuery.validator.setDefaults/
        setDefaults: function(settings) {
            $.extend($.validator.defaults, settings);
        },

        messages: {
            required: "This field is required.",
            remote: "Please fix this field.",
            email: "Please enter a valid email address.",
            url: "Please enter a valid URL.",
            date: "Please enter a valid date.",
            dateISO: "Please enter a valid date ( ISO ).",
            number: "Please enter a valid number.",
            digits: "Please enter only digits.",
            creditcard: "Please enter a valid credit card number.",
            equalTo: "Please enter the same value again.",
            maxlength: $.validator.format("Please enter no more than {0} characters."),
            minlength: $.validator.format("Please enter at least {0} characters."),
            rangelength: $.validator.format("Please enter a value between {0} and {1} characters long."),
            range: $.validator.format("Please enter a value between {0} and {1}."),
            max: $.validator.format("Please enter a value less than or equal to {0}."),
            min: $.validator.format("Please enter a value greater than or equal to {0}.")
        },

        autoCreateRanges: false,

        prototype: {

            init: function() {
                this.labelContainer = $(this.settings.errorLabelContainer);
                this.errorContext = this.labelContainer.length && this.labelContainer || $(this.currentForm);
                this.containers = $(this.settings.errorContainer).add(this.settings.errorLabelContainer);
                this.submitted = {};
                this.valueCache = {};
                this.pendingRequest = 0;
                this.pending = {};
                this.invalid = {};
                this.reset();

                var groups = (this.groups = {}),
                    rules;
                $.each(this.settings.groups, function(key, value) {
                    if (typeof value === "string") {
                        value = value.split(/\s/);
                    }
                    $.each(value, function(index, name) {
                        groups[name] = key;
                    });
                });
                rules = this.settings.rules;
                $.each(rules, function(key, value) {
                    rules[key] = $.validator.normalizeRule(value);
                });

                function delegate(event) {
                    var validator = $.data(this[0].form, "validator"),
                        eventType = "on" + event.type.replace(/^validate/, ""),
                        settings = validator.settings;
                    if (settings[eventType] && !this.is(settings.ignore)) {
                        settings[eventType].call(validator, this[0], event);
                    }
                }
                $(this.currentForm)
                    .validateDelegate(":text, [type='password'], [type='file'], select, textarea, " +
                        "[type='number'], [type='search'] ,[type='tel'], [type='url'], " +
                        "[type='email'], [type='datetime'], [type='date'], [type='month'], " +
                        "[type='week'], [type='time'], [type='datetime-local'], " +
                        "[type='range'], [type='color'], [type='radio'], [type='checkbox']",
                        "focusin focusout keyup", delegate)
                    // Support: Chrome, oldIE
                    // "select" is provided as event.target when clicking a option
                    .validateDelegate("select, option, [type='radio'], [type='checkbox']", "click", delegate);

                if (this.settings.invalidHandler) {
                    $(this.currentForm).bind("invalid-form.validate", this.settings.invalidHandler);
                }

                // Add aria-required to any Static/Data/Class required fields before first validation
                // Screen readers require this attribute to be present before the initial submission http://www.w3.org/TR/WCAG-TECHS/ARIA2.html
                $(this.currentForm).find("[required], [data-rule-required], .required").attr("aria-required", "true");
            },

            // http://jqueryvalidation.org/Validator.form/
            form: function() {
                this.checkForm();
                $.extend(this.submitted, this.errorMap);
                this.invalid = $.extend({}, this.errorMap);
                if (!this.valid()) {
                    $(this.currentForm).triggerHandler("invalid-form", [this]);
                }
                this.showErrors();
                return this.valid();
            },

            checkForm: function() {
                this.prepareForm();
                for (var i = 0, elements = (this.currentElements = this.elements()); elements[i]; i++) {
                    this.check(elements[i]);
                }
                return this.valid();
            },

            // http://jqueryvalidation.org/Validator.element/
            element: function(element) {
                var cleanElement = this.clean(element),
                    checkElement = this.validationTargetFor(cleanElement),
                    result = true;

                this.lastElement = checkElement;

                if (checkElement === undefined) {
                    delete this.invalid[cleanElement.name];
                } else {
                    this.prepareElement(checkElement);
                    this.currentElements = $(checkElement);

                    result = this.check(checkElement) !== false;
                    if (result) {
                        delete this.invalid[checkElement.name];
                    } else {
                        this.invalid[checkElement.name] = true;
                    }
                }
                // Add aria-invalid status for screen readers
                $(element).attr("aria-invalid", !result);

                if (!this.numberOfInvalids()) {
                    // Hide error containers on last error
                    this.toHide = this.toHide.add(this.containers);
                }
                this.showErrors();
                return result;
            },

            // http://jqueryvalidation.org/Validator.showErrors/
            showErrors: function(errors) {
                if (errors) {
                    // add items to error list and map
                    $.extend(this.errorMap, errors);
                    this.errorList = [];
                    for (var name in errors) {
                        this.errorList.push({
                            message: errors[name],
                            element: this.findByName(name)[0]
                        });
                    }
                    // remove items from success list
                    this.successList = $.grep(this.successList, function(element) {
                        return !(element.name in errors);
                    });
                }
                if (this.settings.showErrors) {
                    this.settings.showErrors.call(this, this.errorMap, this.errorList);
                } else {
                    this.defaultShowErrors();
                }
            },

            // http://jqueryvalidation.org/Validator.resetForm/
            resetForm: function() {
                if ($.fn.resetForm) {
                    $(this.currentForm).resetForm();
                }
                this.submitted = {};
                this.lastElement = null;
                this.prepareForm();
                this.hideErrors();
                this.elements()
                    .removeClass(this.settings.errorClass)
                    .removeData("previousValue")
                    .removeAttr("aria-invalid");
            },

            numberOfInvalids: function() {
                return this.objectLength(this.invalid);
            },

            objectLength: function(obj) {
                /* jshint unused: false */
                var count = 0,
                    i;
                for (i in obj) {
                    count++;
                }
                return count;
            },

            hideErrors: function() {
                this.hideThese(this.toHide);
            },

            hideThese: function(errors) {
                errors.not(this.containers).text("");
                this.addWrapper(errors).hide();
            },

            valid: function() {
                return this.size() === 0;
            },

            size: function() {
                return this.errorList.length;
            },

            focusInvalid: function() {
                if (this.settings.focusInvalid) {
                    try {
                        $(this.findLastActive() || this.errorList.length && this.errorList[0].element || [])
                            .filter(":visible")
                            .focus()
                            // manually trigger focusin event; without it, focusin handler isn't called, findLastActive won't have anything to find
                            .trigger("focusin");
                    } catch (e) {
                        // ignore IE throwing errors when focusing hidden elements
                    }
                }
            },

            findLastActive: function() {
                var lastActive = this.lastActive;
                return lastActive && $.grep(this.errorList, function(n) {
                    return n.element.name === lastActive.name;
                }).length === 1 && lastActive;
            },

            elements: function() {
                var validator = this,
                    rulesCache = {};

                // select all valid inputs inside the form (no submit or reset buttons)
                return $(this.currentForm)
                    .find("input, select, textarea")
                    .not(":submit, :reset, :image, [disabled], [readonly]")
                    .not(this.settings.ignore)
                    .filter(function() {
                        if (!this.name && validator.settings.debug && window.console) {
                            console.error("%o has no name assigned", this);
                        }

                        // select only the first element for each name, and only those with rules specified
                        if (this.name in rulesCache || !validator.objectLength($(this).rules())) {
                            return false;
                        }

                        rulesCache[this.name] = true;
                        return true;
                    });
            },

            clean: function(selector) {
                return $(selector)[0];
            },

            errors: function() {
                var errorClass = this.settings.errorClass.split(" ").join(".");
                return $(this.settings.errorElement + "." + errorClass, this.errorContext);
            },

            reset: function() {
                this.successList = [];
                this.errorList = [];
                this.errorMap = {};
                this.toShow = $([]);
                this.toHide = $([]);
                this.currentElements = $([]);
            },

            prepareForm: function() {
                this.reset();
                this.toHide = this.errors().add(this.containers);
            },

            prepareElement: function(element) {
                this.reset();
                this.toHide = this.errorsFor(element);
            },

            elementValue: function(element) {
                var val,
                    $element = $(element),
                    type = element.type;

                if (type === "radio" || type === "checkbox") {
                    return $("input[name='" + element.name + "']:checked").val();
                } else if (type === "number" && typeof element.validity !== "undefined") {
                    return element.validity.badInput ? false : $element.val();
                }

                val = $element.val();
                if (typeof val === "string") {
                    return val.replace(/\r/g, "");
                }
                return val;
            },

            check: function(element) {
                element = this.validationTargetFor(this.clean(element));

                var rules = $(element).rules(),
                    rulesCount = $.map(rules, function(n, i) {
                        return i;
                    }).length,
                    dependencyMismatch = false,
                    val = this.elementValue(element),
                    result, method, rule;

                for (method in rules) {
                    rule = {
                        method: method,
                        parameters: rules[method]
                    };
                    try {

                        result = $.validator.methods[method].call(this, val, element, rule.parameters);

                        // if a method indicates that the field is optional and therefore valid,
                        // don't mark it as valid when there are no other rules
                        if (result === "dependency-mismatch" && rulesCount === 1) {
                            dependencyMismatch = true;
                            continue;
                        }
                        dependencyMismatch = false;

                        if (result === "pending") {
                            this.toHide = this.toHide.not(this.errorsFor(element));
                            return;
                        }

                        if (!result) {
                            this.formatAndAdd(element, rule);
                            return false;
                        }
                    } catch (e) {
                        if (this.settings.debug && window.console) {
                            console.log("Exception occurred when checking element " + element.id + ", check the '" + rule.method + "' method.", e);
                        }
                        throw e;
                    }
                }
                if (dependencyMismatch) {
                    return;
                }
                if (this.objectLength(rules)) {
                    this.successList.push(element);
                }
                return true;
            },

            // return the custom message for the given element and validation method
            // specified in the element's HTML5 data attribute
            // return the generic message if present and no method specific message is present
            customDataMessage: function(element, method) {
                return $(element).data("msg" + method.charAt(0).toUpperCase() +
                    method.substring(1).toLowerCase()) || $(element).data("msg");
            },

            // return the custom message for the given element name and validation method
            customMessage: function(name, method) {
                var m = this.settings.messages[name];
                return m && (m.constructor === String ? m : m[method]);
            },

            // return the first defined argument, allowing empty strings
            findDefined: function() {
                for (var i = 0; i < arguments.length; i++) {
                    if (arguments[i] !== undefined) {
                        return arguments[i];
                    }
                }
                return undefined;
            },

            defaultMessage: function(element, method) {
                return this.findDefined(
                    this.customMessage(element.name, method),
                    this.customDataMessage(element, method),
                    // title is never undefined, so handle empty string as undefined
                    !this.settings.ignoreTitle && element.title || undefined,
                    $.validator.messages[method],
                    "<strong>Warning: No message defined for " + element.name + "</strong>"
                );
            },

            formatAndAdd: function(element, rule) {
                var message = this.defaultMessage(element, rule.method),
                    theregex = /\$?\{(\d+)\}/g;
                if (typeof message === "function") {
                    message = message.call(this, rule.parameters, element);
                } else if (theregex.test(message)) {
                    message = $.validator.format(message.replace(theregex, "{$1}"), rule.parameters);
                }
                this.errorList.push({
                    message: message,
                    element: element,
                    method: rule.method
                });

                this.errorMap[element.name] = message;
                this.submitted[element.name] = message;
            },

            addWrapper: function(toToggle) {
                if (this.settings.wrapper) {
                    toToggle = toToggle.add(toToggle.parent(this.settings.wrapper));
                }
                return toToggle;
            },

            defaultShowErrors: function() {
                var i, elements, error;
                for (i = 0; this.errorList[i]; i++) {
                    error = this.errorList[i];
                    if (this.settings.highlight) {
                        this.settings.highlight.call(this, error.element, this.settings.errorClass, this.settings.validClass);
                    }
                    this.showLabel(error.element, error.message);
                }
                if (this.errorList.length) {
                    this.toShow = this.toShow.add(this.containers);
                }
                if (this.settings.success) {
                    for (i = 0; this.successList[i]; i++) {
                        this.showLabel(this.successList[i]);
                    }
                }
                if (this.settings.unhighlight) {
                    for (i = 0, elements = this.validElements(); elements[i]; i++) {
                        this.settings.unhighlight.call(this, elements[i], this.settings.errorClass, this.settings.validClass);
                    }
                }
                this.toHide = this.toHide.not(this.toShow);
                this.hideErrors();
                this.addWrapper(this.toShow).show();
            },

            validElements: function() {
                return this.currentElements.not(this.invalidElements());
            },

            invalidElements: function() {
                return $(this.errorList).map(function() {
                    return this.element;
                });
            },

            showLabel: function(element, message) {
                var place, group, errorID,
                    error = this.errorsFor(element),
                    elementID = this.idOrName(element),
                    describedBy = $(element).attr("aria-describedby");
                if (error.length) {
                    // refresh error/success class
                    error.removeClass(this.settings.validClass).addClass(this.settings.errorClass);
                    // replace message on existing label
                    error.html(message);
                } else {
                    // create error element
                    error = $("<" + this.settings.errorElement + ">")
                        .attr("id", elementID + "-error")
                        .addClass(this.settings.errorClass)
                        .html(message || "");

                    // Maintain reference to the element to be placed into the DOM
                    place = error;
                    if (this.settings.wrapper) {
                        // make sure the element is visible, even in IE
                        // actually showing the wrapped element is handled elsewhere
                        place = error.hide().show().wrap("<" + this.settings.wrapper + "/>").parent();
                    }
                    if (this.labelContainer.length) {
                        this.labelContainer.append(place);
                    } else if (this.settings.errorPlacement) {
                        this.settings.errorPlacement(place, $(element));
                    } else {
                        place.insertAfter(element);
                    }

                    // Link error back to the element
                    if (error.is("label")) {
                        // If the error is a label, then associate using 'for'
                        error.attr("for", elementID);
                    } else if (error.parents("label[for='" + elementID + "']").length === 0) {
                        // If the element is not a child of an associated label, then it's necessary
                        // to explicitly apply aria-describedby

                        errorID = error.attr("id").replace(/(:|\.|\[|\])/g, "\\$1");
                        // Respect existing non-error aria-describedby
                        if (!describedBy) {
                            describedBy = errorID;
                        } else if (!describedBy.match(new RegExp("\\b" + errorID + "\\b"))) {
                            // Add to end of list if not already present
                            describedBy += " " + errorID;
                        }
                        $(element).attr("aria-describedby", describedBy);

                        // If this element is grouped, then assign to all elements in the same group
                        group = this.groups[element.name];
                        if (group) {
                            $.each(this.groups, function(name, testgroup) {
                                if (testgroup === group) {
                                    $("[name='" + name + "']", this.currentForm)
                                        .attr("aria-describedby", error.attr("id"));
                                }
                            });
                        }
                    }
                }
                if (!message && this.settings.success) {
                    error.text("");
                    if (typeof this.settings.success === "string") {
                        error.addClass(this.settings.success);
                    } else {
                        this.settings.success(error, element);
                    }
                }
                this.toShow = this.toShow.add(error);
            },

            errorsFor: function(element) {
                var name = this.idOrName(element),
                    describer = $(element).attr("aria-describedby"),
                    selector = "label[for='" + name + "'], label[for='" + name + "'] *";

                // aria-describedby should directly reference the error element
                if (describer) {
                    selector = selector + ", #" + describer.replace(/\s+/g, ", #");
                }
                return this
                    .errors()
                    .filter(selector);
            },

            idOrName: function(element) {
                return this.groups[element.name] || (this.checkable(element) ? element.name : element.id || element.name);
            },

            validationTargetFor: function(element) {

                // If radio/checkbox, validate first element in group instead
                if (this.checkable(element)) {
                    element = this.findByName(element.name);
                }

                // Always apply ignore filter
                return $(element).not(this.settings.ignore)[0];
            },

            checkable: function(element) {
                return (/radio|checkbox/i).test(element.type);
            },

            findByName: function(name) {
                return $(this.currentForm).find("[name='" + name + "']");
            },

            getLength: function(value, element) {
                switch (element.nodeName.toLowerCase()) {
                    case "select":
                        return $("option:selected", element).length;
                    case "input":
                        if (this.checkable(element)) {
                            return this.findByName(element.name).filter(":checked").length;
                        }
                }
                return value.length;
            },

            depend: function(param, element) {
                return this.dependTypes[typeof param] ? this.dependTypes[typeof param](param, element) : true;
            },

            dependTypes: {
                "boolean": function(param) {
                    return param;
                },
                "string": function(param, element) {
                    return !!$(param, element.form).length;
                },
                "function": function(param, element) {
                    return param(element);
                }
            },

            optional: function(element) {
                var val = this.elementValue(element);
                return !$.validator.methods.required.call(this, val, element) && "dependency-mismatch";
            },

            startRequest: function(element) {
                if (!this.pending[element.name]) {
                    this.pendingRequest++;
                    this.pending[element.name] = true;
                }
            },

            stopRequest: function(element, valid) {
                this.pendingRequest--;
                // sometimes synchronization fails, make sure pendingRequest is never < 0
                if (this.pendingRequest < 0) {
                    this.pendingRequest = 0;
                }
                delete this.pending[element.name];
                if (valid && this.pendingRequest === 0 && this.formSubmitted && this.form()) {
                    $(this.currentForm).submit();
                    this.formSubmitted = false;
                } else if (!valid && this.pendingRequest === 0 && this.formSubmitted) {
                    $(this.currentForm).triggerHandler("invalid-form", [this]);
                    this.formSubmitted = false;
                }
            },

            previousValue: function(element) {
                return $.data(element, "previousValue") || $.data(element, "previousValue", {
                    old: null,
                    valid: true,
                    message: this.defaultMessage(element, "remote")
                });
            }

        },

        classRuleSettings: {
            required: {
                required: true
            },
            email: {
                email: true
            },
            url: {
                url: true
            },
            date: {
                date: true
            },
            dateISO: {
                dateISO: true
            },
            number: {
                number: true
            },
            digits: {
                digits: true
            },
            creditcard: {
                creditcard: true
            }
        },

        addClassRules: function(className, rules) {
            if (className.constructor === String) {
                this.classRuleSettings[className] = rules;
            } else {
                $.extend(this.classRuleSettings, className);
            }
        },

        classRules: function(element) {
            var rules = {},
                classes = $(element).attr("class");

            if (classes) {
                $.each(classes.split(" "), function() {
                    if (this in $.validator.classRuleSettings) {
                        $.extend(rules, $.validator.classRuleSettings[this]);
                    }
                });
            }
            return rules;
        },

        attributeRules: function(element) {
            var rules = {},
                $element = $(element),
                type = element.getAttribute("type"),
                method, value;

            for (method in $.validator.methods) {

                // support for <input required> in both html5 and older browsers
                if (method === "required") {
                    value = element.getAttribute(method);
                    // Some browsers return an empty string for the required attribute
                    // and non-HTML5 browsers might have required="" markup
                    if (value === "") {
                        value = true;
                    }
                    // force non-HTML5 browsers to return bool
                    value = !!value;
                } else {
                    value = $element.attr(method);
                }

                // convert the value to a number for number inputs, and for text for backwards compability
                // allows type="date" and others to be compared as strings
                if (/min|max/.test(method) && (type === null || /number|range|text/.test(type))) {
                    value = Number(value);
                }

                if (value || value === 0) {
                    rules[method] = value;
                } else if (type === method && type !== "range") {
                    // exception: the jquery validate 'range' method
                    // does not test for the html5 'range' type
                    rules[method] = true;
                }
            }

            // maxlength may be returned as -1, 2147483647 ( IE ) and 524288 ( safari ) for text inputs
            if (rules.maxlength && /-1|2147483647|524288/.test(rules.maxlength)) {
                delete rules.maxlength;
            }

            return rules;
        },

        dataRules: function(element) {
            var method, value,
                rules = {},
                $element = $(element);
            for (method in $.validator.methods) {
                value = $element.data("rule" + method.charAt(0).toUpperCase() + method.substring(1).toLowerCase());
                if (value !== undefined) {
                    rules[method] = value;
                }
            }
            return rules;
        },

        staticRules: function(element) {
            var rules = {},
                validator = $.data(element.form, "validator");

            if (validator.settings.rules) {
                rules = $.validator.normalizeRule(validator.settings.rules[element.name]) || {};
            }
            return rules;
        },

        normalizeRules: function(rules, element) {
            // handle dependency check
            $.each(rules, function(prop, val) {
                // ignore rule when param is explicitly false, eg. required:false
                if (val === false) {
                    delete rules[prop];
                    return;
                }
                if (val.param || val.depends) {
                    var keepRule = true;
                    switch (typeof val.depends) {
                        case "string":
                            keepRule = !!$(val.depends, element.form).length;
                            break;
                        case "function":
                            keepRule = val.depends.call(element, element);
                            break;
                    }
                    if (keepRule) {
                        rules[prop] = val.param !== undefined ? val.param : true;
                    } else {
                        delete rules[prop];
                    }
                }
            });

            // evaluate parameters
            $.each(rules, function(rule, parameter) {
                rules[rule] = $.isFunction(parameter) ? parameter(element) : parameter;
            });

            // clean number parameters
            $.each(["minlength", "maxlength"], function() {
                if (rules[this]) {
                    rules[this] = Number(rules[this]);
                }
            });
            $.each(["rangelength", "range"], function() {
                var parts;
                if (rules[this]) {
                    if ($.isArray(rules[this])) {
                        rules[this] = [Number(rules[this][0]), Number(rules[this][1])];
                    } else if (typeof rules[this] === "string") {
                        parts = rules[this].replace(/[\[\]]/g, "").split(/[\s,]+/);
                        rules[this] = [Number(parts[0]), Number(parts[1])];
                    }
                }
            });

            if ($.validator.autoCreateRanges) {
                // auto-create ranges
                if (rules.min != null && rules.max != null) {
                    rules.range = [rules.min, rules.max];
                    delete rules.min;
                    delete rules.max;
                }
                if (rules.minlength != null && rules.maxlength != null) {
                    rules.rangelength = [rules.minlength, rules.maxlength];
                    delete rules.minlength;
                    delete rules.maxlength;
                }
            }

            return rules;
        },

        // Converts a simple string to a {string: true} rule, e.g., "required" to {required:true}
        normalizeRule: function(data) {
            if (typeof data === "string") {
                var transformed = {};
                $.each(data.split(/\s/), function() {
                    transformed[this] = true;
                });
                data = transformed;
            }
            return data;
        },

        // http://jqueryvalidation.org/jQuery.validator.addMethod/
        addMethod: function(name, method, message) {
            $.validator.methods[name] = method;
            $.validator.messages[name] = message !== undefined ? message : $.validator.messages[name];
            if (method.length < 3) {
                $.validator.addClassRules(name, $.validator.normalizeRule(name));
            }
        },

        methods: {

            // http://jqueryvalidation.org/required-method/
            required: function(value, element, param) {
                // check if dependency is met
                if (!this.depend(param, element)) {
                    return "dependency-mismatch";
                }
                if (element.nodeName.toLowerCase() === "select") {
                    // could be an array for select-multiple or a string, both are fine this way
                    var val = $(element).val();
                    return val && val.length > 0;
                }
                if (this.checkable(element)) {
                    return this.getLength(value, element) > 0;
                }
                return $.trim(value).length > 0;
            },

            // http://jqueryvalidation.org/email-method/
            email: function(value, element) {
                // From http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#e-mail-state-%28type=email%29
                // Retrieved 2014-01-14
                // If you have a problem with this implementation, report a bug against the above spec
                // Or use custom methods to implement your own email validation
                return this.optional(element) || /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(value);
            },

            // http://jqueryvalidation.org/url-method/
            url: function(value, element) {
                // contributed by Scott Gonzalez: http://projects.scottsplayground.com/iri/
                return this.optional(element) || /^(https?|s?ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(value);
            },

            // http://jqueryvalidation.org/date-method/
            date: function(value, element) {
                return this.optional(element) || !/Invalid|NaN/.test(new Date(value).toString());
            },

            // http://jqueryvalidation.org/dateISO-method/
            dateISO: function(value, element) {
                return this.optional(element) || /^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test(value);
            },

            // http://jqueryvalidation.org/number-method/
            number: function(value, element) {
                return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(value);
            },

            // http://jqueryvalidation.org/digits-method/
            digits: function(value, element) {
                return this.optional(element) || /^\d+$/.test(value);
            },

            // http://jqueryvalidation.org/creditcard-method/
            // based on http://en.wikipedia.org/wiki/Luhn/
            creditcard: function(value, element) {
                if (this.optional(element)) {
                    return "dependency-mismatch";
                }
                // accept only spaces, digits and dashes
                if (/[^0-9 \-]+/.test(value)) {
                    return false;
                }
                var nCheck = 0,
                    nDigit = 0,
                    bEven = false,
                    n, cDigit;

                value = value.replace(/\D/g, "");

                // Basing min and max length on
                // http://developer.ean.com/general_info/Valid_Credit_Card_Types
                if (value.length < 13 || value.length > 19) {
                    return false;
                }

                for (n = value.length - 1; n >= 0; n--) {
                    cDigit = value.charAt(n);
                    nDigit = parseInt(cDigit, 10);
                    if (bEven) {
                        if ((nDigit *= 2) > 9) {
                            nDigit -= 9;
                        }
                    }
                    nCheck += nDigit;
                    bEven = !bEven;
                }

                return (nCheck % 10) === 0;
            },

            // http://jqueryvalidation.org/minlength-method/
            minlength: function(value, element, param) {
                var length = $.isArray(value) ? value.length : this.getLength(value, element);
                return this.optional(element) || length >= param;
            },

            // http://jqueryvalidation.org/maxlength-method/
            maxlength: function(value, element, param) {
                var length = $.isArray(value) ? value.length : this.getLength(value, element);
                return this.optional(element) || length <= param;
            },

            // http://jqueryvalidation.org/rangelength-method/
            rangelength: function(value, element, param) {
                var length = $.isArray(value) ? value.length : this.getLength(value, element);
                return this.optional(element) || (length >= param[0] && length <= param[1]);
            },

            // http://jqueryvalidation.org/min-method/
            min: function(value, element, param) {
                return this.optional(element) || value >= param;
            },

            // http://jqueryvalidation.org/max-method/
            max: function(value, element, param) {
                return this.optional(element) || value <= param;
            },

            // http://jqueryvalidation.org/range-method/
            range: function(value, element, param) {
                return this.optional(element) || (value >= param[0] && value <= param[1]);
            },

            // http://jqueryvalidation.org/equalTo-method/
            equalTo: function(value, element, param) {
                // bind to the blur event of the target in order to revalidate whenever the target field is updated
                // TODO find a way to bind the event just once, avoiding the unbind-rebind overhead
                var target = $(param);
                if (this.settings.onfocusout) {
                    target.unbind(".validate-equalTo").bind("blur.validate-equalTo", function() {
                        $(element).valid();
                    });
                }
                return value === target.val();
            },

            // http://jqueryvalidation.org/remote-method/
            remote: function(value, element, param) {
                if (this.optional(element)) {
                    return "dependency-mismatch";
                }

                var previous = this.previousValue(element),
                    validator, data;

                if (!this.settings.messages[element.name]) {
                    this.settings.messages[element.name] = {};
                }
                previous.originalMessage = this.settings.messages[element.name].remote;
                this.settings.messages[element.name].remote = previous.message;

                param = typeof param === "string" && {
                    url: param
                } || param;

                if (previous.old === value) {
                    return previous.valid;
                }

                previous.old = value;
                validator = this;
                this.startRequest(element);
                data = {};
                data[element.name] = value;
                $.ajax($.extend(true, {
                    url: param,
                    mode: "abort",
                    port: "validate" + element.name,
                    dataType: "json",
                    data: data,
                    context: validator.currentForm,
                    success: function(response) {
                        var valid = response === true || response === "true",
                            errors, message, submitted;

                        validator.settings.messages[element.name].remote = previous.originalMessage;
                        if (valid) {
                            submitted = validator.formSubmitted;
                            validator.prepareElement(element);
                            validator.formSubmitted = submitted;
                            validator.successList.push(element);
                            delete validator.invalid[element.name];
                            validator.showErrors();
                        } else {
                            errors = {};
                            message = response || validator.defaultMessage(element, "remote");
                            errors[element.name] = previous.message = $.isFunction(message) ? message(value) : message;
                            validator.invalid[element.name] = true;
                            validator.showErrors(errors);
                        }
                        previous.valid = valid;
                        validator.stopRequest(element, valid);
                    }
                }, param));
                return "pending";
            }

        }

    });

    $.format = function deprecated() {
        throw "$.format has been deprecated. Please use $.validator.format instead.";
    };

    // ajax mode: abort
    // usage: $.ajax({ mode: "abort"[, port: "uniqueport"]});
    // if mode:"abort" is used, the previous request on that port (port can be undefined) is aborted via XMLHttpRequest.abort()

    var pendingRequests = {},
        ajax;
    // Use a prefilter if available (1.5+)
    if ($.ajaxPrefilter) {
        $.ajaxPrefilter(function(settings, _, xhr) {
            var port = settings.port;
            if (settings.mode === "abort") {
                if (pendingRequests[port]) {
                    pendingRequests[port].abort();
                }
                pendingRequests[port] = xhr;
            }
        });
    } else {
        // Proxy ajax
        ajax = $.ajax;
        $.ajax = function(settings) {
            var mode = ("mode" in settings ? settings : $.ajaxSettings).mode,
                port = ("port" in settings ? settings : $.ajaxSettings).port;
            if (mode === "abort") {
                if (pendingRequests[port]) {
                    pendingRequests[port].abort();
                }
                pendingRequests[port] = ajax.apply(this, arguments);
                return pendingRequests[port];
            }
            return ajax.apply(this, arguments);
        };
    }

    // provides delegate(type: String, delegate: Selector, handler: Callback) plugin for easier event delegation
    // handler is only called when $(event.target).is(delegate), in the scope of the jquery-object for event.target

    $.extend($.fn, {
        validateDelegate: function(delegate, type, handler) {
            return this.bind(type, function(event) {
                var target = $(event.target);
                if (target.is(delegate)) {
                    return handler.apply(target, arguments);
                }
            });
        }
    });

}));
/*--------------------------------------------------------------------------
 * linq.js - LINQ for JavaScript
 * ver 2.2.0.2 (Jan. 21th, 2011)
 *
 * created and maintained by neuecc <ils@neue.cc>
 * licensed under Microsoft Public License(Ms-PL)
 * http://neue.cc/
 * http://linqjs.codeplex.com/
 *--------------------------------------------------------------------------*/

Enumerable = (function() {
        var Enumerable = function(getEnumerator) {
            this.GetEnumerator = getEnumerator;
        }

        // Generator

        Enumerable.Choice = function() // variable argument
            {
                var args = (arguments[0] instanceof Array) ? arguments[0] : arguments;

                return new Enumerable(function() {
                    return new IEnumerator(
                        Functions.Blank,
                        function() {
                            return this.Yield(args[Math.floor(Math.random() * args.length)]);
                        },
                        Functions.Blank);
                });
            }

        Enumerable.Cycle = function() // variable argument
            {
                var args = (arguments[0] instanceof Array) ? arguments[0] : arguments;

                return new Enumerable(function() {
                    var index = 0;
                    return new IEnumerator(
                        Functions.Blank,
                        function() {
                            if (index >= args.length) index = 0;
                            return this.Yield(args[index++]);
                        },
                        Functions.Blank);
                });
            }

        Enumerable.Empty = function() {
            return new Enumerable(function() {
                return new IEnumerator(
                    Functions.Blank,
                    function() {
                        return false;
                    },
                    Functions.Blank);
            });
        }

        Enumerable.From = function(obj) {
                if (obj == null) {
                    return Enumerable.Empty();
                }
                if (obj instanceof Enumerable) {
                    return obj;
                }
                if (typeof obj == Types.Number || typeof obj == Types.Boolean) {
                    return Enumerable.Repeat(obj, 1);
                }
                if (typeof obj == Types.String) {
                    return new Enumerable(function() {
                        var index = 0;
                        return new IEnumerator(
                            Functions.Blank,
                            function() {
                                return (index < obj.length) ? this.Yield(obj.charAt(index++)) : false;
                            },
                            Functions.Blank);
                    });
                }
                if (typeof obj != Types.Function) {
                    // array or array like object
                    if (typeof obj.length == Types.Number) {
                        return new ArrayEnumerable(obj);
                    }

                    // JScript's IEnumerable
                    if (!(obj instanceof Object) && Utils.IsIEnumerable(obj)) {
                        return new Enumerable(function() {
                            var isFirst = true;
                            var enumerator;
                            return new IEnumerator(
                                function() {
                                    enumerator = new Enumerator(obj);
                                },
                                function() {
                                    if (isFirst) isFirst = false;
                                    else enumerator.moveNext();

                                    return (enumerator.atEnd()) ? false : this.Yield(enumerator.item());
                                },
                                Functions.Blank);
                        });
                    }
                }

                // case function/object : Create KeyValuePair[]
                return new Enumerable(function() {
                    var array = [];
                    var index = 0;

                    return new IEnumerator(
                        function() {
                            for (var key in obj) {
                                if (!(obj[key] instanceof Function)) {
                                    array.push({
                                        Key: key,
                                        Value: obj[key]
                                    });
                                }
                            }
                        },
                        function() {
                            return (index < array.length) ?
                                this.Yield(array[index++]) :
                                false;
                        },
                        Functions.Blank);
                });
            },

            Enumerable.Return = function(element) {
                return Enumerable.Repeat(element, 1);
            }

        // Overload:function(input, pattern)
        // Overload:function(input, pattern, flags)
        Enumerable.Matches = function(input, pattern, flags) {
            if (flags == null) flags = "";
            if (pattern instanceof RegExp) {
                flags += (pattern.ignoreCase) ? "i" : "";
                flags += (pattern.multiline) ? "m" : "";
                pattern = pattern.source;
            }
            if (flags.indexOf("g") === -1) flags += "g";

            return new Enumerable(function() {
                var regex;
                return new IEnumerator(
                    function() {
                        regex = new RegExp(pattern, flags)
                    },
                    function() {
                        var match = regex.exec(input);
                        return (match) ? this.Yield(match) : false;
                    },
                    Functions.Blank);
            });
        }

        // Overload:function(start, count)
        // Overload:function(start, count, step)
        Enumerable.Range = function(start, count, step) {
            if (step == null) step = 1;
            return Enumerable.ToInfinity(start, step).Take(count);
        }

        // Overload:function(start, count)
        // Overload:function(start, count, step)
        Enumerable.RangeDown = function(start, count, step) {
            if (step == null) step = 1;
            return Enumerable.ToNegativeInfinity(start, step).Take(count);
        }

        // Overload:function(start, to)
        // Overload:function(start, to, step)
        Enumerable.RangeTo = function(start, to, step) {
            if (step == null) step = 1;
            return (start < to) ?
                Enumerable.ToInfinity(start, step).TakeWhile(function(i) {
                    return i <= to;
                }) :
                Enumerable.ToNegativeInfinity(start, step).TakeWhile(function(i) {
                    return i >= to;
                })
        }

        // Overload:function(obj)
        // Overload:function(obj, num)
        Enumerable.Repeat = function(obj, num) {
            if (num != null) return Enumerable.Repeat(obj).Take(num);

            return new Enumerable(function() {
                return new IEnumerator(
                    Functions.Blank,
                    function() {
                        return this.Yield(obj);
                    },
                    Functions.Blank);
            });
        }

        Enumerable.RepeatWithFinalize = function(initializer, finalizer) {
            initializer = Utils.CreateLambda(initializer);
            finalizer = Utils.CreateLambda(finalizer);

            return new Enumerable(function() {
                var element;
                return new IEnumerator(
                    function() {
                        element = initializer();
                    },
                    function() {
                        return this.Yield(element);
                    },
                    function() {
                        if (element != null) {
                            finalizer(element);
                            element = null;
                        }
                    });
            });
        }

        // Overload:function(func)
        // Overload:function(func, count)
        Enumerable.Generate = function(func, count) {
            if (count != null) return Enumerable.Generate(func).Take(count);
            func = Utils.CreateLambda(func);

            return new Enumerable(function() {
                return new IEnumerator(
                    Functions.Blank,
                    function() {
                        return this.Yield(func());
                    },
                    Functions.Blank);
            });
        }

        // Overload:function()
        // Overload:function(start)
        // Overload:function(start, step)
        Enumerable.ToInfinity = function(start, step) {
            if (start == null) start = 0;
            if (step == null) step = 1;

            return new Enumerable(function() {
                var value;
                return new IEnumerator(
                    function() {
                        value = start - step
                    },
                    function() {
                        return this.Yield(value += step);
                    },
                    Functions.Blank);
            });
        }

        // Overload:function()
        // Overload:function(start)
        // Overload:function(start, step)
        Enumerable.ToNegativeInfinity = function(start, step) {
            if (start == null) start = 0;
            if (step == null) step = 1;

            return new Enumerable(function() {
                var value;
                return new IEnumerator(
                    function() {
                        value = start + step
                    },
                    function() {
                        return this.Yield(value -= step);
                    },
                    Functions.Blank);
            });
        }

        Enumerable.Unfold = function(seed, func) {
            func = Utils.CreateLambda(func);

            return new Enumerable(function() {
                var isFirst = true;
                var value;
                return new IEnumerator(
                    Functions.Blank,
                    function() {
                        if (isFirst) {
                            isFirst = false;
                            value = seed;
                            return this.Yield(value);
                        }
                        value = func(value);
                        return this.Yield(value);
                    },
                    Functions.Blank);
            });
        }

        // Extension Methods

        Enumerable.prototype = {
            /* Projection and Filtering Methods */

            // Overload:function(func)
            // Overload:function(func, resultSelector<element>)
            // Overload:function(func, resultSelector<element, nestLevel>)
            CascadeBreadthFirst: function(func, resultSelector) {
                var source = this;
                func = Utils.CreateLambda(func);
                resultSelector = Utils.CreateLambda(resultSelector);

                return new Enumerable(function() {
                    var enumerator;
                    var nestLevel = 0;
                    var buffer = [];

                    return new IEnumerator(
                        function() {
                            enumerator = source.GetEnumerator();
                        },
                        function() {
                            while (true) {
                                if (enumerator.MoveNext()) {
                                    buffer.push(enumerator.Current());
                                    return this.Yield(resultSelector(enumerator.Current(), nestLevel));
                                }

                                var next = Enumerable.From(buffer).SelectMany(function(x) {
                                    return func(x);
                                });
                                if (!next.Any()) {
                                    return false;
                                } else {
                                    nestLevel++;
                                    buffer = [];
                                    Utils.Dispose(enumerator);
                                    enumerator = next.GetEnumerator();
                                }
                            }
                        },
                        function() {
                            Utils.Dispose(enumerator);
                        });
                });
            },

            // Overload:function(func)
            // Overload:function(func, resultSelector<element>)
            // Overload:function(func, resultSelector<element, nestLevel>)
            CascadeDepthFirst: function(func, resultSelector) {
                var source = this;
                func = Utils.CreateLambda(func);
                resultSelector = Utils.CreateLambda(resultSelector);

                return new Enumerable(function() {
                    var enumeratorStack = [];
                    var enumerator;

                    return new IEnumerator(
                        function() {
                            enumerator = source.GetEnumerator();
                        },
                        function() {
                            while (true) {
                                if (enumerator.MoveNext()) {
                                    var value = resultSelector(enumerator.Current(), enumeratorStack.length);
                                    enumeratorStack.push(enumerator);
                                    enumerator = Enumerable.From(func(enumerator.Current())).GetEnumerator();
                                    return this.Yield(value);
                                }

                                if (enumeratorStack.length <= 0) return false;
                                Utils.Dispose(enumerator);
                                enumerator = enumeratorStack.pop();
                            }
                        },
                        function() {
                            try {
                                Utils.Dispose(enumerator);
                            } finally {
                                Enumerable.From(enumeratorStack).ForEach(function(s) {
                                    s.Dispose();
                                })
                            }
                        });
                });
            },

            Flatten: function() {
                var source = this;

                return new Enumerable(function() {
                    var enumerator;
                    var middleEnumerator = null;

                    return new IEnumerator(
                        function() {
                            enumerator = source.GetEnumerator();
                        },
                        function() {
                            while (true) {
                                if (middleEnumerator != null) {
                                    if (middleEnumerator.MoveNext()) {
                                        return this.Yield(middleEnumerator.Current());
                                    } else {
                                        middleEnumerator = null;
                                    }
                                }

                                if (enumerator.MoveNext()) {
                                    if (enumerator.Current() instanceof Array) {
                                        Utils.Dispose(middleEnumerator);
                                        middleEnumerator = Enumerable.From(enumerator.Current())
                                            .SelectMany(Functions.Identity)
                                            .Flatten()
                                            .GetEnumerator();
                                        continue;
                                    } else {
                                        return this.Yield(enumerator.Current());
                                    }
                                }

                                return false;
                            }
                        },
                        function() {
                            try {
                                Utils.Dispose(enumerator);
                            } finally {
                                Utils.Dispose(middleEnumerator);
                            }
                        });
                });
            },

            Pairwise: function(selector) {
                var source = this;
                selector = Utils.CreateLambda(selector);

                return new Enumerable(function() {
                    var enumerator;

                    return new IEnumerator(
                        function() {
                            enumerator = source.GetEnumerator();
                            enumerator.MoveNext();
                        },
                        function() {
                            var prev = enumerator.Current();
                            return (enumerator.MoveNext()) ?
                                this.Yield(selector(prev, enumerator.Current())) :
                                false;
                        },
                        function() {
                            Utils.Dispose(enumerator);
                        });
                });
            },

            // Overload:function(func)
            // Overload:function(seed,func<value,element>)
            // Overload:function(seed,func<value,element>,resultSelector)
            Scan: function(seed, func, resultSelector) {
                if (resultSelector != null) return this.Scan(seed, func).Select(resultSelector);

                var isUseSeed;
                if (func == null) {
                    func = Utils.CreateLambda(seed); // arguments[0]
                    isUseSeed = false;
                } else {
                    func = Utils.CreateLambda(func);
                    isUseSeed = true;
                }
                var source = this;

                return new Enumerable(function() {
                    var enumerator;
                    var value;
                    var isFirst = true;

                    return new IEnumerator(
                        function() {
                            enumerator = source.GetEnumerator();
                        },
                        function() {
                            if (isFirst) {
                                isFirst = false;
                                if (!isUseSeed) {
                                    if (enumerator.MoveNext()) {
                                        return this.Yield(value = enumerator.Current());
                                    }
                                } else {
                                    return this.Yield(value = seed);
                                }
                            }

                            return (enumerator.MoveNext()) ?
                                this.Yield(value = func(value, enumerator.Current())) :
                                false;
                        },
                        function() {
                            Utils.Dispose(enumerator);
                        });
                });
            },

            // Overload:function(selector<element>)
            // Overload:function(selector<element,index>)
            Select: function(selector) {
                var source = this;
                selector = Utils.CreateLambda(selector);

                return new Enumerable(function() {
                    var enumerator;
                    var index = 0;

                    return new IEnumerator(
                        function() {
                            enumerator = source.GetEnumerator();
                        },
                        function() {
                            return (enumerator.MoveNext()) ?
                                this.Yield(selector(enumerator.Current(), index++)) :
                                false;
                        },
                        function() {
                            Utils.Dispose(enumerator);
                        })
                });
            },

            // Overload:function(collectionSelector<element>)
            // Overload:function(collectionSelector<element,index>)
            // Overload:function(collectionSelector<element>,resultSelector)
            // Overload:function(collectionSelector<element,index>,resultSelector)
            SelectMany: function(collectionSelector, resultSelector) {
                var source = this;
                collectionSelector = Utils.CreateLambda(collectionSelector);
                if (resultSelector == null) resultSelector = function(a, b) {
                    return b;
                }
                resultSelector = Utils.CreateLambda(resultSelector);

                return new Enumerable(function() {
                    var enumerator;
                    var middleEnumerator = undefined;
                    var index = 0;

                    return new IEnumerator(
                        function() {
                            enumerator = source.GetEnumerator();
                        },
                        function() {
                            if (middleEnumerator === undefined) {
                                if (!enumerator.MoveNext()) return false;
                            }
                            do {
                                if (middleEnumerator == null) {
                                    var middleSeq = collectionSelector(enumerator.Current(), index++);
                                    middleEnumerator = Enumerable.From(middleSeq).GetEnumerator();
                                }
                                if (middleEnumerator.MoveNext()) {
                                    return this.Yield(resultSelector(enumerator.Current(), middleEnumerator.Current()));
                                }
                                Utils.Dispose(middleEnumerator);
                                middleEnumerator = null;
                            } while (enumerator.MoveNext())
                            return false;
                        },
                        function() {
                            try {
                                Utils.Dispose(enumerator);
                            } finally {
                                Utils.Dispose(middleEnumerator);
                            }
                        })
                });
            },

            // Overload:function(predicate<element>)
            // Overload:function(predicate<element,index>)
            Where: function(predicate) {
                predicate = Utils.CreateLambda(predicate);
                var source = this;

                return new Enumerable(function() {
                    var enumerator;
                    var index = 0;

                    return new IEnumerator(
                        function() {
                            enumerator = source.GetEnumerator();
                        },
                        function() {
                            while (enumerator.MoveNext()) {
                                if (predicate(enumerator.Current(), index++)) {
                                    return this.Yield(enumerator.Current());
                                }
                            }
                            return false;
                        },
                        function() {
                            Utils.Dispose(enumerator);
                        })
                });
            },

            OfType: function(type) {
                var typeName;
                switch (type) {
                    case Number:
                        typeName = Types.Number;
                        break;
                    case String:
                        typeName = Types.String;
                        break;
                    case Boolean:
                        typeName = Types.Boolean;
                        break;
                    case Function:
                        typeName = Types.Function;
                        break;
                    default:
                        typeName = null;
                        break;
                }
                return (typeName === null) ?
                    this.Where(function(x) {
                        return x instanceof type
                    }) :
                    this.Where(function(x) {
                        return typeof x === typeName
                    });
            },

            // Overload:function(second,selector<outer,inner>)
            // Overload:function(second,selector<outer,inner,index>)
            Zip: function(second, selector) {
                selector = Utils.CreateLambda(selector);
                var source = this;

                return new Enumerable(function() {
                    var firstEnumerator;
                    var secondEnumerator;
                    var index = 0;

                    return new IEnumerator(
                        function() {
                            firstEnumerator = source.GetEnumerator();
                            secondEnumerator = Enumerable.From(second).GetEnumerator();
                        },
                        function() {
                            if (firstEnumerator.MoveNext() && secondEnumerator.MoveNext()) {
                                return this.Yield(selector(firstEnumerator.Current(), secondEnumerator.Current(), index++));
                            }
                            return false;
                        },
                        function() {
                            try {
                                Utils.Dispose(firstEnumerator);
                            } finally {
                                Utils.Dispose(secondEnumerator);
                            }
                        })
                });
            },

            /* Join Methods */

            // Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector)
            // Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector)
            Join: function(inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector) {
                outerKeySelector = Utils.CreateLambda(outerKeySelector);
                innerKeySelector = Utils.CreateLambda(innerKeySelector);
                resultSelector = Utils.CreateLambda(resultSelector);
                compareSelector = Utils.CreateLambda(compareSelector);
                var source = this;

                return new Enumerable(function() {
                    var outerEnumerator;
                    var lookup;
                    var innerElements = null;
                    var innerCount = 0;

                    return new IEnumerator(
                        function() {
                            outerEnumerator = source.GetEnumerator();
                            lookup = Enumerable.From(inner).ToLookup(innerKeySelector, Functions.Identity, compareSelector);
                        },
                        function() {
                            while (true) {
                                if (innerElements != null) {
                                    var innerElement = innerElements[innerCount++];
                                    if (innerElement !== undefined) {
                                        return this.Yield(resultSelector(outerEnumerator.Current(), innerElement));
                                    }

                                    innerElement = null;
                                    innerCount = 0;
                                }

                                if (outerEnumerator.MoveNext()) {
                                    var key = outerKeySelector(outerEnumerator.Current());
                                    innerElements = lookup.Get(key).ToArray();
                                } else {
                                    return false;
                                }
                            }
                        },
                        function() {
                            Utils.Dispose(outerEnumerator);
                        })
                });
            },

            // Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector)
            // Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector)
            GroupJoin: function(inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector) {
                outerKeySelector = Utils.CreateLambda(outerKeySelector);
                innerKeySelector = Utils.CreateLambda(innerKeySelector);
                resultSelector = Utils.CreateLambda(resultSelector);
                compareSelector = Utils.CreateLambda(compareSelector);
                var source = this;

                return new Enumerable(function() {
                    var enumerator = source.GetEnumerator();
                    var lookup = null;

                    return new IEnumerator(
                        function() {
                            enumerator = source.GetEnumerator();
                            lookup = Enumerable.From(inner).ToLookup(innerKeySelector, Functions.Identity, compareSelector);
                        },
                        function() {
                            if (enumerator.MoveNext()) {
                                var innerElement = lookup.Get(outerKeySelector(enumerator.Current()));
                                return this.Yield(resultSelector(enumerator.Current(), innerElement));
                            }
                            return false;
                        },
                        function() {
                            Utils.Dispose(enumerator);
                        })
                });
            },

            /* Set Methods */

            All: function(predicate) {
                predicate = Utils.CreateLambda(predicate);

                var result = true;
                this.ForEach(function(x) {
                    if (!predicate(x)) {
                        result = false;
                        return false; // break
                    }
                });
                return result;
            },

            // Overload:function()
            // Overload:function(predicate)
            Any: function(predicate) {
                predicate = Utils.CreateLambda(predicate);

                var enumerator = this.GetEnumerator();
                try {
                    if (arguments.length == 0) return enumerator.MoveNext(); // case:function()

                    while (enumerator.MoveNext()) // case:function(predicate)
                    {
                        if (predicate(enumerator.Current())) return true;
                    }
                    return false;
                } finally {
                    Utils.Dispose(enumerator);
                }
            },

            Concat: function(second) {
                var source = this;

                return new Enumerable(function() {
                    var firstEnumerator;
                    var secondEnumerator;

                    return new IEnumerator(
                        function() {
                            firstEnumerator = source.GetEnumerator();
                        },
                        function() {
                            if (secondEnumerator == null) {
                                if (firstEnumerator.MoveNext()) return this.Yield(firstEnumerator.Current());
                                secondEnumerator = Enumerable.From(second).GetEnumerator();
                            }
                            if (secondEnumerator.MoveNext()) return this.Yield(secondEnumerator.Current());
                            return false;
                        },
                        function() {
                            try {
                                Utils.Dispose(firstEnumerator);
                            } finally {
                                Utils.Dispose(secondEnumerator);
                            }
                        })
                });
            },

            Insert: function(index, second) {
                var source = this;

                return new Enumerable(function() {
                    var firstEnumerator;
                    var secondEnumerator;
                    var count = 0;
                    var isEnumerated = false;

                    return new IEnumerator(
                        function() {
                            firstEnumerator = source.GetEnumerator();
                            secondEnumerator = Enumerable.From(second).GetEnumerator();
                        },
                        function() {
                            if (count == index && secondEnumerator.MoveNext()) {
                                isEnumerated = true;
                                return this.Yield(secondEnumerator.Current());
                            }
                            if (firstEnumerator.MoveNext()) {
                                count++;
                                return this.Yield(firstEnumerator.Current());
                            }
                            if (!isEnumerated && secondEnumerator.MoveNext()) {
                                return this.Yield(secondEnumerator.Current());
                            }
                            return false;
                        },
                        function() {
                            try {
                                Utils.Dispose(firstEnumerator);
                            } finally {
                                Utils.Dispose(secondEnumerator);
                            }
                        })
                });
            },

            Alternate: function(value) {
                value = Enumerable.Return(value);
                return this.SelectMany(function(elem) {
                    return Enumerable.Return(elem).Concat(value);
                }).TakeExceptLast();
            },

            // Overload:function(value)
            // Overload:function(value, compareSelector)
            Contains: function(value, compareSelector) {
                compareSelector = Utils.CreateLambda(compareSelector);
                var enumerator = this.GetEnumerator();
                try {
                    while (enumerator.MoveNext()) {
                        if (compareSelector(enumerator.Current()) === value) return true;
                    }
                    return false;
                } finally {
                    Utils.Dispose(enumerator)
                }
            },

            DefaultIfEmpty: function(defaultValue) {
                var source = this;

                return new Enumerable(function() {
                    var enumerator;
                    var isFirst = true;

                    return new IEnumerator(
                        function() {
                            enumerator = source.GetEnumerator();
                        },
                        function() {
                            if (enumerator.MoveNext()) {
                                isFirst = false;
                                return this.Yield(enumerator.Current());
                            } else if (isFirst) {
                                isFirst = false;
                                return this.Yield(defaultValue);
                            }
                            return false;
                        },
                        function() {
                            Utils.Dispose(enumerator);
                        })
                });
            },

            // Overload:function()
            // Overload:function(compareSelector)
            Distinct: function(compareSelector) {
                return this.Except(Enumerable.Empty(), compareSelector);
            },

            // Overload:function(second)
            // Overload:function(second, compareSelector)
            Except: function(second, compareSelector) {
                compareSelector = Utils.CreateLambda(compareSelector);
                var source = this;

                return new Enumerable(function() {
                    var enumerator;
                    var keys;

                    return new IEnumerator(
                        function() {
                            enumerator = source.GetEnumerator();
                            keys = new Dictionary(compareSelector);
                            Enumerable.From(second).ForEach(function(key) {
                                keys.Add(key);
                            });
                        },
                        function() {
                            while (enumerator.MoveNext()) {
                                var current = enumerator.Current();
                                if (!keys.Contains(current)) {
                                    keys.Add(current);
                                    return this.Yield(current);
                                }
                            }
                            return false;
                        },
                        function() {
                            Utils.Dispose(enumerator);
                        })
                });
            },

            // Overload:function(second)
            // Overload:function(second, compareSelector)
            Intersect: function(second, compareSelector) {
                compareSelector = Utils.CreateLambda(compareSelector);
                var source = this;

                return new Enumerable(function() {
                    var enumerator;
                    var keys;
                    var outs;

                    return new IEnumerator(
                        function() {
                            enumerator = source.GetEnumerator();

                            keys = new Dictionary(compareSelector);
                            Enumerable.From(second).ForEach(function(key) {
                                keys.Add(key);
                            });
                            outs = new Dictionary(compareSelector);
                        },
                        function() {
                            while (enumerator.MoveNext()) {
                                var current = enumerator.Current();
                                if (!outs.Contains(current) && keys.Contains(current)) {
                                    outs.Add(current);
                                    return this.Yield(current);
                                }
                            }
                            return false;
                        },
                        function() {
                            Utils.Dispose(enumerator);
                        })
                });
            },

            // Overload:function(second)
            // Overload:function(second, compareSelector)
            SequenceEqual: function(second, compareSelector) {
                compareSelector = Utils.CreateLambda(compareSelector);

                var firstEnumerator = this.GetEnumerator();
                try {
                    var secondEnumerator = Enumerable.From(second).GetEnumerator();
                    try {
                        while (firstEnumerator.MoveNext()) {
                            if (!secondEnumerator.MoveNext() ||
                                compareSelector(firstEnumerator.Current()) !== compareSelector(secondEnumerator.Current())) {
                                return false;
                            }
                        }

                        if (secondEnumerator.MoveNext()) return false;
                        return true;
                    } finally {
                        Utils.Dispose(secondEnumerator);
                    }
                } finally {
                    Utils.Dispose(firstEnumerator);
                }
            },

            Union: function(second, compareSelector) {
                compareSelector = Utils.CreateLambda(compareSelector);
                var source = this;

                return new Enumerable(function() {
                    var firstEnumerator;
                    var secondEnumerator;
                    var keys;

                    return new IEnumerator(
                        function() {
                            firstEnumerator = source.GetEnumerator();
                            keys = new Dictionary(compareSelector);
                        },
                        function() {
                            var current;
                            if (secondEnumerator === undefined) {
                                while (firstEnumerator.MoveNext()) {
                                    current = firstEnumerator.Current();
                                    if (!keys.Contains(current)) {
                                        keys.Add(current);
                                        return this.Yield(current);
                                    }
                                }
                                secondEnumerator = Enumerable.From(second).GetEnumerator();
                            }
                            while (secondEnumerator.MoveNext()) {
                                current = secondEnumerator.Current();
                                if (!keys.Contains(current)) {
                                    keys.Add(current);
                                    return this.Yield(current);
                                }
                            }
                            return false;
                        },
                        function() {
                            try {
                                Utils.Dispose(firstEnumerator);
                            } finally {
                                Utils.Dispose(secondEnumerator);
                            }
                        })
                });
            },

            /* Ordering Methods */

            OrderBy: function(keySelector) {
                return new OrderedEnumerable(this, keySelector, false);
            },

            OrderByDescending: function(keySelector) {
                return new OrderedEnumerable(this, keySelector, true);
            },

            Reverse: function() {
                var source = this;

                return new Enumerable(function() {
                    var buffer;
                    var index;

                    return new IEnumerator(
                        function() {
                            buffer = source.ToArray();
                            index = buffer.length;
                        },
                        function() {
                            return (index > 0) ?
                                this.Yield(buffer[--index]) :
                                false;
                        },
                        Functions.Blank)
                });
            },

            Shuffle: function() {
                var source = this;

                return new Enumerable(function() {
                    var buffer;

                    return new IEnumerator(
                        function() {
                            buffer = source.ToArray();
                        },
                        function() {
                            if (buffer.length > 0) {
                                var i = Math.floor(Math.random() * buffer.length);
                                return this.Yield(buffer.splice(i, 1)[0]);
                            }
                            return false;
                        },
                        Functions.Blank)
                });
            },

            /* Grouping Methods */

            // Overload:function(keySelector)
            // Overload:function(keySelector,elementSelector)
            // Overload:function(keySelector,elementSelector,resultSelector)
            // Overload:function(keySelector,elementSelector,resultSelector,compareSelector)
            GroupBy: function(keySelector, elementSelector, resultSelector, compareSelector) {
                var source = this;
                keySelector = Utils.CreateLambda(keySelector);
                elementSelector = Utils.CreateLambda(elementSelector);
                if (resultSelector != null) resultSelector = Utils.CreateLambda(resultSelector);
                compareSelector = Utils.CreateLambda(compareSelector);

                return new Enumerable(function() {
                    var enumerator;

                    return new IEnumerator(
                        function() {
                            enumerator = source.ToLookup(keySelector, elementSelector, compareSelector)
                                .ToEnumerable()
                                .GetEnumerator();
                        },
                        function() {
                            while (enumerator.MoveNext()) {
                                return (resultSelector == null) ?
                                    this.Yield(enumerator.Current()) :
                                    this.Yield(resultSelector(enumerator.Current().Key(), enumerator.Current()));
                            }
                            return false;
                        },
                        function() {
                            Utils.Dispose(enumerator);
                        })
                });
            },

            // Overload:function(keySelector)
            // Overload:function(keySelector,elementSelector)
            // Overload:function(keySelector,elementSelector,resultSelector)
            // Overload:function(keySelector,elementSelector,resultSelector,compareSelector)
            PartitionBy: function(keySelector, elementSelector, resultSelector, compareSelector) {

                var source = this;
                keySelector = Utils.CreateLambda(keySelector);
                elementSelector = Utils.CreateLambda(elementSelector);
                compareSelector = Utils.CreateLambda(compareSelector);
                var hasResultSelector;
                if (resultSelector == null) {
                    hasResultSelector = false;
                    resultSelector = function(key, group) {
                        return new Grouping(key, group)
                    }
                } else {
                    hasResultSelector = true;
                    resultSelector = Utils.CreateLambda(resultSelector);
                }

                return new Enumerable(function() {
                    var enumerator;
                    var key;
                    var compareKey;
                    var group = [];

                    return new IEnumerator(
                        function() {
                            enumerator = source.GetEnumerator();
                            if (enumerator.MoveNext()) {
                                key = keySelector(enumerator.Current());
                                compareKey = compareSelector(key);
                                group.push(elementSelector(enumerator.Current()));
                            }
                        },
                        function() {
                            var hasNext;
                            while ((hasNext = enumerator.MoveNext()) == true) {
                                if (compareKey === compareSelector(keySelector(enumerator.Current()))) {
                                    group.push(elementSelector(enumerator.Current()));
                                } else break;
                            }

                            if (group.length > 0) {
                                var result = (hasResultSelector) ?
                                    resultSelector(key, Enumerable.From(group)) :
                                    resultSelector(key, group);
                                if (hasNext) {
                                    key = keySelector(enumerator.Current());
                                    compareKey = compareSelector(key);
                                    group = [elementSelector(enumerator.Current())];
                                } else group = [];

                                return this.Yield(result);
                            }

                            return false;
                        },
                        function() {
                            Utils.Dispose(enumerator);
                        })
                });
            },

            BufferWithCount: function(count) {
                var source = this;

                return new Enumerable(function() {
                    var enumerator;

                    return new IEnumerator(
                        function() {
                            enumerator = source.GetEnumerator();
                        },
                        function() {
                            var array = [];
                            var index = 0;
                            while (enumerator.MoveNext()) {
                                array.push(enumerator.Current());
                                if (++index >= count) return this.Yield(array);
                            }
                            if (array.length > 0) return this.Yield(array);
                            return false;
                        },
                        function() {
                            Utils.Dispose(enumerator);
                        })
                });
            },

            /* Aggregate Methods */

            // Overload:function(func)
            // Overload:function(seed,func)
            // Overload:function(seed,func,resultSelector)
            Aggregate: function(seed, func, resultSelector) {
                return this.Scan(seed, func, resultSelector).Last();
            },

            // Overload:function()
            // Overload:function(selector)
            Average: function(selector) {
                selector = Utils.CreateLambda(selector);

                var sum = 0;
                var count = 0;
                this.ForEach(function(x) {
                    sum += selector(x);
                    ++count;
                });

                return sum / count;
            },

            // Overload:function()
            // Overload:function(predicate)
            Count: function(predicate) {
                predicate = (predicate == null) ? Functions.True : Utils.CreateLambda(predicate);

                var count = 0;
                this.ForEach(function(x, i) {
                    if (predicate(x, i)) ++count;
                });
                return count;
            },

            // Overload:function()
            // Overload:function(selector)
            Max: function(selector) {
                if (selector == null) selector = Functions.Identity;
                return this.Select(selector).Aggregate(function(a, b) {
                    return (a > b) ? a : b;
                });
            },

            // Overload:function()
            // Overload:function(selector)
            Min: function(selector) {
                if (selector == null) selector = Functions.Identity;
                return this.Select(selector).Aggregate(function(a, b) {
                    return (a < b) ? a : b;
                });
            },

            MaxBy: function(keySelector) {
                keySelector = Utils.CreateLambda(keySelector);
                return this.Aggregate(function(a, b) {
                    return (keySelector(a) > keySelector(b)) ? a : b
                });
            },

            MinBy: function(keySelector) {
                keySelector = Utils.CreateLambda(keySelector);
                return this.Aggregate(function(a, b) {
                    return (keySelector(a) < keySelector(b)) ? a : b
                });
            },

            // Overload:function()
            // Overload:function(selector)
            Sum: function(selector) {
                if (selector == null) selector = Functions.Identity;
                return this.Select(selector).Aggregate(0, function(a, b) {
                    return a + b;
                });
            },

            /* Paging Methods */

            ElementAt: function(index) {
                var value;
                var found = false;
                this.ForEach(function(x, i) {
                    if (i == index) {
                        value = x;
                        found = true;
                        return false;
                    }
                });

                if (!found) throw new Error("index is less than 0 or greater than or equal to the number of elements in source.");
                return value;
            },

            ElementAtOrDefault: function(index, defaultValue) {
                var value;
                var found = false;
                this.ForEach(function(x, i) {
                    if (i == index) {
                        value = x;
                        found = true;
                        return false;
                    }
                });

                return (!found) ? defaultValue : value;
            },

            // Overload:function()
            // Overload:function(predicate)
            First: function(predicate) {
                if (predicate != null) return this.Where(predicate).First();

                var value;
                var found = false;
                this.ForEach(function(x) {
                    value = x;
                    found = true;
                    return false;
                });

                if (!found) throw new Error("First:No element satisfies the condition.");
                return value;
            },

            // Overload:function(defaultValue)
            // Overload:function(defaultValue,predicate)
            FirstOrDefault: function(defaultValue, predicate) {
                if (predicate != null) return this.Where(predicate).FirstOrDefault(defaultValue);

                var value;
                var found = false;
                this.ForEach(function(x) {
                    value = x;
                    found = true;
                    return false;
                });
                return (!found) ? defaultValue : value;
            },

            // Overload:function()
            // Overload:function(predicate)
            Last: function(predicate) {
                if (predicate != null) return this.Where(predicate).Last();

                var value;
                var found = false;
                this.ForEach(function(x) {
                    found = true;
                    value = x;
                });

                if (!found) throw new Error("Last:No element satisfies the condition.");
                return value;
            },

            // Overload:function(defaultValue)
            // Overload:function(defaultValue,predicate)
            LastOrDefault: function(defaultValue, predicate) {
                if (predicate != null) return this.Where(predicate).LastOrDefault(defaultValue);

                var value;
                var found = false;
                this.ForEach(function(x) {
                    found = true;
                    value = x;
                });
                return (!found) ? defaultValue : value;
            },

            // Overload:function()
            // Overload:function(predicate)
            Single: function(predicate) {
                if (predicate != null) return this.Where(predicate).Single();

                var value;
                var found = false;
                this.ForEach(function(x) {
                    if (!found) {
                        found = true;
                        value = x;
                    } else throw new Error("Single:sequence contains more than one element.");
                });

                if (!found) throw new Error("Single:No element satisfies the condition.");
                return value;
            },

            // Overload:function(defaultValue)
            // Overload:function(defaultValue,predicate)
            SingleOrDefault: function(defaultValue, predicate) {
                if (predicate != null) return this.Where(predicate).SingleOrDefault(defaultValue);

                var value;
                var found = false;
                this.ForEach(function(x) {
                    if (!found) {
                        found = true;
                        value = x;
                    } else throw new Error("Single:sequence contains more than one element.");
                });

                return (!found) ? defaultValue : value;
            },

            Skip: function(count) {
                var source = this;

                return new Enumerable(function() {
                    var enumerator;
                    var index = 0;

                    return new IEnumerator(
                        function() {
                            enumerator = source.GetEnumerator();
                            while (index++ < count && enumerator.MoveNext()) {};
                        },
                        function() {
                            return (enumerator.MoveNext()) ?
                                this.Yield(enumerator.Current()) :
                                false;
                        },
                        function() {
                            Utils.Dispose(enumerator);
                        })
                });
            },

            // Overload:function(predicate<element>)
            // Overload:function(predicate<element,index>)
            SkipWhile: function(predicate) {
                predicate = Utils.CreateLambda(predicate);
                var source = this;

                return new Enumerable(function() {
                    var enumerator;
                    var index = 0;
                    var isSkipEnd = false;

                    return new IEnumerator(
                        function() {
                            enumerator = source.GetEnumerator();
                        },
                        function() {
                            while (!isSkipEnd) {
                                if (enumerator.MoveNext()) {
                                    if (!predicate(enumerator.Current(), index++)) {
                                        isSkipEnd = true;
                                        return this.Yield(enumerator.Current());
                                    }
                                    continue;
                                } else return false;
                            }

                            return (enumerator.MoveNext()) ?
                                this.Yield(enumerator.Current()) :
                                false;

                        },
                        function() {
                            Utils.Dispose(enumerator);
                        });
                });
            },

            Take: function(count) {
                var source = this;

                return new Enumerable(function() {
                    var enumerator;
                    var index = 0;

                    return new IEnumerator(
                        function() {
                            enumerator = source.GetEnumerator();
                        },
                        function() {
                            return (index++ < count && enumerator.MoveNext()) ?
                                this.Yield(enumerator.Current()) :
                                false;
                        },
                        function() {
                            Utils.Dispose(enumerator);
                        }
                    )
                });
            },

            // Overload:function(predicate<element>)
            // Overload:function(predicate<element,index>)
            TakeWhile: function(predicate) {
                predicate = Utils.CreateLambda(predicate);
                var source = this;

                return new Enumerable(function() {
                    var enumerator;
                    var index = 0;

                    return new IEnumerator(
                        function() {
                            enumerator = source.GetEnumerator();
                        },
                        function() {
                            return (enumerator.MoveNext() && predicate(enumerator.Current(), index++)) ?
                                this.Yield(enumerator.Current()) :
                                false;
                        },
                        function() {
                            Utils.Dispose(enumerator);
                        });
                });
            },

            // Overload:function()
            // Overload:function(count)
            TakeExceptLast: function(count) {
                if (count == null) count = 1;
                var source = this;

                return new Enumerable(function() {
                    if (count <= 0) return source.GetEnumerator(); // do nothing

                    var enumerator;
                    var q = [];

                    return new IEnumerator(
                        function() {
                            enumerator = source.GetEnumerator();
                        },
                        function() {
                            while (enumerator.MoveNext()) {
                                if (q.length == count) {
                                    q.push(enumerator.Current());
                                    return this.Yield(q.shift());
                                }
                                q.push(enumerator.Current());
                            }
                            return false;
                        },
                        function() {
                            Utils.Dispose(enumerator);
                        });
                });
            },

            TakeFromLast: function(count) {
                if (count <= 0 || count == null) return Enumerable.Empty();
                var source = this;

                return new Enumerable(function() {
                    var sourceEnumerator;
                    var enumerator;
                    var q = [];

                    return new IEnumerator(
                        function() {
                            sourceEnumerator = source.GetEnumerator();
                        },
                        function() {
                            while (sourceEnumerator.MoveNext()) {
                                if (q.length == count) q.shift()
                                q.push(sourceEnumerator.Current());
                            }
                            if (enumerator == null) {
                                enumerator = Enumerable.From(q).GetEnumerator();
                            }
                            return (enumerator.MoveNext()) ?
                                this.Yield(enumerator.Current()) :
                                false;
                        },
                        function() {
                            Utils.Dispose(enumerator);
                        });
                });
            },

            IndexOf: function(item) {
                var found = null;
                this.ForEach(function(x, i) {
                    if (x === item) {
                        found = i;
                        return true;
                    }
                });

                return (found !== null) ? found : -1;
            },

            LastIndexOf: function(item) {
                var result = -1;
                this.ForEach(function(x, i) {
                    if (x === item) result = i;
                });

                return result;
            },

            /* Convert Methods */

            ToArray: function() {
                var array = [];
                this.ForEach(function(x) {
                    array.push(x)
                });
                return array;
            },

            // Overload:function(keySelector)
            // Overload:function(keySelector, elementSelector)
            // Overload:function(keySelector, elementSelector, compareSelector)
            ToLookup: function(keySelector, elementSelector, compareSelector) {
                keySelector = Utils.CreateLambda(keySelector);
                elementSelector = Utils.CreateLambda(elementSelector);
                compareSelector = Utils.CreateLambda(compareSelector);

                var dict = new Dictionary(compareSelector);
                this.ForEach(function(x) {
                    var key = keySelector(x);
                    var element = elementSelector(x);

                    var array = dict.Get(key);
                    if (array !== undefined) array.push(element);
                    else dict.Add(key, [element]);
                });
                return new Lookup(dict);
            },

            ToObject: function(keySelector, elementSelector) {
                keySelector = Utils.CreateLambda(keySelector);
                elementSelector = Utils.CreateLambda(elementSelector);

                var obj = {};
                this.ForEach(function(x) {
                    obj[keySelector(x)] = elementSelector(x);
                });
                return obj;
            },

            // Overload:function(keySelector, elementSelector)
            // Overload:function(keySelector, elementSelector, compareSelector)
            ToDictionary: function(keySelector, elementSelector, compareSelector) {
                keySelector = Utils.CreateLambda(keySelector);
                elementSelector = Utils.CreateLambda(elementSelector);
                compareSelector = Utils.CreateLambda(compareSelector);

                var dict = new Dictionary(compareSelector);
                this.ForEach(function(x) {
                    dict.Add(keySelector(x), elementSelector(x));
                });
                return dict;
            },

            // Overload:function()
            // Overload:function(replacer)
            // Overload:function(replacer, space)
            ToJSON: function(replacer, space) {
                return JSON.stringify(this.ToArray(), replacer, space);
            },

            // Overload:function()
            // Overload:function(separator)
            // Overload:function(separator,selector)
            ToString: function(separator, selector) {
                if (separator == null) separator = "";
                if (selector == null) selector = Functions.Identity;

                return this.Select(selector).ToArray().join(separator);
            },


            /* Action Methods */

            // Overload:function(action<element>)
            // Overload:function(action<element,index>)
            Do: function(action) {
                var source = this;
                action = Utils.CreateLambda(action);

                return new Enumerable(function() {
                    var enumerator;
                    var index = 0;

                    return new IEnumerator(
                        function() {
                            enumerator = source.GetEnumerator();
                        },
                        function() {
                            if (enumerator.MoveNext()) {
                                action(enumerator.Current(), index++);
                                return this.Yield(enumerator.Current());
                            }
                            return false;
                        },
                        function() {
                            Utils.Dispose(enumerator);
                        });
                });
            },

            // Overload:function(action<element>)
            // Overload:function(action<element,index>)
            // Overload:function(func<element,bool>)
            // Overload:function(func<element,index,bool>)
            ForEach: function(action) {
                action = Utils.CreateLambda(action);

                var index = 0;
                var enumerator = this.GetEnumerator();
                try {
                    while (enumerator.MoveNext()) {
                        if (action(enumerator.Current(), index++) === false) break;
                    }
                } finally {
                    Utils.Dispose(enumerator);
                }
            },

            // Overload:function()
            // Overload:function(separator)
            // Overload:function(separator,selector)
            Write: function(separator, selector) {
                if (separator == null) separator = "";
                selector = Utils.CreateLambda(selector);

                var isFirst = true;
                this.ForEach(function(item) {
                    if (isFirst) isFirst = false;
                    else document.write(separator);
                    document.write(selector(item));
                });
            },

            // Overload:function()
            // Overload:function(selector)
            WriteLine: function(selector) {
                selector = Utils.CreateLambda(selector);

                this.ForEach(function(item) {
                    document.write(selector(item));
                    document.write("<br />");
                });
            },

            Force: function() {
                var enumerator = this.GetEnumerator();

                try {
                    while (enumerator.MoveNext()) {}
                } finally {
                    Utils.Dispose(enumerator);
                }
            },

            /* Functional Methods */

            Let: function(func) {
                func = Utils.CreateLambda(func);
                var source = this;

                return new Enumerable(function() {
                    var enumerator;

                    return new IEnumerator(
                        function() {
                            enumerator = Enumerable.From(func(source)).GetEnumerator();
                        },
                        function() {
                            return (enumerator.MoveNext()) ?
                                this.Yield(enumerator.Current()) :
                                false;
                        },
                        function() {
                            Utils.Dispose(enumerator);
                        })
                });
            },

            Share: function() {
                var source = this;
                var sharedEnumerator;

                return new Enumerable(function() {
                    return new IEnumerator(
                        function() {
                            if (sharedEnumerator == null) {
                                sharedEnumerator = source.GetEnumerator();
                            }
                        },
                        function() {
                            return (sharedEnumerator.MoveNext()) ?
                                this.Yield(sharedEnumerator.Current()) :
                                false;
                        },
                        Functions.Blank
                    )
                });
            },

            MemoizeAll: function() {
                var source = this;
                var cache;
                var enumerator;

                return new Enumerable(function() {
                    var index = -1;

                    return new IEnumerator(
                        function() {
                            if (enumerator == null) {
                                enumerator = source.GetEnumerator();
                                cache = [];
                            }
                        },
                        function() {
                            index++;
                            if (cache.length <= index) {
                                return (enumerator.MoveNext()) ?
                                    this.Yield(cache[index] = enumerator.Current()) :
                                    false;
                            }

                            return this.Yield(cache[index]);
                        },
                        Functions.Blank
                    )
                });
            },

            /* Error Handling Methods */

            Catch: function(handler) {
                handler = Utils.CreateLambda(handler);
                var source = this;

                return new Enumerable(function() {
                    var enumerator;

                    return new IEnumerator(
                        function() {
                            enumerator = source.GetEnumerator();
                        },
                        function() {
                            try {
                                return (enumerator.MoveNext()) ?
                                    this.Yield(enumerator.Current()) :
                                    false;
                            } catch (e) {
                                handler(e);
                                return false;
                            }
                        },
                        function() {
                            Utils.Dispose(enumerator);
                        });
                });
            },

            Finally: function(finallyAction) {
                finallyAction = Utils.CreateLambda(finallyAction);
                var source = this;

                return new Enumerable(function() {
                    var enumerator;

                    return new IEnumerator(
                        function() {
                            enumerator = source.GetEnumerator();
                        },
                        function() {
                            return (enumerator.MoveNext()) ?
                                this.Yield(enumerator.Current()) :
                                false;
                        },
                        function() {
                            try {
                                Utils.Dispose(enumerator);
                            } finally {
                                finallyAction();
                            }
                        });
                });
            },

            /* For Debug Methods */

            // Overload:function()
            // Overload:function(message)
            // Overload:function(message,selector)
            Trace: function(message, selector) {
                if (message == null) message = "Trace";
                selector = Utils.CreateLambda(selector);

                return this.Do(function(item) {
                    console.log(message, ":", selector(item));
                });
            }
        }

        // private

        // static functions
        var Functions = {
            Identity: function(x) {
                return x;
            },
            True: function() {
                return true;
            },
            Blank: function() {}
        }

        // static const
        var Types = {
            Boolean: typeof true,
            Number: typeof 0,
            String: typeof "",
            Object: typeof {},
            Undefined: typeof undefined,
            Function: typeof
            function() {}
        }

        // static utility methods
        var Utils = {
            // Create anonymous function from lambda expression string
            CreateLambda: function(expression) {
                if (expression == null) return Functions.Identity;
                if (typeof expression == Types.String) {
                    if (expression == "") {
                        return Functions.Identity;
                    } else if (expression.indexOf("=>") == -1) {
                        return new Function("$,$$,$$$,$$$$", "return " + expression);
                    } else {
                        var expr = expression.match(/^[(\s]*([^()]*?)[)\s]*=>(.*)/);
                        return new Function(expr[1], "return " + expr[2]);
                    }
                }
                return expression;
            },

            IsIEnumerable: function(obj) {
                if (typeof Enumerator != Types.Undefined) {
                    try {
                        new Enumerator(obj);
                        return true;
                    } catch (e) {}
                }
                return false;
            },

            Compare: function(a, b) {
                return (a === b) ? 0 :
                    (a > b) ? 1 :
                    -1;
            },

            Dispose: function(obj) {
                if (obj != null) obj.Dispose();
            }
        }

        // IEnumerator State
        var State = {
            Before: 0,
            Running: 1,
            After: 2
        }

        // name "Enumerator" is conflict JScript's "Enumerator"
        var IEnumerator = function(initialize, tryGetNext, dispose) {
            var yielder = new Yielder();
            var state = State.Before;

            this.Current = yielder.Current;
            this.MoveNext = function() {
                try {
                    switch (state) {
                        case State.Before:
                            state = State.Running;
                            initialize(); // fall through
                        case State.Running:
                            if (tryGetNext.apply(yielder)) {
                                return true;
                            } else {
                                this.Dispose();
                                return false;
                            }
                        case State.After:
                            return false;
                    }
                } catch (e) {
                    this.Dispose();
                    throw e;
                }
            }
            this.Dispose = function() {
                if (state != State.Running) return;

                try {
                    dispose();
                } finally {
                    state = State.After;
                }
            }
        }

        // for tryGetNext
        var Yielder = function() {
            var current = null;
            this.Current = function() {
                return current;
            }
            this.Yield = function(value) {
                current = value;
                return true;
            }
        }

        // for OrderBy/ThenBy

        var OrderedEnumerable = function(source, keySelector, descending, parent) {
            this.source = source;
            this.keySelector = Utils.CreateLambda(keySelector);
            this.descending = descending;
            this.parent = parent;
        }
        OrderedEnumerable.prototype = new Enumerable();

        OrderedEnumerable.prototype.CreateOrderedEnumerable = function(keySelector, descending) {
            return new OrderedEnumerable(this.source, keySelector, descending, this);
        }

        OrderedEnumerable.prototype.ThenBy = function(keySelector) {
            return this.CreateOrderedEnumerable(keySelector, false);
        }

        OrderedEnumerable.prototype.ThenByDescending = function(keySelector) {
            return this.CreateOrderedEnumerable(keySelector, true);
        }

        OrderedEnumerable.prototype.GetEnumerator = function() {
            var self = this;
            var buffer;
            var indexes;
            var index = 0;

            return new IEnumerator(
                function() {
                    buffer = [];
                    indexes = [];
                    self.source.ForEach(function(item, index) {
                        buffer.push(item);
                        indexes.push(index);
                    });
                    var sortContext = SortContext.Create(self, null);
                    sortContext.GenerateKeys(buffer);

                    indexes.sort(function(a, b) {
                        return sortContext.Compare(a, b);
                    });
                },
                function() {
                    return (index < indexes.length) ?
                        this.Yield(buffer[indexes[index++]]) :
                        false;
                },
                Functions.Blank
            )
        }

        var SortContext = function(keySelector, descending, child) {
            this.keySelector = keySelector;
            this.descending = descending;
            this.child = child;
            this.keys = null;
        }

        SortContext.Create = function(orderedEnumerable, currentContext) {
            var context = new SortContext(orderedEnumerable.keySelector, orderedEnumerable.descending, currentContext);
            if (orderedEnumerable.parent != null) return SortContext.Create(orderedEnumerable.parent, context);
            return context;
        }

        SortContext.prototype.GenerateKeys = function(source) {
            var len = source.length;
            var keySelector = this.keySelector;
            var keys = new Array(len);
            for (var i = 0; i < len; i++) keys[i] = keySelector(source[i]);
            this.keys = keys;

            if (this.child != null) this.child.GenerateKeys(source);
        }

        SortContext.prototype.Compare = function(index1, index2) {
            var comparison = Utils.Compare(this.keys[index1], this.keys[index2]);

            if (comparison == 0) {
                if (this.child != null) return this.child.Compare(index1, index2)
                comparison = Utils.Compare(index1, index2);
            }

            return (this.descending) ? -comparison : comparison;
        }

        // optimize array or arraylike object

        var ArrayEnumerable = function(source) {
            this.source = source;
        }
        ArrayEnumerable.prototype = new Enumerable();

        ArrayEnumerable.prototype.Any = function(predicate) {
            return (predicate == null) ?
                (this.source.length > 0) :
                Enumerable.prototype.Any.apply(this, arguments);
        }

        ArrayEnumerable.prototype.Count = function(predicate) {
            return (predicate == null) ?
                this.source.length :
                Enumerable.prototype.Count.apply(this, arguments);
        }

        ArrayEnumerable.prototype.ElementAt = function(index) {
            return (0 <= index && index < this.source.length) ?
                this.source[index] :
                Enumerable.prototype.ElementAt.apply(this, arguments);
        }

        ArrayEnumerable.prototype.ElementAtOrDefault = function(index, defaultValue) {
            return (0 <= index && index < this.source.length) ?
                this.source[index] :
                defaultValue;
        }

        ArrayEnumerable.prototype.First = function(predicate) {
            return (predicate == null && this.source.length > 0) ?
                this.source[0] :
                Enumerable.prototype.First.apply(this, arguments);
        }

        ArrayEnumerable.prototype.FirstOrDefault = function(defaultValue, predicate) {
            if (predicate != null) {
                return Enumerable.prototype.FirstOrDefault.apply(this, arguments);
            }

            return this.source.length > 0 ? this.source[0] : defaultValue;
        }

        ArrayEnumerable.prototype.Last = function(predicate) {
            return (predicate == null && this.source.length > 0) ?
                this.source[this.source.length - 1] :
                Enumerable.prototype.Last.apply(this, arguments);
        }

        ArrayEnumerable.prototype.LastOrDefault = function(defaultValue, predicate) {
            if (predicate != null) {
                return Enumerable.prototype.LastOrDefault.apply(this, arguments);
            }

            return this.source.length > 0 ? this.source[this.source.length - 1] : defaultValue;
        }

        ArrayEnumerable.prototype.Skip = function(count) {
            var source = this.source;

            return new Enumerable(function() {
                var index;

                return new IEnumerator(
                    function() {
                        index = (count < 0) ? 0 : count
                    },
                    function() {
                        return (index < source.length) ?
                            this.Yield(source[index++]) :
                            false;
                    },
                    Functions.Blank);
            });
        };

        ArrayEnumerable.prototype.TakeExceptLast = function(count) {
            if (count == null) count = 1;
            return this.Take(this.source.length - count);
        }

        ArrayEnumerable.prototype.TakeFromLast = function(count) {
            return this.Skip(this.source.length - count);
        }

        ArrayEnumerable.prototype.Reverse = function() {
            var source = this.source;

            return new Enumerable(function() {
                var index;

                return new IEnumerator(
                    function() {
                        index = source.length;
                    },
                    function() {
                        return (index > 0) ?
                            this.Yield(source[--index]) :
                            false;
                    },
                    Functions.Blank)
            });
        }

        ArrayEnumerable.prototype.SequenceEqual = function(second, compareSelector) {
            if ((second instanceof ArrayEnumerable || second instanceof Array) &&
                compareSelector == null &&
                Enumerable.From(second).Count() != this.Count()) {
                return false;
            }

            return Enumerable.prototype.SequenceEqual.apply(this, arguments);
        }

        ArrayEnumerable.prototype.ToString = function(separator, selector) {
            if (selector != null || !(this.source instanceof Array)) {
                return Enumerable.prototype.ToString.apply(this, arguments);
            }

            if (separator == null) separator = "";
            return this.source.join(separator);
        }

        ArrayEnumerable.prototype.GetEnumerator = function() {
            var source = this.source;
            var index = 0;

            return new IEnumerator(
                Functions.Blank,
                function() {
                    return (index < source.length) ?
                        this.Yield(source[index++]) :
                        false;
                },
                Functions.Blank);
        }

        // Collections

        var Dictionary = (function() {
            // static utility methods
            var HasOwnProperty = function(target, key) {
                return Object.prototype.hasOwnProperty.call(target, key);
            }

            var ComputeHashCode = function(obj) {
                if (obj === null) return "null";
                if (obj === undefined) return "undefined";

                return (typeof obj.toString === Types.Function) ?
                    obj.toString() :
                    Object.prototype.toString.call(obj);
            }

            // LinkedList for Dictionary
            var HashEntry = function(key, value) {
                this.Key = key;
                this.Value = value;
                this.Prev = null;
                this.Next = null;
            }

            var EntryList = function() {
                this.First = null;
                this.Last = null;
            }
            EntryList.prototype = {
                AddLast: function(entry) {
                    if (this.Last != null) {
                        this.Last.Next = entry;
                        entry.Prev = this.Last;
                        this.Last = entry;
                    } else this.First = this.Last = entry;
                },

                Replace: function(entry, newEntry) {
                    if (entry.Prev != null) {
                        entry.Prev.Next = newEntry;
                        newEntry.Prev = entry.Prev;
                    } else this.First = newEntry;

                    if (entry.Next != null) {
                        entry.Next.Prev = newEntry;
                        newEntry.Next = entry.Next;
                    } else this.Last = newEntry;

                },

                Remove: function(entry) {
                    if (entry.Prev != null) entry.Prev.Next = entry.Next;
                    else this.First = entry.Next;

                    if (entry.Next != null) entry.Next.Prev = entry.Prev;
                    else this.Last = entry.Prev;
                }
            }

            // Overload:function()
            // Overload:function(compareSelector)
            var Dictionary = function(compareSelector) {
                this.count = 0;
                this.entryList = new EntryList();
                this.buckets = {}; // as Dictionary<string,List<object>>
                this.compareSelector = (compareSelector == null) ? Functions.Identity : compareSelector;
            }

            Dictionary.prototype = {
                Add: function(key, value) {
                    var compareKey = this.compareSelector(key);
                    var hash = ComputeHashCode(compareKey);
                    var entry = new HashEntry(key, value);
                    if (HasOwnProperty(this.buckets, hash)) {
                        var array = this.buckets[hash];
                        for (var i = 0; i < array.length; i++) {
                            if (this.compareSelector(array[i].Key) === compareKey) {
                                this.entryList.Replace(array[i], entry);
                                array[i] = entry;
                                return;
                            }
                        }
                        array.push(entry);
                    } else {
                        this.buckets[hash] = [entry];
                    }
                    this.count++;
                    this.entryList.AddLast(entry);
                },

                Get: function(key) {
                    var compareKey = this.compareSelector(key);
                    var hash = ComputeHashCode(compareKey);
                    if (!HasOwnProperty(this.buckets, hash)) return undefined;

                    var array = this.buckets[hash];
                    for (var i = 0; i < array.length; i++) {
                        var entry = array[i];
                        if (this.compareSelector(entry.Key) === compareKey) return entry.Value;
                    }
                    return undefined;
                },

                Set: function(key, value) {
                    var compareKey = this.compareSelector(key);
                    var hash = ComputeHashCode(compareKey);
                    if (HasOwnProperty(this.buckets, hash)) {
                        var array = this.buckets[hash];
                        for (var i = 0; i < array.length; i++) {
                            if (this.compareSelector(array[i].Key) === compareKey) {
                                var newEntry = new HashEntry(key, value);
                                this.entryList.Replace(array[i], newEntry);
                                array[i] = newEntry;
                                return true;
                            }
                        }
                    }
                    return false;
                },

                Contains: function(key) {
                    var compareKey = this.compareSelector(key);
                    var hash = ComputeHashCode(compareKey);
                    if (!HasOwnProperty(this.buckets, hash)) return false;

                    var array = this.buckets[hash];
                    for (var i = 0; i < array.length; i++) {
                        if (this.compareSelector(array[i].Key) === compareKey) return true;
                    }
                    return false;
                },

                Clear: function() {
                    this.count = 0;
                    this.buckets = {};
                    this.entryList = new EntryList();
                },

                Remove: function(key) {
                    var compareKey = this.compareSelector(key);
                    var hash = ComputeHashCode(compareKey);
                    if (!HasOwnProperty(this.buckets, hash)) return;

                    var array = this.buckets[hash];
                    for (var i = 0; i < array.length; i++) {
                        if (this.compareSelector(array[i].Key) === compareKey) {
                            this.entryList.Remove(array[i]);
                            array.splice(i, 1);
                            if (array.length == 0) delete this.buckets[hash];
                            this.count--;
                            return;
                        }
                    }
                },

                Count: function() {
                    return this.count;
                },

                ToEnumerable: function() {
                    var self = this;
                    return new Enumerable(function() {
                        var currentEntry;

                        return new IEnumerator(
                            function() {
                                currentEntry = self.entryList.First
                            },
                            function() {
                                if (currentEntry != null) {
                                    var result = {
                                        Key: currentEntry.Key,
                                        Value: currentEntry.Value
                                    };
                                    currentEntry = currentEntry.Next;
                                    return this.Yield(result);
                                }
                                return false;
                            },
                            Functions.Blank);
                    });
                }
            }

            return Dictionary;
        })();

        // dictionary = Dictionary<TKey, TValue[]>
        var Lookup = function(dictionary) {
            this.Count = function() {
                return dictionary.Count();
            }

            this.Get = function(key) {
                return Enumerable.From(dictionary.Get(key));
            }

            this.Contains = function(key) {
                return dictionary.Contains(key);
            }

            this.ToEnumerable = function() {
                return dictionary.ToEnumerable().Select(function(kvp) {
                    return new Grouping(kvp.Key, kvp.Value);
                });
            }
        }

        var Grouping = function(key, elements) {
            this.Key = function() {
                return key;
            }

            ArrayEnumerable.call(this, elements);
        }
        Grouping.prototype = new ArrayEnumerable();

        // out to global
        return Enumerable;
    })()
    /*!
     * Bootstrap v3.3.7 (http://getbootstrap.com)
     * Copyright 2011-2017 Twitter, Inc.
     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
     */

/*!
 * Generated using the Bootstrap Customizer (http://v3.bootcss.com/customize/?id=17a96db0bb25a116e3ba6cddb4c969ec)
 * Config saved to config.json and https://gist.github.com/17a96db0bb25a116e3ba6cddb4c969ec
 */
if ("undefined" == typeof jQuery) throw new Error("Bootstrap's JavaScript requires jQuery"); + function(t) {
    "use strict";
    var e = t.fn.jquery.split(" ")[0].split(".");
    if (e[0] < 2 && e[1] < 9 || 1 == e[0] && 9 == e[1] && e[2] < 1 || e[0] > 3) throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4")
}(jQuery), + function(t) {
    "use strict";

    function e(e) {
        return this.each(function() {
            var i = t(this),
                n = i.data("bs.alert");
            n || i.data("bs.alert", n = new o(this)), "string" == typeof e && n[e].call(i)
        })
    }
    var i = '[data-dismiss="alert"]',
        o = function(e) {
            t(e).on("click", i, this.close)
        };
    o.VERSION = "3.3.7", o.TRANSITION_DURATION = 150, o.prototype.close = function(e) {
        function i() {
            a.detach().trigger("closed.bs.alert").remove()
        }
        var n = t(this),
            s = n.attr("data-target");
        s || (s = n.attr("href"), s = s && s.replace(/.*(?=#[^\s]*$)/, ""));
        var a = t("#" === s ? [] : s);
        e && e.preventDefault(), a.length || (a = n.closest(".alert")), a.trigger(e = t.Event("close.bs.alert")), e.isDefaultPrevented() || (a.removeClass("in"), t.support.transition && a.hasClass("fade") ? a.one("bsTransitionEnd", i).emulateTransitionEnd(o.TRANSITION_DURATION) : i())
    };
    var n = t.fn.alert;
    t.fn.alert = e, t.fn.alert.Constructor = o, t.fn.alert.noConflict = function() {
        return t.fn.alert = n, this
    }, t(document).on("click.bs.alert.data-api", i, o.prototype.close)
}(jQuery), + function(t) {
    "use strict";

    function e(e) {
        return this.each(function() {
            var o = t(this),
                n = o.data("bs.button"),
                s = "object" == typeof e && e;
            n || o.data("bs.button", n = new i(this, s)), "toggle" == e ? n.toggle() : e && n.setState(e)
        })
    }
    var i = function(e, o) {
        this.$element = t(e), this.options = t.extend({}, i.DEFAULTS, o), this.isLoading = !1
    };
    i.VERSION = "3.3.7", i.DEFAULTS = {
        loadingText: "loading..."
    }, i.prototype.setState = function(e) {
        var i = "disabled",
            o = this.$element,
            n = o.is("input") ? "val" : "html",
            s = o.data();
        e += "Text", null == s.resetText && o.data("resetText", o[n]()), setTimeout(t.proxy(function() {
            o[n](null == s[e] ? this.options[e] : s[e]), "loadingText" == e ? (this.isLoading = !0, o.addClass(i).attr(i, i).prop(i, !0)) : this.isLoading && (this.isLoading = !1, o.removeClass(i).removeAttr(i).prop(i, !1))
        }, this), 0)
    }, i.prototype.toggle = function() {
        var t = !0,
            e = this.$element.closest('[data-toggle="buttons"]');
        if (e.length) {
            var i = this.$element.find("input");
            "radio" == i.prop("type") ? (i.prop("checked") && (t = !1), e.find(".active").removeClass("active"), this.$element.addClass("active")) : "checkbox" == i.prop("type") && (i.prop("checked") !== this.$element.hasClass("active") && (t = !1), this.$element.toggleClass("active")), i.prop("checked", this.$element.hasClass("active")), t && i.trigger("change")
        } else this.$element.attr("aria-pressed", !this.$element.hasClass("active")), this.$element.toggleClass("active")
    };
    var o = t.fn.button;
    t.fn.button = e, t.fn.button.Constructor = i, t.fn.button.noConflict = function() {
        return t.fn.button = o, this
    }, t(document).on("click.bs.button.data-api", '[data-toggle^="button"]', function(i) {
        var o = t(i.target).closest(".btn");
        e.call(o, "toggle"), t(i.target).is('input[type="radio"], input[type="checkbox"]') || (i.preventDefault(), o.is("input,button") ? o.trigger("focus") : o.find("input:visible,button:visible").first().trigger("focus"))
    }).on("focus.bs.button.data-api blur.bs.button.data-api", '[data-toggle^="button"]', function(e) {
        t(e.target).closest(".btn").toggleClass("focus", /^focus(in)?$/.test(e.type))
    })
}(jQuery), + function(t) {
    "use strict";

    function e(e) {
        return this.each(function() {
            var o = t(this),
                n = o.data("bs.carousel"),
                s = t.extend({}, i.DEFAULTS, o.data(), "object" == typeof e && e),
                a = "string" == typeof e ? e : s.slide;
            n || o.data("bs.carousel", n = new i(this, s)), "number" == typeof e ? n.to(e) : a ? n[a]() : s.interval && n.pause().cycle()
        })
    }
    var i = function(e, i) {
        this.$element = t(e), this.$indicators = this.$element.find(".carousel-indicators"), this.options = i, this.paused = null, this.sliding = null, this.interval = null, this.$active = null, this.$items = null, this.options.keyboard && this.$element.on("keydown.bs.carousel", t.proxy(this.keydown, this)), "hover" == this.options.pause && !("ontouchstart" in document.documentElement) && this.$element.on("mouseenter.bs.carousel", t.proxy(this.pause, this)).on("mouseleave.bs.carousel", t.proxy(this.cycle, this))
    };
    i.VERSION = "3.3.7", i.TRANSITION_DURATION = 600, i.DEFAULTS = {
        interval: 5e3,
        pause: "hover",
        wrap: !0,
        keyboard: !0
    }, i.prototype.keydown = function(t) {
        if (!/input|textarea/i.test(t.target.tagName)) {
            switch (t.which) {
                case 37:
                    this.prev();
                    break;
                case 39:
                    this.next();
                    break;
                default:
                    return
            }
            t.preventDefault()
        }
    }, i.prototype.cycle = function(e) {
        return e || (this.paused = !1), this.interval && clearInterval(this.interval), this.options.interval && !this.paused && (this.interval = setInterval(t.proxy(this.next, this), this.options.interval)), this
    }, i.prototype.getItemIndex = function(t) {
        return this.$items = t.parent().children(".item"), this.$items.index(t || this.$active)
    }, i.prototype.getItemForDirection = function(t, e) {
        var i = this.getItemIndex(e),
            o = "prev" == t && 0 === i || "next" == t && i == this.$items.length - 1;
        if (o && !this.options.wrap) return e;
        var n = "prev" == t ? -1 : 1,
            s = (i + n) % this.$items.length;
        return this.$items.eq(s)
    }, i.prototype.to = function(t) {
        var e = this,
            i = this.getItemIndex(this.$active = this.$element.find(".item.active"));
        return t > this.$items.length - 1 || 0 > t ? void 0 : this.sliding ? this.$element.one("slid.bs.carousel", function() {
            e.to(t)
        }) : i == t ? this.pause().cycle() : this.slide(t > i ? "next" : "prev", this.$items.eq(t))
    }, i.prototype.pause = function(e) {
        return e || (this.paused = !0), this.$element.find(".next, .prev").length && t.support.transition && (this.$element.trigger(t.support.transition.end), this.cycle(!0)), this.interval = clearInterval(this.interval), this
    }, i.prototype.next = function() {
        return this.sliding ? void 0 : this.slide("next")
    }, i.prototype.prev = function() {
        return this.sliding ? void 0 : this.slide("prev")
    }, i.prototype.slide = function(e, o) {
        var n = this.$element.find(".item.active"),
            s = o || this.getItemForDirection(e, n),
            a = this.interval,
            r = "next" == e ? "left" : "right",
            l = this;
        if (s.hasClass("active")) return this.sliding = !1;
        var h = s[0],
            d = t.Event("slide.bs.carousel", {
                relatedTarget: h,
                direction: r
            });
        if (this.$element.trigger(d), !d.isDefaultPrevented()) {
            if (this.sliding = !0, a && this.pause(), this.$indicators.length) {
                this.$indicators.find(".active").removeClass("active");
                var p = t(this.$indicators.children()[this.getItemIndex(s)]);
                p && p.addClass("active")
            }
            var c = t.Event("slid.bs.carousel", {
                relatedTarget: h,
                direction: r
            });
            return t.support.transition && this.$element.hasClass("slide") ? (s.addClass(e), s[0].offsetWidth, n.addClass(r), s.addClass(r), n.one("bsTransitionEnd", function() {
                s.removeClass([e, r].join(" ")).addClass("active"), n.removeClass(["active", r].join(" ")), l.sliding = !1, setTimeout(function() {
                    l.$element.trigger(c)
                }, 0)
            }).emulateTransitionEnd(i.TRANSITION_DURATION)) : (n.removeClass("active"), s.addClass("active"), this.sliding = !1, this.$element.trigger(c)), a && this.cycle(), this
        }
    };
    var o = t.fn.carousel;
    t.fn.carousel = e, t.fn.carousel.Constructor = i, t.fn.carousel.noConflict = function() {
        return t.fn.carousel = o, this
    };
    var n = function(i) {
        var o, n = t(this),
            s = t(n.attr("data-target") || (o = n.attr("href")) && o.replace(/.*(?=#[^\s]+$)/, ""));
        if (s.hasClass("carousel")) {
            var a = t.extend({}, s.data(), n.data()),
                r = n.attr("data-slide-to");
            r && (a.interval = !1), e.call(s, a), r && s.data("bs.carousel").to(r), i.preventDefault()
        }
    };
    t(document).on("click.bs.carousel.data-api", "[data-slide]", n).on("click.bs.carousel.data-api", "[data-slide-to]", n), t(window).on("load", function() {
        t('[data-ride="carousel"]').each(function() {
            var i = t(this);
            e.call(i, i.data())
        })
    })
}(jQuery), + function(t) {
    "use strict";

    function e(e) {
        var i = e.attr("data-target");
        i || (i = e.attr("href"), i = i && /#[A-Za-z]/.test(i) && i.replace(/.*(?=#[^\s]*$)/, ""));
        var o = i && t(i);
        return o && o.length ? o : e.parent()
    }

    function i(i) {
        i && 3 === i.which || (t(n).remove(), t(s).each(function() {
            var o = t(this),
                n = e(o),
                s = {
                    relatedTarget: this
                };
            n.hasClass("open") && (i && "click" == i.type && /input|textarea/i.test(i.target.tagName) && t.contains(n[0], i.target) || (n.trigger(i = t.Event("hide.bs.dropdown", s)), i.isDefaultPrevented() || (o.attr("aria-expanded", "false"), n.removeClass("open").trigger(t.Event("hidden.bs.dropdown", s)))))
        }))
    }

    function o(e) {
        return this.each(function() {
            var i = t(this),
                o = i.data("bs.dropdown");
            o || i.data("bs.dropdown", o = new a(this)), "string" == typeof e && o[e].call(i)
        })
    }
    var n = ".dropdown-backdrop",
        s = '[data-toggle="dropdown"]',
        a = function(e) {
            t(e).on("click.bs.dropdown", this.toggle)
        };
    a.VERSION = "3.3.7", a.prototype.toggle = function(o) {
        var n = t(this);
        if (!n.is(".disabled, :disabled")) {
            var s = e(n),
                a = s.hasClass("open");
            if (i(), !a) {
                "ontouchstart" in document.documentElement && !s.closest(".navbar-nav").length && t(document.createElement("div")).addClass("dropdown-backdrop").insertAfter(t(this)).on("click", i);
                var r = {
                    relatedTarget: this
                };
                if (s.trigger(o = t.Event("show.bs.dropdown", r)), o.isDefaultPrevented()) return;
                n.trigger("focus").attr("aria-expanded", "true"), s.toggleClass("open").trigger(t.Event("shown.bs.dropdown", r))
            }
            return !1
        }
    }, a.prototype.keydown = function(i) {
        if (/(38|40|27|32)/.test(i.which) && !/input|textarea/i.test(i.target.tagName)) {
            var o = t(this);
            if (i.preventDefault(), i.stopPropagation(), !o.is(".disabled, :disabled")) {
                var n = e(o),
                    a = n.hasClass("open");
                if (!a && 27 != i.which || a && 27 == i.which) return 27 == i.which && n.find(s).trigger("focus"), o.trigger("click");
                var r = " li:not(.disabled):visible a",
                    l = n.find(".dropdown-menu" + r);
                if (l.length) {
                    var h = l.index(i.target);
                    38 == i.which && h > 0 && h--, 40 == i.which && h < l.length - 1 && h++, ~h || (h = 0), l.eq(h).trigger("focus")
                }
            }
        }
    };
    var r = t.fn.dropdown;
    t.fn.dropdown = o, t.fn.dropdown.Constructor = a, t.fn.dropdown.noConflict = function() {
        return t.fn.dropdown = r, this
    }, t(document).on("click.bs.dropdown.data-api", i).on("click.bs.dropdown.data-api", ".dropdown form", function(t) {
        t.stopPropagation()
    }).on("click.bs.dropdown.data-api", s, a.prototype.toggle).on("keydown.bs.dropdown.data-api", s, a.prototype.keydown).on("keydown.bs.dropdown.data-api", ".dropdown-menu", a.prototype.keydown)
}(jQuery), + function(t) {
    "use strict";

    function e(e, o) {
        return this.each(function() {
            var n = t(this),
                s = n.data("bs.modal"),
                a = t.extend({}, i.DEFAULTS, n.data(), "object" == typeof e && e);
            s || n.data("bs.modal", s = new i(this, a)), "string" == typeof e ? s[e](o) : a.show && s.show(o)
        })
    }
    var i = function(e, i) {
        this.options = i, this.$body = t(document.body), this.$element = t(e), this.$dialog = this.$element.find(".modal-dialog"), this.$backdrop = null, this.isShown = null, this.originalBodyPad = null, this.scrollbarWidth = 0, this.ignoreBackdropClick = !1, this.options.remote && this.$element.find(".modal-content").load(this.options.remote, t.proxy(function() {
            this.$element.trigger("loaded.bs.modal")
        }, this))
    };
    i.VERSION = "3.3.7", i.TRANSITION_DURATION = 300, i.BACKDROP_TRANSITION_DURATION = 150, i.DEFAULTS = {
        backdrop: !0,
        keyboard: !0,
        show: !0
    }, i.prototype.toggle = function(t) {
        return this.isShown ? this.hide() : this.show(t)
    }, i.prototype.show = function(e) {
        var o = this,
            n = t.Event("show.bs.modal", {
                relatedTarget: e
            });
        this.$element.trigger(n), this.isShown || n.isDefaultPrevented() || (this.isShown = !0, this.checkScrollbar(), this.setScrollbar(), this.$body.addClass("modal-open"), this.escape(), this.resize(), this.$element.on("click.dismiss.bs.modal", '[data-dismiss="modal"]', t.proxy(this.hide, this)), this.$dialog.on("mousedown.dismiss.bs.modal", function() {
            o.$element.one("mouseup.dismiss.bs.modal", function(e) {
                t(e.target).is(o.$element) && (o.ignoreBackdropClick = !0)
            })
        }), this.backdrop(function() {
            var n = t.support.transition && o.$element.hasClass("fade");
            o.$element.parent().length || o.$element.appendTo(o.$body), o.$element.show().scrollTop(0), o.adjustDialog(), n && o.$element[0].offsetWidth, o.$element.addClass("in"), o.enforceFocus();
            var s = t.Event("shown.bs.modal", {
                relatedTarget: e
            });
            n ? o.$dialog.one("bsTransitionEnd", function() {
                o.$element.trigger("focus").trigger(s)
            }).emulateTransitionEnd(i.TRANSITION_DURATION) : o.$element.trigger("focus").trigger(s)
        }))
    }, i.prototype.hide = function(e) {
        e && e.preventDefault(), e = t.Event("hide.bs.modal"), this.$element.trigger(e), this.isShown && !e.isDefaultPrevented() && (this.isShown = !1, this.escape(), this.resize(), t(document).off("focusin.bs.modal"), this.$element.removeClass("in").off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"), this.$dialog.off("mousedown.dismiss.bs.modal"), t.support.transition && this.$element.hasClass("fade") ? this.$element.one("bsTransitionEnd", t.proxy(this.hideModal, this)).emulateTransitionEnd(i.TRANSITION_DURATION) : this.hideModal())
    }, i.prototype.enforceFocus = function() {
        t(document).off("focusin.bs.modal").on("focusin.bs.modal", t.proxy(function(t) {
            document === t.target || this.$element[0] === t.target || this.$element.has(t.target).length || this.$element.trigger("focus")
        }, this))
    }, i.prototype.escape = function() {
        this.isShown && this.options.keyboard ? this.$element.on("keydown.dismiss.bs.modal", t.proxy(function(t) {
            27 == t.which && this.hide()
        }, this)) : this.isShown || this.$element.off("keydown.dismiss.bs.modal")
    }, i.prototype.resize = function() {
        this.isShown ? t(window).on("resize.bs.modal", t.proxy(this.handleUpdate, this)) : t(window).off("resize.bs.modal")
    }, i.prototype.hideModal = function() {
        var t = this;
        this.$element.hide(), this.backdrop(function() {
            t.$body.removeClass("modal-open"), t.resetAdjustments(), t.resetScrollbar(), t.$element.trigger("hidden.bs.modal")
        })
    }, i.prototype.removeBackdrop = function() {
        this.$backdrop && this.$backdrop.remove(), this.$backdrop = null
    }, i.prototype.backdrop = function(e) {
        var o = this,
            n = this.$element.hasClass("fade") ? "fade" : "";
        if (this.isShown && this.options.backdrop) {
            var s = t.support.transition && n;
            if (this.$backdrop = t(document.createElement("div")).addClass("modal-backdrop " + n).appendTo(this.$body), this.$element.on("click.dismiss.bs.modal", t.proxy(function(t) {
                    return this.ignoreBackdropClick ? void(this.ignoreBackdropClick = !1) : void(t.target === t.currentTarget && ("static" == this.options.backdrop ? this.$element[0].focus() : this.hide()))
                }, this)), s && this.$backdrop[0].offsetWidth, this.$backdrop.addClass("in"), !e) return;
            s ? this.$backdrop.one("bsTransitionEnd", e).emulateTransitionEnd(i.BACKDROP_TRANSITION_DURATION) : e()
        } else if (!this.isShown && this.$backdrop) {
            this.$backdrop.removeClass("in");
            var a = function() {
                o.removeBackdrop(), e && e()
            };
            t.support.transition && this.$element.hasClass("fade") ? this.$backdrop.one("bsTransitionEnd", a).emulateTransitionEnd(i.BACKDROP_TRANSITION_DURATION) : a()
        } else e && e()
    }, i.prototype.handleUpdate = function() {
        this.adjustDialog()
    }, i.prototype.adjustDialog = function() {
        var t = this.$element[0].scrollHeight > document.documentElement.clientHeight;
        this.$element.css({
            paddingLeft: !this.bodyIsOverflowing && t ? this.scrollbarWidth : "",
            paddingRight: this.bodyIsOverflowing && !t ? this.scrollbarWidth : ""
        })
    }, i.prototype.resetAdjustments = function() {
        this.$element.css({
            paddingLeft: "",
            paddingRight: ""
        })
    }, i.prototype.checkScrollbar = function() {
        var t = window.innerWidth;
        if (!t) {
            var e = document.documentElement.getBoundingClientRect();
            t = e.right - Math.abs(e.left)
        }
        this.bodyIsOverflowing = document.body.clientWidth < t, this.scrollbarWidth = this.measureScrollbar()
    }, i.prototype.setScrollbar = function() {
        var t = parseInt(this.$body.css("padding-right") || 0, 10);
        this.originalBodyPad = document.body.style.paddingRight || "", this.bodyIsOverflowing && this.$body.css("padding-right", t + this.scrollbarWidth)
    }, i.prototype.resetScrollbar = function() {
        this.$body.css("padding-right", this.originalBodyPad)
    }, i.prototype.measureScrollbar = function() {
        var t = document.createElement("div");
        t.className = "modal-scrollbar-measure", this.$body.append(t);
        var e = t.offsetWidth - t.clientWidth;
        return this.$body[0].removeChild(t), e
    };
    var o = t.fn.modal;
    t.fn.modal = e, t.fn.modal.Constructor = i, t.fn.modal.noConflict = function() {
        return t.fn.modal = o, this
    }, t(document).on("click.bs.modal.data-api", '[data-toggle="modal"]', function(i) {
        var o = t(this),
            n = o.attr("href"),
            s = t(o.attr("data-target") || n && n.replace(/.*(?=#[^\s]+$)/, "")),
            a = s.data("bs.modal") ? "toggle" : t.extend({
                remote: !/#/.test(n) && n
            }, s.data(), o.data());
        o.is("a") && i.preventDefault(), s.one("show.bs.modal", function(t) {
            t.isDefaultPrevented() || s.one("hidden.bs.modal", function() {
                o.is(":visible") && o.trigger("focus")
            })
        }), e.call(s, a, this)
    })
}(jQuery), + function(t) {
    "use strict";

    function e(e) {
        return this.each(function() {
            var o = t(this),
                n = o.data("bs.tooltip"),
                s = "object" == typeof e && e;
            !n && /destroy|hide/.test(e) || (n || o.data("bs.tooltip", n = new i(this, s)), "string" == typeof e && n[e]())
        })
    }
    var i = function(t, e) {
        this.type = null, this.options = null, this.enabled = null, this.timeout = null, this.hoverState = null, this.$element = null, this.inState = null, this.init("tooltip", t, e)
    };
    i.VERSION = "3.3.7", i.TRANSITION_DURATION = 150, i.DEFAULTS = {
        animation: !0,
        placement: "top",
        selector: !1,
        template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
        trigger: "hover focus",
        title: "",
        delay: 0,
        html: !1,
        container: !1,
        viewport: {
            selector: "body",
            padding: 0
        }
    }, i.prototype.init = function(e, i, o) {
        if (this.enabled = !0, this.type = e, this.$element = t(i), this.options = this.getOptions(o), this.$viewport = this.options.viewport && t(t.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : this.options.viewport.selector || this.options.viewport), this.inState = {
                click: !1,
                hover: !1,
                focus: !1
            }, this.$element[0] instanceof document.constructor && !this.options.selector) throw new Error("`selector` option must be specified when initializing " + this.type + " on the window.document object!");
        for (var n = this.options.trigger.split(" "), s = n.length; s--;) {
            var a = n[s];
            if ("click" == a) this.$element.on("click." + this.type, this.options.selector, t.proxy(this.toggle, this));
            else if ("manual" != a) {
                var r = "hover" == a ? "mouseenter" : "focusin",
                    l = "hover" == a ? "mouseleave" : "focusout";
                this.$element.on(r + "." + this.type, this.options.selector, t.proxy(this.enter, this)), this.$element.on(l + "." + this.type, this.options.selector, t.proxy(this.leave, this))
            }
        }
        this.options.selector ? this._options = t.extend({}, this.options, {
            trigger: "manual",
            selector: ""
        }) : this.fixTitle()
    }, i.prototype.getDefaults = function() {
        return i.DEFAULTS
    }, i.prototype.getOptions = function(e) {
        return e = t.extend({}, this.getDefaults(), this.$element.data(), e), e.delay && "number" == typeof e.delay && (e.delay = {
            show: e.delay,
            hide: e.delay
        }), e
    }, i.prototype.getDelegateOptions = function() {
        var e = {},
            i = this.getDefaults();
        return this._options && t.each(this._options, function(t, o) {
            i[t] != o && (e[t] = o)
        }), e
    }, i.prototype.enter = function(e) {
        var i = e instanceof this.constructor ? e : t(e.currentTarget).data("bs." + this.type);
        return i || (i = new this.constructor(e.currentTarget, this.getDelegateOptions()), t(e.currentTarget).data("bs." + this.type, i)), e instanceof t.Event && (i.inState["focusin" == e.type ? "focus" : "hover"] = !0), i.tip().hasClass("in") || "in" == i.hoverState ? void(i.hoverState = "in") : (clearTimeout(i.timeout), i.hoverState = "in", i.options.delay && i.options.delay.show ? void(i.timeout = setTimeout(function() {
            "in" == i.hoverState && i.show()
        }, i.options.delay.show)) : i.show())
    }, i.prototype.isInStateTrue = function() {
        for (var t in this.inState)
            if (this.inState[t]) return !0;
        return !1
    }, i.prototype.leave = function(e) {
        var i = e instanceof this.constructor ? e : t(e.currentTarget).data("bs." + this.type);
        return i || (i = new this.constructor(e.currentTarget, this.getDelegateOptions()), t(e.currentTarget).data("bs." + this.type, i)), e instanceof t.Event && (i.inState["focusout" == e.type ? "focus" : "hover"] = !1), i.isInStateTrue() ? void 0 : (clearTimeout(i.timeout), i.hoverState = "out", i.options.delay && i.options.delay.hide ? void(i.timeout = setTimeout(function() {
            "out" == i.hoverState && i.hide()
        }, i.options.delay.hide)) : i.hide())
    }, i.prototype.show = function() {
        var e = t.Event("show.bs." + this.type);
        if (this.hasContent() && this.enabled) {
            this.$element.trigger(e);
            var o = t.contains(this.$element[0].ownerDocument.documentElement, this.$element[0]);
            if (e.isDefaultPrevented() || !o) return;
            var n = this,
                s = this.tip(),
                a = this.getUID(this.type);
            this.setContent(), s.attr("id", a), this.$element.attr("aria-describedby", a), this.options.animation && s.addClass("fade");
            var r = "function" == typeof this.options.placement ? this.options.placement.call(this, s[0], this.$element[0]) : this.options.placement,
                l = /\s?auto?\s?/i,
                h = l.test(r);
            h && (r = r.replace(l, "") || "top"), s.detach().css({
                top: 0,
                left: 0,
                display: "block"
            }).addClass(r).data("bs." + this.type, this), this.options.container ? s.appendTo(this.options.container) : s.insertAfter(this.$element), this.$element.trigger("inserted.bs." + this.type);
            var d = this.getPosition(),
                p = s[0].offsetWidth,
                c = s[0].offsetHeight;
            if (h) {
                var f = r,
                    u = this.getPosition(this.$viewport);
                r = "bottom" == r && d.bottom + c > u.bottom ? "top" : "top" == r && d.top - c < u.top ? "bottom" : "right" == r && d.right + p > u.width ? "left" : "left" == r && d.left - p < u.left ? "right" : r, s.removeClass(f).addClass(r)
            }
            var g = this.getCalculatedOffset(r, d, p, c);
            this.applyPlacement(g, r);
            var v = function() {
                var t = n.hoverState;
                n.$element.trigger("shown.bs." + n.type), n.hoverState = null, "out" == t && n.leave(n)
            };
            t.support.transition && this.$tip.hasClass("fade") ? s.one("bsTransitionEnd", v).emulateTransitionEnd(i.TRANSITION_DURATION) : v()
        }
    }, i.prototype.applyPlacement = function(e, i) {
        var o = this.tip(),
            n = o[0].offsetWidth,
            s = o[0].offsetHeight,
            a = parseInt(o.css("margin-top"), 10),
            r = parseInt(o.css("margin-left"), 10);
        isNaN(a) && (a = 0), isNaN(r) && (r = 0), e.top += a, e.left += r, t.offset.setOffset(o[0], t.extend({
            using: function(t) {
                o.css({
                    top: Math.round(t.top),
                    left: Math.round(t.left)
                })
            }
        }, e), 0), o.addClass("in");
        var l = o[0].offsetWidth,
            h = o[0].offsetHeight;
        "top" == i && h != s && (e.top = e.top + s - h);
        var d = this.getViewportAdjustedDelta(i, e, l, h);
        d.left ? e.left += d.left : e.top += d.top;
        var p = /top|bottom/.test(i),
            c = p ? 2 * d.left - n + l : 2 * d.top - s + h,
            f = p ? "offsetWidth" : "offsetHeight";
        o.offset(e), this.replaceArrow(c, o[0][f], p)
    }, i.prototype.replaceArrow = function(t, e, i) {
        this.arrow().css(i ? "left" : "top", 50 * (1 - t / e) + "%").css(i ? "top" : "left", "")
    }, i.prototype.setContent = function() {
        var t = this.tip(),
            e = this.getTitle();
        t.find(".tooltip-inner")[this.options.html ? "html" : "text"](e), t.removeClass("fade in top bottom left right")
    }, i.prototype.hide = function(e) {
        function o() {
            "in" != n.hoverState && s.detach(), n.$element && n.$element.removeAttr("aria-describedby").trigger("hidden.bs." + n.type), e && e()
        }
        var n = this,
            s = t(this.$tip),
            a = t.Event("hide.bs." + this.type);
        return this.$element.trigger(a), a.isDefaultPrevented() ? void 0 : (s.removeClass("in"), t.support.transition && s.hasClass("fade") ? s.one("bsTransitionEnd", o).emulateTransitionEnd(i.TRANSITION_DURATION) : o(), this.hoverState = null, this)
    }, i.prototype.fixTitle = function() {
        var t = this.$element;
        (t.attr("title") || "string" != typeof t.attr("data-original-title")) && t.attr("data-original-title", t.attr("title") || "").attr("title", "")
    }, i.prototype.hasContent = function() {
        return this.getTitle()
    }, i.prototype.getPosition = function(e) {
        e = e || this.$element;
        var i = e[0],
            o = "BODY" == i.tagName,
            n = i.getBoundingClientRect();
        null == n.width && (n = t.extend({}, n, {
            width: n.right - n.left,
            height: n.bottom - n.top
        }));
        var s = window.SVGElement && i instanceof window.SVGElement,
            a = o ? {
                top: 0,
                left: 0
            } : s ? null : e.offset(),
            r = {
                scroll: o ? document.documentElement.scrollTop || document.body.scrollTop : e.scrollTop()
            },
            l = o ? {
                width: t(window).width(),
                height: t(window).height()
            } : null;
        return t.extend({}, n, r, l, a)
    }, i.prototype.getCalculatedOffset = function(t, e, i, o) {
        return "bottom" == t ? {
            top: e.top + e.height,
            left: e.left + e.width / 2 - i / 2
        } : "top" == t ? {
            top: e.top - o,
            left: e.left + e.width / 2 - i / 2
        } : "left" == t ? {
            top: e.top + e.height / 2 - o / 2,
            left: e.left - i
        } : {
            top: e.top + e.height / 2 - o / 2,
            left: e.left + e.width
        }
    }, i.prototype.getViewportAdjustedDelta = function(t, e, i, o) {
        var n = {
            top: 0,
            left: 0
        };
        if (!this.$viewport) return n;
        var s = this.options.viewport && this.options.viewport.padding || 0,
            a = this.getPosition(this.$viewport);
        if (/right|left/.test(t)) {
            var r = e.top - s - a.scroll,
                l = e.top + s - a.scroll + o;
            r < a.top ? n.top = a.top - r : l > a.top + a.height && (n.top = a.top + a.height - l)
        } else {
            var h = e.left - s,
                d = e.left + s + i;
            h < a.left ? n.left = a.left - h : d > a.right && (n.left = a.left + a.width - d)
        }
        return n
    }, i.prototype.getTitle = function() {
        var t, e = this.$element,
            i = this.options;
        return t = e.attr("data-original-title") || ("function" == typeof i.title ? i.title.call(e[0]) : i.title)
    }, i.prototype.getUID = function(t) {
        do t += ~~(1e6 * Math.random()); while (document.getElementById(t));
        return t
    }, i.prototype.tip = function() {
        if (!this.$tip && (this.$tip = t(this.options.template), 1 != this.$tip.length)) throw new Error(this.type + " `template` option must consist of exactly 1 top-level element!");
        return this.$tip
    }, i.prototype.arrow = function() {
        return this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow")
    }, i.prototype.enable = function() {
        this.enabled = !0
    }, i.prototype.disable = function() {
        this.enabled = !1
    }, i.prototype.toggleEnabled = function() {
        this.enabled = !this.enabled
    }, i.prototype.toggle = function(e) {
        var i = this;
        e && (i = t(e.currentTarget).data("bs." + this.type), i || (i = new this.constructor(e.currentTarget, this.getDelegateOptions()), t(e.currentTarget).data("bs." + this.type, i))), e ? (i.inState.click = !i.inState.click, i.isInStateTrue() ? i.enter(i) : i.leave(i)) : i.tip().hasClass("in") ? i.leave(i) : i.enter(i)
    }, i.prototype.destroy = function() {
        var t = this;
        clearTimeout(this.timeout), this.hide(function() {
            t.$element.off("." + t.type).removeData("bs." + t.type), t.$tip && t.$tip.detach(), t.$tip = null, t.$arrow = null, t.$viewport = null, t.$element = null
        })
    };
    var o = t.fn.tooltip;
    t.fn.tooltip = e, t.fn.tooltip.Constructor = i, t.fn.tooltip.noConflict = function() {
        return t.fn.tooltip = o, this
    }
}(jQuery), + function(t) {
    "use strict";

    function e(e) {
        return this.each(function() {
            var o = t(this),
                n = o.data("bs.popover"),
                s = "object" == typeof e && e;
            !n && /destroy|hide/.test(e) || (n || o.data("bs.popover", n = new i(this, s)), "string" == typeof e && n[e]())
        })
    }
    var i = function(t, e) {
        this.init("popover", t, e)
    };
    if (!t.fn.tooltip) throw new Error("Popover requires tooltip.js");
    i.VERSION = "3.3.7", i.DEFAULTS = t.extend({}, t.fn.tooltip.Constructor.DEFAULTS, {
        placement: "right",
        trigger: "click",
        content: "",
        template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
    }), i.prototype = t.extend({}, t.fn.tooltip.Constructor.prototype), i.prototype.constructor = i, i.prototype.getDefaults = function() {
        return i.DEFAULTS
    }, i.prototype.setContent = function() {
        var t = this.tip(),
            e = this.getTitle(),
            i = this.getContent();
        t.find(".popover-title")[this.options.html ? "html" : "text"](e), t.find(".popover-content").children().detach().end()[this.options.html ? "string" == typeof i ? "html" : "append" : "text"](i), t.removeClass("fade top bottom left right in"), t.find(".popover-title").html() || t.find(".popover-title").hide()
    }, i.prototype.hasContent = function() {
        return this.getTitle() || this.getContent()
    }, i.prototype.getContent = function() {
        var t = this.$element,
            e = this.options;
        return t.attr("data-content") || ("function" == typeof e.content ? e.content.call(t[0]) : e.content)
    }, i.prototype.arrow = function() {
        return this.$arrow = this.$arrow || this.tip().find(".arrow")
    };
    var o = t.fn.popover;
    t.fn.popover = e, t.fn.popover.Constructor = i, t.fn.popover.noConflict = function() {
        return t.fn.popover = o, this
    }
}(jQuery), + function(t) {
    "use strict";

    function e(e) {
        return this.each(function() {
            var o = t(this),
                n = o.data("bs.tab");
            n || o.data("bs.tab", n = new i(this)), "string" == typeof e && n[e]()
        })
    }
    var i = function(e) {
        this.element = t(e)
    };
    i.VERSION = "3.3.7", i.TRANSITION_DURATION = 150, i.prototype.show = function() {
        var e = this.element,
            i = e.closest("ul:not(.dropdown-menu)"),
            o = e.data("target");
        if (o || (o = e.attr("href"), o = o && o.replace(/.*(?=#[^\s]*$)/, "")), !e.parent("li").hasClass("active")) {
            var n = i.find(".active:last a"),
                s = t.Event("hide.bs.tab", {
                    relatedTarget: e[0]
                }),
                a = t.Event("show.bs.tab", {
                    relatedTarget: n[0]
                });
            if (n.trigger(s), e.trigger(a), !a.isDefaultPrevented() && !s.isDefaultPrevented()) {
                var r = t(o);
                this.activate(e.closest("li"), i), this.activate(r, r.parent(), function() {
                    n.trigger({
                        type: "hidden.bs.tab",
                        relatedTarget: e[0]
                    }), e.trigger({
                        type: "shown.bs.tab",
                        relatedTarget: n[0]
                    })
                })
            }
        }
    }, i.prototype.activate = function(e, o, n) {
        function s() {
            a.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded", !1), e.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded", !0), r ? (e[0].offsetWidth, e.addClass("in")) : e.removeClass("fade"), e.parent(".dropdown-menu").length && e.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded", !0), n && n()
        }
        var a = o.find("> .active"),
            r = n && t.support.transition && (a.length && a.hasClass("fade") || !!o.find("> .fade").length);
        a.length && r ? a.one("bsTransitionEnd", s).emulateTransitionEnd(i.TRANSITION_DURATION) : s(), a.removeClass("in")
    };
    var o = t.fn.tab;
    t.fn.tab = e, t.fn.tab.Constructor = i, t.fn.tab.noConflict = function() {
        return t.fn.tab = o, this
    };
    var n = function(i) {
        i.preventDefault(), e.call(t(this), "show")
    };
    t(document).on("click.bs.tab.data-api", '[data-toggle="tab"]', n).on("click.bs.tab.data-api", '[data-toggle="pill"]', n)
}(jQuery), + function(t) {
    "use strict";

    function e(e) {
        return this.each(function() {
            var o = t(this),
                n = o.data("bs.affix"),
                s = "object" == typeof e && e;
            n || o.data("bs.affix", n = new i(this, s)), "string" == typeof e && n[e]()
        })
    }
    var i = function(e, o) {
        this.options = t.extend({}, i.DEFAULTS, o), this.$target = t(this.options.target).on("scroll.bs.affix.data-api", t.proxy(this.checkPosition, this)).on("click.bs.affix.data-api", t.proxy(this.checkPositionWithEventLoop, this)), this.$element = t(e), this.affixed = null, this.unpin = null, this.pinnedOffset = null, this.checkPosition()
    };
    i.VERSION = "3.3.7", i.RESET = "affix affix-top affix-bottom", i.DEFAULTS = {
        offset: 0,
        target: window
    }, i.prototype.getState = function(t, e, i, o) {
        var n = this.$target.scrollTop(),
            s = this.$element.offset(),
            a = this.$target.height();
        if (null != i && "top" == this.affixed) return i > n ? "top" : !1;
        if ("bottom" == this.affixed) return null != i ? n + this.unpin <= s.top ? !1 : "bottom" : t - o >= n + a ? !1 : "bottom";
        var r = null == this.affixed,
            l = r ? n : s.top,
            h = r ? a : e;
        return null != i && i >= n ? "top" : null != o && l + h >= t - o ? "bottom" : !1
    }, i.prototype.getPinnedOffset = function() {
        if (this.pinnedOffset) return this.pinnedOffset;
        this.$element.removeClass(i.RESET).addClass("affix");
        var t = this.$target.scrollTop(),
            e = this.$element.offset();
        return this.pinnedOffset = e.top - t
    }, i.prototype.checkPositionWithEventLoop = function() {
        setTimeout(t.proxy(this.checkPosition, this), 1)
    }, i.prototype.checkPosition = function() {
        if (this.$element.is(":visible")) {
            var e = this.$element.height(),
                o = this.options.offset,
                n = o.top,
                s = o.bottom,
                a = Math.max(t(document).height(), t(document.body).height());
            "object" != typeof o && (s = n = o), "function" == typeof n && (n = o.top(this.$element)), "function" == typeof s && (s = o.bottom(this.$element));
            var r = this.getState(a, e, n, s);
            if (this.affixed != r) {
                null != this.unpin && this.$element.css("top", "");
                var l = "affix" + (r ? "-" + r : ""),
                    h = t.Event(l + ".bs.affix");
                if (this.$element.trigger(h), h.isDefaultPrevented()) return;
                this.affixed = r, this.unpin = "bottom" == r ? this.getPinnedOffset() : null, this.$element.removeClass(i.RESET).addClass(l).trigger(l.replace("affix", "affixed") + ".bs.affix")
            }
            "bottom" == r && this.$element.offset({
                top: a - e - s
            })
        }
    };
    var o = t.fn.affix;
    t.fn.affix = e, t.fn.affix.Constructor = i, t.fn.affix.noConflict = function() {
        return t.fn.affix = o, this
    }, t(window).on("load", function() {
        t('[data-spy="affix"]').each(function() {
            var i = t(this),
                o = i.data();
            o.offset = o.offset || {}, null != o.offsetBottom && (o.offset.bottom = o.offsetBottom), null != o.offsetTop && (o.offset.top = o.offsetTop), e.call(i, o)
        })
    })
}(jQuery), + function(t) {
    "use strict";

    function e(e) {
        var i, o = e.attr("data-target") || (i = e.attr("href")) && i.replace(/.*(?=#[^\s]+$)/, "");
        return t(o)
    }

    function i(e) {
        return this.each(function() {
            var i = t(this),
                n = i.data("bs.collapse"),
                s = t.extend({}, o.DEFAULTS, i.data(), "object" == typeof e && e);
            !n && s.toggle && /show|hide/.test(e) && (s.toggle = !1), n || i.data("bs.collapse", n = new o(this, s)), "string" == typeof e && n[e]()
        })
    }
    var o = function(e, i) {
        this.$element = t(e), this.options = t.extend({}, o.DEFAULTS, i), this.$trigger = t('[data-toggle="collapse"][href="#' + e.id + '"],[data-toggle="collapse"][data-target="#' + e.id + '"]'), this.transitioning = null, this.options.parent ? this.$parent = this.getParent() : this.addAriaAndCollapsedClass(this.$element, this.$trigger), this.options.toggle && this.toggle()
    };
    o.VERSION = "3.3.7", o.TRANSITION_DURATION = 350, o.DEFAULTS = {
        toggle: !0
    }, o.prototype.dimension = function() {
        var t = this.$element.hasClass("width");
        return t ? "width" : "height"
    }, o.prototype.show = function() {
        if (!this.transitioning && !this.$element.hasClass("in")) {
            var e, n = this.$parent && this.$parent.children(".panel").children(".in, .collapsing");
            if (!(n && n.length && (e = n.data("bs.collapse"), e && e.transitioning))) {
                var s = t.Event("show.bs.collapse");
                if (this.$element.trigger(s), !s.isDefaultPrevented()) {
                    n && n.length && (i.call(n, "hide"), e || n.data("bs.collapse", null));
                    var a = this.dimension();
                    this.$element.removeClass("collapse").addClass("collapsing")[a](0).attr("aria-expanded", !0), this.$trigger.removeClass("collapsed").attr("aria-expanded", !0), this.transitioning = 1;
                    var r = function() {
                        this.$element.removeClass("collapsing").addClass("collapse in")[a](""), this.transitioning = 0,
                            this.$element.trigger("shown.bs.collapse")
                    };
                    if (!t.support.transition) return r.call(this);
                    var l = t.camelCase(["scroll", a].join("-"));
                    this.$element.one("bsTransitionEnd", t.proxy(r, this)).emulateTransitionEnd(o.TRANSITION_DURATION)[a](this.$element[0][l])
                }
            }
        }
    }, o.prototype.hide = function() {
        if (!this.transitioning && this.$element.hasClass("in")) {
            var e = t.Event("hide.bs.collapse");
            if (this.$element.trigger(e), !e.isDefaultPrevented()) {
                var i = this.dimension();
                this.$element[i](this.$element[i]())[0].offsetHeight, this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded", !1), this.$trigger.addClass("collapsed").attr("aria-expanded", !1), this.transitioning = 1;
                var n = function() {
                    this.transitioning = 0, this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")
                };
                return t.support.transition ? void this.$element[i](0).one("bsTransitionEnd", t.proxy(n, this)).emulateTransitionEnd(o.TRANSITION_DURATION) : n.call(this)
            }
        }
    }, o.prototype.toggle = function() {
        this[this.$element.hasClass("in") ? "hide" : "show"]()
    }, o.prototype.getParent = function() {
        return t(this.options.parent).find('[data-toggle="collapse"][data-parent="' + this.options.parent + '"]').each(t.proxy(function(i, o) {
            var n = t(o);
            this.addAriaAndCollapsedClass(e(n), n)
        }, this)).end()
    }, o.prototype.addAriaAndCollapsedClass = function(t, e) {
        var i = t.hasClass("in");
        t.attr("aria-expanded", i), e.toggleClass("collapsed", !i).attr("aria-expanded", i)
    };
    var n = t.fn.collapse;
    t.fn.collapse = i, t.fn.collapse.Constructor = o, t.fn.collapse.noConflict = function() {
        return t.fn.collapse = n, this
    }, t(document).on("click.bs.collapse.data-api", '[data-toggle="collapse"]', function(o) {
        var n = t(this);
        n.attr("data-target") || o.preventDefault();
        var s = e(n),
            a = s.data("bs.collapse"),
            r = a ? "toggle" : n.data();
        i.call(s, r)
    })
}(jQuery), + function(t) {
    "use strict";

    function e(i, o) {
        this.$body = t(document.body), this.$scrollElement = t(t(i).is(document.body) ? window : i), this.options = t.extend({}, e.DEFAULTS, o), this.selector = (this.options.target || "") + " .nav li > a", this.offsets = [], this.targets = [], this.activeTarget = null, this.scrollHeight = 0, this.$scrollElement.on("scroll.bs.scrollspy", t.proxy(this.process, this)), this.refresh(), this.process()
    }

    function i(i) {
        return this.each(function() {
            var o = t(this),
                n = o.data("bs.scrollspy"),
                s = "object" == typeof i && i;
            n || o.data("bs.scrollspy", n = new e(this, s)), "string" == typeof i && n[i]()
        })
    }
    e.VERSION = "3.3.7", e.DEFAULTS = {
        offset: 10
    }, e.prototype.getScrollHeight = function() {
        return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)
    }, e.prototype.refresh = function() {
        var e = this,
            i = "offset",
            o = 0;
        this.offsets = [], this.targets = [], this.scrollHeight = this.getScrollHeight(), t.isWindow(this.$scrollElement[0]) || (i = "position", o = this.$scrollElement.scrollTop()), this.$body.find(this.selector).map(function() {
            var e = t(this),
                n = e.data("target") || e.attr("href"),
                s = /^#./.test(n) && t(n);
            return s && s.length && s.is(":visible") && [
                [s[i]().top + o, n]
            ] || null
        }).sort(function(t, e) {
            return t[0] - e[0]
        }).each(function() {
            e.offsets.push(this[0]), e.targets.push(this[1])
        })
    }, e.prototype.process = function() {
        var t, e = this.$scrollElement.scrollTop() + this.options.offset,
            i = this.getScrollHeight(),
            o = this.options.offset + i - this.$scrollElement.height(),
            n = this.offsets,
            s = this.targets,
            a = this.activeTarget;
        if (this.scrollHeight != i && this.refresh(), e >= o) return a != (t = s[s.length - 1]) && this.activate(t);
        if (a && e < n[0]) return this.activeTarget = null, this.clear();
        for (t = n.length; t--;) a != s[t] && e >= n[t] && (void 0 === n[t + 1] || e < n[t + 1]) && this.activate(s[t])
    }, e.prototype.activate = function(e) {
        this.activeTarget = e, this.clear();
        var i = this.selector + '[data-target="' + e + '"],' + this.selector + '[href="' + e + '"]',
            o = t(i).parents("li").addClass("active");
        o.parent(".dropdown-menu").length && (o = o.closest("li.dropdown").addClass("active")), o.trigger("activate.bs.scrollspy")
    }, e.prototype.clear = function() {
        t(this.selector).parentsUntil(this.options.target, ".active").removeClass("active")
    };
    var o = t.fn.scrollspy;
    t.fn.scrollspy = i, t.fn.scrollspy.Constructor = e, t.fn.scrollspy.noConflict = function() {
        return t.fn.scrollspy = o, this
    }, t(window).on("load.bs.scrollspy.data-api", function() {
        t('[data-spy="scroll"]').each(function() {
            var e = t(this);
            i.call(e, e.data())
        })
    })
}(jQuery), + function(t) {
    "use strict";

    function e() {
        var t = document.createElement("bootstrap"),
            e = {
                WebkitTransition: "webkitTransitionEnd",
                MozTransition: "transitionend",
                OTransition: "oTransitionEnd otransitionend",
                transition: "transitionend"
            };
        for (var i in e)
            if (void 0 !== t.style[i]) return {
                end: e[i]
            };
        return !1
    }
    t.fn.emulateTransitionEnd = function(e) {
        var i = !1,
            o = this;
        t(this).one("bsTransitionEnd", function() {
            i = !0
        });
        var n = function() {
            i || t(o).trigger(t.support.transition.end)
        };
        return setTimeout(n, e), this
    }, t(function() {
        t.support.transition = e(), t.support.transition && (t.event.special.bsTransitionEnd = {
            bindType: t.support.transition.end,
            delegateType: t.support.transition.end,
            handle: function(e) {
                return t(e.target).is(this) ? e.handleObj.handler.apply(this, arguments) : void 0
            }
        })
    })
}(jQuery);

function Router(func) {
    this.cache = {};
    //将url/callback 以key/value形式储存在cache内
    this.on = function(key, value) {
        var cache = this.cache;
        cache[key] = value;
    };
    //匹配hash对应的回调函数,并触发
    this.trigger = function(hash) {
        var cache = this.cache;
        for (var r in cache) {
            var reg = this.initRegexps(r);
            if (reg.test(hash)) {
                var callback = cache[r] || function() {};
                var params = this.getParams(reg, hash);
                callback.apply(this, params);
                func(hash);
            }
        }

    };
    //初始化 添加监听浏览器hashchange 以及dom loaded函数
    this.init = function() {
        var t = this;
        window.addEventListener('hashchange', function() {
            var hash = location.hash.slice(1);
            t.trigger(hash);
        });
        window.addEventListener('load', function() {
            var hash = location.hash.slice(1);
            t.trigger(hash);
        })
    };
    /**
     *将cache内的key 做正则处理,并返回
     * 第一个正则 匹配诸如/,.+-?$#{}[]] 关键字  并在关键字前面加转译字符\
     * 第二个正则 匹配() 标示()内部内容可有可无
     * 第三个正则 匹配: 在/后面可以由接受任意字符,直到遇到下一个/
     * 第四个正则 匹配* 在*后面可以由接受任意字符
     */
    this.initRegexps = function(route) {
        route = route.replace(/[/,.+\-?$#{}\[\]]/g, '\\$&')
            .replace(/\((.*?)\)/g, '(?:$1)?')
            .replace(/(\/\w?:\w+)+/g, '\/([^/]+)')
            .replace(/\*\w*/g, '([^?]*?)');

        return new RegExp('^' + route + '$');
    };

    //将匹配的正则返回,为回调函数提供参数
    this.getParams = function(reg, hash) {
        return reg.exec(hash).slice(1);
    }
}






/*!
 * Vue.js v2.4.0
 * (c) 2014-2017 Evan You
 * Released under the MIT License.
 */
! function(t, e) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : t.Vue = e()
}(this, function() {
    "use strict";

    function t(t) {
        return void 0 === t || null === t
    }

    function e(t) {
        return void 0 !== t && null !== t
    }

    function n(t) {
        return !0 === t
    }

    function r(t) {
        return !1 === t
    }

    function i(t) {
        return "string" == typeof t || "number" == typeof t
    }

    function o(t) {
        return null !== t && "object" == typeof t
    }

    function a(t) {
        return "[object Object]" === di.call(t)
    }

    function s(t) {
        return "[object RegExp]" === di.call(t)
    }

    function c(t) {
        var e = parseFloat(t);
        return e >= 0 && Math.floor(e) === e && isFinite(t)
    }

    function u(t) {
        return null == t ? "" : "object" == typeof t ? JSON.stringify(t, null, 2) : String(t)
    }

    function l(t) {
        var e = parseFloat(t);
        return isNaN(e) ? t : e
    }

    function f(t, e) {
        for (var n = Object.create(null), r = t.split(","), i = 0; i < r.length; i++) n[r[i]] = !0;
        return e ? function(t) {
            return n[t.toLowerCase()]
        } : function(t) {
            return n[t]
        }
    }

    function p(t, e) {
        if (t.length) {
            var n = t.indexOf(e);
            if (n > -1) return t.splice(n, 1)
        }
    }

    function d(t, e) {
        return mi.call(t, e)
    }

    function v(t) {
        var e = Object.create(null);
        return function(n) {
            return e[n] || (e[n] = t(n))
        }
    }

    function h(t, e) {
        function n(n) {
            var r = arguments.length;
            return r ? r > 1 ? t.apply(e, arguments) : t.call(e, n) : t.call(e)
        }
        return n._length = t.length, n
    }

    function m(t, e) {
        e = e || 0;
        for (var n = t.length - e, r = new Array(n); n--;) r[n] = t[n + e];
        return r
    }

    function y(t, e) {
        for (var n in e) t[n] = e[n];
        return t
    }

    function g(t) {
        for (var e = {}, n = 0; n < t.length; n++) t[n] && y(e, t[n]);
        return e
    }

    function _(t, e, n) {}

    function b(t, e) {
        var n = o(t),
            r = o(e);
        if (!n || !r) return !n && !r && String(t) === String(e);
        try {
            return JSON.stringify(t) === JSON.stringify(e)
        } catch (n) {
            return t === e
        }
    }

    function $(t, e) {
        for (var n = 0; n < t.length; n++)
            if (b(t[n], e)) return n;
        return -1
    }

    function C(t) {
        var e = !1;
        return function() {
            e || (e = !0, t.apply(this, arguments))
        }
    }

    function w(t) {
        var e = (t + "").charCodeAt(0);
        return 36 === e || 95 === e
    }

    function x(t, e, n, r) {
        Object.defineProperty(t, e, {
            value: n,
            enumerable: !!r,
            writable: !0,
            configurable: !0
        })
    }

    function A(t) {
        if (!Ti.test(t)) {
            var e = t.split(".");
            return function(t) {
                for (var n = 0; n < e.length; n++) {
                    if (!t) return;
                    t = t[e[n]]
                }
                return t
            }
        }
    }

    function k(t, e, n) {
        if (Oi.errorHandler) Oi.errorHandler.call(null, t, e, n);
        else {
            if (!Ni || "undefined" == typeof console) throw t;
            console.error(t)
        }
    }

    function O(t) {
        return "function" == typeof t && /native code/.test(t.toString())
    }

    function S(t) {
        Zi.target && Yi.push(Zi.target), Zi.target = t
    }

    function T() {
        Zi.target = Yi.pop()
    }

    function E(t, e, n) {
        t.__proto__ = e
    }

    function j(t, e, n) {
        for (var r = 0, i = n.length; r < i; r++) {
            var o = n[r];
            x(t, o, e[o])
        }
    }

    function N(t, e) {
        if (o(t)) {
            var n;
            return d(t, "__ob__") && t.__ob__ instanceof no ? n = t.__ob__ : eo.shouldConvert && !Ki() && (Array.isArray(t) || a(t)) && Object.isExtensible(t) && !t._isVue && (n = new no(t)), e && n && n.vmCount++, n
        }
    }

    function L(t, e, n, r, i) {
        var o = new Zi,
            a = Object.getOwnPropertyDescriptor(t, e);
        if (!a || !1 !== a.configurable) {
            var s = a && a.get,
                c = a && a.set,
                u = !i && N(n);
            Object.defineProperty(t, e, {
                enumerable: !0,
                configurable: !0,
                get: function() {
                    var e = s ? s.call(t) : n;
                    return Zi.target && (o.depend(), u && u.dep.depend(), Array.isArray(e) && D(e)), e
                },
                set: function(e) {
                    var r = s ? s.call(t) : n;
                    e === r || e !== e && r !== r || (c ? c.call(t, e) : n = e, u = !i && N(e), o.notify())
                }
            })
        }
    }

    function I(t, e, n) {
        if (Array.isArray(t) && c(e)) return t.length = Math.max(t.length, e), t.splice(e, 1, n), n;
        if (d(t, e)) return t[e] = n, n;
        var r = t.__ob__;
        return t._isVue || r && r.vmCount ? n : r ? (L(r.value, e, n), r.dep.notify(), n) : (t[e] = n, n)
    }

    function M(t, e) {
        if (Array.isArray(t) && c(e)) t.splice(e, 1);
        else {
            var n = t.__ob__;
            t._isVue || n && n.vmCount || d(t, e) && (delete t[e], n && n.dep.notify())
        }
    }

    function D(t) {
        for (var e = void 0, n = 0, r = t.length; n < r; n++)(e = t[n]) && e.__ob__ && e.__ob__.dep.depend(), Array.isArray(e) && D(e)
    }

    function P(t, e) {
        if (!e) return t;
        for (var n, r, i, o = Object.keys(e), s = 0; s < o.length; s++) r = t[n = o[s]], i = e[n], d(t, n) ? a(r) && a(i) && P(r, i) : I(t, n, i);
        return t
    }

    function F(t, e, n) {
        return n ? t || e ? function() {
            var r = "function" == typeof e ? e.call(n) : e,
                i = "function" == typeof t ? t.call(n) : void 0;
            return r ? P(r, i) : i
        } : void 0 : e ? t ? function() {
            return P("function" == typeof e ? e.call(this) : e, t.call(this))
        } : e : t
    }

    function R(t, e) {
        return e ? t ? t.concat(e) : Array.isArray(e) ? e : [e] : t
    }

    function H(t, e) {
        var n = Object.create(t || null);
        return e ? y(n, e) : n
    }

    function B(t) {
        var e = t.props;
        if (e) {
            var n, r, i = {};
            if (Array.isArray(e))
                for (n = e.length; n--;) "string" == typeof(r = e[n]) && (i[gi(r)] = {
                    type: null
                });
            else if (a(e))
                for (var o in e) r = e[o], i[gi(o)] = a(r) ? r : {
                    type: r
                };
            t.props = i
        }
    }

    function U(t) {
        var e = t.inject;
        if (Array.isArray(e))
            for (var n = t.inject = {}, r = 0; r < e.length; r++) n[e[r]] = e[r]
    }

    function V(t) {
        var e = t.directives;
        if (e)
            for (var n in e) {
                var r = e[n];
                "function" == typeof r && (e[n] = {
                    bind: r,
                    update: r
                })
            }
    }

    function z(t, e, n) {
        function r(r) {
            var i = ro[r] || io;
            c[r] = i(t[r], e[r], n, r)
        }
        "function" == typeof e && (e = e.options), B(e), U(e), V(e);
        var i = e.extends;
        if (i && (t = z(t, i, n)), e.mixins)
            for (var o = 0, a = e.mixins.length; o < a; o++) t = z(t, e.mixins[o], n);
        var s, c = {};
        for (s in t) r(s);
        for (s in e) d(t, s) || r(s);
        return c
    }

    function K(t, e, n, r) {
        if ("string" == typeof n) {
            var i = t[e];
            if (d(i, n)) return i[n];
            var o = gi(n);
            if (d(i, o)) return i[o];
            var a = _i(o);
            if (d(i, a)) return i[a];
            var s = i[n] || i[o] || i[a];
            return s
        }
    }

    function J(t, e, n, r) {
        var i = e[t],
            o = !d(n, t),
            a = n[t];
        if (G(Boolean, i.type) && (o && !d(i, "default") ? a = !1 : G(String, i.type) || "" !== a && a !== $i(t) || (a = !0)), void 0 === a) {
            a = q(r, i, t);
            var s = eo.shouldConvert;
            eo.shouldConvert = !0, N(a), eo.shouldConvert = s
        }
        return a
    }

    function q(t, e, n) {
        if (d(e, "default")) {
            var r = e.default;
            return t && t.$options.propsData && void 0 === t.$options.propsData[n] && void 0 !== t._props[n] ? t._props[n] : "function" == typeof r && "Function" !== W(e.type) ? r.call(t) : r
        }
    }

    function W(t) {
        var e = t && t.toString().match(/^\s*function (\w+)/);
        return e ? e[1] : ""
    }

    function G(t, e) {
        if (!Array.isArray(e)) return W(e) === W(t);
        for (var n = 0, r = e.length; n < r; n++)
            if (W(e[n]) === W(t)) return !0;
        return !1
    }

    function Z(t) {
        return new oo(void 0, void 0, void 0, String(t))
    }

    function Y(t) {
        var e = new oo(t.tag, t.data, t.children, t.text, t.elm, t.context, t.componentOptions, t.asyncFactory);
        return e.ns = t.ns, e.isStatic = t.isStatic, e.key = t.key, e.isComment = t.isComment, e.isCloned = !0, e
    }

    function Q(t) {
        for (var e = t.length, n = new Array(e), r = 0; r < e; r++) n[r] = Y(t[r]);
        return n
    }

    function X(t) {
        function e() {
            var t = arguments,
                n = e.fns;
            if (!Array.isArray(n)) return n.apply(null, arguments);
            for (var r = n.slice(), i = 0; i < r.length; i++) r[i].apply(null, t)
        }
        return e.fns = t, e
    }

    function tt(e, n, r, i, o) {
        var a, s, c, u;
        for (a in e) s = e[a], c = n[a], u = uo(a), t(s) || (t(c) ? (t(s.fns) && (s = e[a] = X(s)), r(u.name, s, u.once, u.capture, u.passive)) : s !== c && (c.fns = s, e[a] = c));
        for (a in n) t(e[a]) && i((u = uo(a)).name, n[a], u.capture)
    }

    function et(r, i, o) {
        function a() {
            o.apply(this, arguments), p(s.fns, a)
        }
        var s, c = r[i];
        t(c) ? s = X([a]) : e(c.fns) && n(c.merged) ? (s = c).fns.push(a) : s = X([c, a]), s.merged = !0, r[i] = s
    }

    function nt(n, r, i) {
        var o = r.options.props;
        if (!t(o)) {
            var a = {},
                s = n.attrs,
                c = n.props;
            if (e(s) || e(c))
                for (var u in o) {
                    var l = $i(u);
                    rt(a, c, u, l, !0) || rt(a, s, u, l, !1)
                }
            return a
        }
    }

    function rt(t, n, r, i, o) {
        if (e(n)) {
            if (d(n, r)) return t[r] = n[r], o || delete n[r], !0;
            if (d(n, i)) return t[r] = n[i], o || delete n[i], !0
        }
        return !1
    }

    function it(t) {
        for (var e = 0; e < t.length; e++)
            if (Array.isArray(t[e])) return Array.prototype.concat.apply([], t);
        return t
    }

    function ot(t) {
        return i(t) ? [Z(t)] : Array.isArray(t) ? st(t) : void 0
    }

    function at(t) {
        return e(t) && e(t.text) && r(t.isComment)
    }

    function st(r, o) {
        var a, s, c, u = [];
        for (a = 0; a < r.length; a++) t(s = r[a]) || "boolean" == typeof s || (c = u[u.length - 1], Array.isArray(s) ? u.push.apply(u, st(s, (o || "") + "_" + a)) : i(s) ? at(c) ? c.text += String(s) : "" !== s && u.push(Z(s)) : at(s) && at(c) ? u[u.length - 1] = Z(c.text + s.text) : (n(r._isVList) && e(s.tag) && t(s.key) && e(o) && (s.key = "__vlist" + o + "_" + a + "__"), u.push(s)));
        return u
    }

    function ct(t, e) {
        return t.__esModule && t.default && (t = t.default), o(t) ? e.extend(t) : t
    }

    function ut(t, e, n, r, i) {
        var o = co();
        return o.asyncFactory = t, o.asyncMeta = {
            data: e,
            context: n,
            children: r,
            tag: i
        }, o
    }

    function lt(r, i, a) {
        if (n(r.error) && e(r.errorComp)) return r.errorComp;
        if (e(r.resolved)) return r.resolved;
        if (n(r.loading) && e(r.loadingComp)) return r.loadingComp;
        if (!e(r.contexts)) {
            var s = r.contexts = [a],
                c = !0,
                u = function() {
                    for (var t = 0, e = s.length; t < e; t++) s[t].$forceUpdate()
                },
                l = C(function(t) {
                    r.resolved = ct(t, i), c || u()
                }),
                f = C(function(t) {
                    e(r.errorComp) && (r.error = !0, u())
                }),
                p = r(l, f);
            return o(p) && ("function" == typeof p.then ? t(r.resolved) && p.then(l, f) : e(p.component) && "function" == typeof p.component.then && (p.component.then(l, f), e(p.error) && (r.errorComp = ct(p.error, i)), e(p.loading) && (r.loadingComp = ct(p.loading, i), 0 === p.delay ? r.loading = !0 : setTimeout(function() {
                t(r.resolved) && t(r.error) && (r.loading = !0, u())
            }, p.delay || 200)), e(p.timeout) && setTimeout(function() {
                t(r.resolved) && f(null)
            }, p.timeout))), c = !1, r.loading ? r.loadingComp : r.resolved
        }
        r.contexts.push(a)
    }

    function ft(t) {
        if (Array.isArray(t))
            for (var n = 0; n < t.length; n++) {
                var r = t[n];
                if (e(r) && e(r.componentOptions)) return r
            }
    }

    function pt(t) {
        t._events = Object.create(null), t._hasHookEvent = !1;
        var e = t.$options._parentListeners;
        e && ht(t, e)
    }

    function dt(t, e, n) {
        n ? so.$once(t, e) : so.$on(t, e)
    }

    function vt(t, e) {
        so.$off(t, e)
    }

    function ht(t, e, n) {
        so = t, tt(e, n || {}, dt, vt, t)
    }

    function mt(t, e) {
        var n = {};
        if (!t) return n;
        for (var r = [], i = 0, o = t.length; i < o; i++) {
            var a = t[i];
            if (a.context !== e && a.functionalContext !== e || !a.data || null == a.data.slot) r.push(a);
            else {
                var s = a.data.slot,
                    c = n[s] || (n[s] = []);
                "template" === a.tag ? c.push.apply(c, a.children) : c.push(a)
            }
        }
        return r.every(yt) || (n.default = r), n
    }

    function yt(t) {
        return t.isComment || " " === t.text
    }

    function gt(t, e) {
        e = e || {};
        for (var n = 0; n < t.length; n++) Array.isArray(t[n]) ? gt(t[n], e) : e[t[n].key] = t[n].fn;
        return e
    }

    function _t(t) {
        var e = t.$options,
            n = e.parent;
        if (n && !e.abstract) {
            for (; n.$options.abstract && n.$parent;) n = n.$parent;
            n.$children.push(t)
        }
        t.$parent = n, t.$root = n ? n.$root : t, t.$children = [], t.$refs = {}, t._watcher = null, t._inactive = null, t._directInactive = !1, t._isMounted = !1, t._isDestroyed = !1, t._isBeingDestroyed = !1
    }

    function bt(t, e, n) {
        t.$el = e, t.$options.render || (t.$options.render = co), At(t, "beforeMount");
        var r;
        return r = function() {
            t._update(t._render(), n)
        }, t._watcher = new _o(t, r, _), n = !1, null == t.$vnode && (t._isMounted = !0, At(t, "mounted")), t
    }

    function $t(t, e, n, r, i) {
        var o = !!(i || t.$options._renderChildren || r.data.scopedSlots || t.$scopedSlots !== Si);
        if (t.$options._parentVnode = r, t.$vnode = r, t._vnode && (t._vnode.parent = r), t.$options._renderChildren = i, t.$attrs = r.data && r.data.attrs, t.$listeners = n, e && t.$options.props) {
            eo.shouldConvert = !1;
            for (var a = t._props, s = t.$options._propKeys || [], c = 0; c < s.length; c++) {
                var u = s[c];
                a[u] = J(u, t.$options.props, e, t)
            }
            eo.shouldConvert = !0, t.$options.propsData = e
        }
        if (n) {
            var l = t.$options._parentListeners;
            t.$options._parentListeners = n, ht(t, n, l)
        }
        o && (t.$slots = mt(i, r.context), t.$forceUpdate())
    }

    function Ct(t) {
        for (; t && (t = t.$parent);)
            if (t._inactive) return !0;
        return !1
    }

    function wt(t, e) {
        if (e) {
            if (t._directInactive = !1, Ct(t)) return
        } else if (t._directInactive) return;
        if (t._inactive || null === t._inactive) {
            t._inactive = !1;
            for (var n = 0; n < t.$children.length; n++) wt(t.$children[n]);
            At(t, "activated")
        }
    }

    function xt(t, e) {
        if (!(e && (t._directInactive = !0, Ct(t)) || t._inactive)) {
            t._inactive = !0;
            for (var n = 0; n < t.$children.length; n++) xt(t.$children[n]);
            At(t, "deactivated")
        }
    }

    function At(t, e) {
        var n = t.$options[e];
        if (n)
            for (var r = 0, i = n.length; r < i; r++) try {
                n[r].call(t)
            } catch (n) {
                k(n, t, e + " hook")
            }
        t._hasHookEvent && t.$emit("hook:" + e)
    }

    function kt() {
        yo = fo.length = po.length = 0, vo = {}, ho = mo = !1
    }

    function Ot() {
        mo = !0;
        var t, e;
        for (fo.sort(function(t, e) {
                return t.id - e.id
            }), yo = 0; yo < fo.length; yo++) e = (t = fo[yo]).id, vo[e] = null, t.run();
        var n = po.slice(),
            r = fo.slice();
        kt(), Et(n), St(r), Ji && Oi.devtools && Ji.emit("flush")
    }

    function St(t) {
        for (var e = t.length; e--;) {
            var n = t[e],
                r = n.vm;
            r._watcher === n && r._isMounted && At(r, "updated")
        }
    }

    function Tt(t) {
        t._inactive = !1, po.push(t)
    }

    function Et(t) {
        for (var e = 0; e < t.length; e++) t[e]._inactive = !0, wt(t[e], !0)
    }

    function jt(t) {
        var e = t.id;
        if (null == vo[e]) {
            if (vo[e] = !0, mo) {
                for (var n = fo.length - 1; n > yo && fo[n].id > t.id;) n--;
                fo.splice(n + 1, 0, t)
            } else fo.push(t);
            ho || (ho = !0, Wi(Ot))
        }
    }

    function Nt(t) {
        bo.clear(), Lt(t, bo)
    }

    function Lt(t, e) {
        var n, r, i = Array.isArray(t);
        if ((i || o(t)) && Object.isExtensible(t)) {
            if (t.__ob__) {
                var a = t.__ob__.dep.id;
                if (e.has(a)) return;
                e.add(a)
            }
            if (i)
                for (n = t.length; n--;) Lt(t[n], e);
            else
                for (n = (r = Object.keys(t)).length; n--;) Lt(t[r[n]], e)
        }
    }

    function It(t, e, n) {
        $o.get = function() {
            return this[e][n]
        }, $o.set = function(t) {
            this[e][n] = t
        }, Object.defineProperty(t, n, $o)
    }

    function Mt(t) {
        t._watchers = [];
        var e = t.$options;
        e.props && Dt(t, e.props), e.methods && Ut(t, e.methods), e.data ? Pt(t) : N(t._data = {}, !0), e.computed && Rt(t, e.computed), e.watch && e.watch !== Hi && Vt(t, e.watch)
    }

    function Dt(t, e) {
        var n = t.$options.propsData || {},
            r = t._props = {},
            i = t.$options._propKeys = [],
            o = !t.$parent;
        eo.shouldConvert = o;
        for (var a in e) ! function(o) {
            i.push(o);
            var a = J(o, e, n, t);
            L(r, o, a), o in t || It(t, "_props", o)
        }(a);
        eo.shouldConvert = !0
    }

    function Pt(t) {
        var e = t.$options.data;
        a(e = t._data = "function" == typeof e ? Ft(e, t) : e || {}) || (e = {});
        for (var n = Object.keys(e), r = t.$options.props, i = (t.$options.methods, n.length); i--;) {
            var o = n[i];
            r && d(r, o) || w(o) || It(t, "_data", o)
        }
        N(e, !0)
    }

    function Ft(t, e) {
        try {
            return t.call(e)
        } catch (t) {
            return k(t, e, "data()"), {}
        }
    }

    function Rt(t, e) {
        var n = t._computedWatchers = Object.create(null);
        for (var r in e) {
            var i = e[r],
                o = "function" == typeof i ? i : i.get;
            n[r] = new _o(t, o, _, Co), r in t || Ht(t, r, i)
        }
    }

    function Ht(t, e, n) {
        "function" == typeof n ? ($o.get = Bt(e), $o.set = _) : ($o.get = n.get ? !1 !== n.cache ? Bt(e) : n.get : _, $o.set = n.set ? n.set : _), Object.defineProperty(t, e, $o)
    }

    function Bt(t) {
        return function() {
            var e = this._computedWatchers && this._computedWatchers[t];
            if (e) return e.dirty && e.evaluate(), Zi.target && e.depend(), e.value
        }
    }

    function Ut(t, e) {
        t.$options.props;
        for (var n in e) t[n] = null == e[n] ? _ : h(e[n], t)
    }

    function Vt(t, e) {
        for (var n in e) {
            var r = e[n];
            if (Array.isArray(r))
                for (var i = 0; i < r.length; i++) zt(t, n, r[i]);
            else zt(t, n, r)
        }
    }

    function zt(t, e, n, r) {
        return a(n) && (r = n, n = n.handler), "string" == typeof n && (n = t[n]), t.$watch(e, n, r)
    }

    function Kt(t) {
        var e = t.$options.provide;
        e && (t._provided = "function" == typeof e ? e.call(t) : e)
    }

    function Jt(t) {
        var e = qt(t.$options.inject, t);
        e && (eo.shouldConvert = !1, Object.keys(e).forEach(function(n) {
            L(t, n, e[n])
        }), eo.shouldConvert = !0)
    }

    function qt(t, e) {
        if (t) {
            for (var n = Object.create(null), r = qi ? Reflect.ownKeys(t) : Object.keys(t), i = 0; i < r.length; i++)
                for (var o = r[i], a = t[o], s = e; s;) {
                    if (s._provided && a in s._provided) {
                        n[o] = s._provided[a];
                        break
                    }
                    s = s.$parent
                }
            return n
        }
    }

    function Wt(t, n, r, i, o) {
        var a = {},
            s = t.options.props;
        if (e(s))
            for (var c in s) a[c] = J(c, s, n || {});
        else e(r.attrs) && Gt(a, r.attrs), e(r.props) && Gt(a, r.props);
        var u = Object.create(i),
            l = t.options.render.call(null, function(t, e, n, r) {
                return ee(u, t, e, n, r, !0)
            }, {
                data: r,
                props: a,
                children: o,
                parent: i,
                listeners: r.on || {},
                injections: qt(t.options.inject, i),
                slots: function() {
                    return mt(o, i)
                }
            });
        return l instanceof oo && (l.functionalContext = i, l.functionalOptions = t.options, r.slot && ((l.data || (l.data = {})).slot = r.slot)), l
    }

    function Gt(t, e) {
        for (var n in e) t[gi(n)] = e[n]
    }

    function Zt(r, i, a, s, c) {
        if (!t(r)) {
            var u = a.$options._base;
            if (o(r) && (r = u.extend(r)), "function" == typeof r) {
                var l;
                if (t(r.cid) && (l = r, void 0 === (r = lt(l, u, a)))) return ut(l, i, a, s, c);
                i = i || {}, me(r), e(i.model) && te(r.options, i);
                var f = nt(i, r, c);
                if (n(r.options.functional)) return Wt(r, f, i, a, s);
                var p = i.on;
                if (n(r.options.abstract)) {
                    var d = i.slot;
                    i = {}, d && (i.slot = d)
                }
                Qt(i);
                var v = r.options.name || c;
                return new oo("vue-component-" + r.cid + (v ? "-" + v : ""), i, void 0, void 0, void 0, a, {
                    Ctor: r,
                    propsData: f,
                    listeners: p,
                    tag: c,
                    children: s
                }, l)
            }
        }
    }

    function Yt(t, n, r, i) {
        var o = t.componentOptions,
            a = {
                _isComponent: !0,
                parent: n,
                propsData: o.propsData,
                _componentTag: o.tag,
                _parentVnode: t,
                _parentListeners: o.listeners,
                _renderChildren: o.children,
                _parentElm: r || null,
                _refElm: i || null
            },
            s = t.data.inlineTemplate;
        return e(s) && (a.render = s.render, a.staticRenderFns = s.staticRenderFns), new o.Ctor(a)
    }

    function Qt(t) {
        t.hook || (t.hook = {});
        for (var e = 0; e < xo.length; e++) {
            var n = xo[e],
                r = t.hook[n],
                i = wo[n];
            t.hook[n] = r ? Xt(i, r) : i
        }
    }

    function Xt(t, e) {
        return function(n, r, i, o) {
            t(n, r, i, o), e(n, r, i, o)
        }
    }

    function te(t, n) {
        var r = t.model && t.model.prop || "value",
            i = t.model && t.model.event || "input";
        (n.props || (n.props = {}))[r] = n.model.value;
        var o = n.on || (n.on = {});
        e(o[i]) ? o[i] = [n.model.callback].concat(o[i]) : o[i] = n.model.callback
    }

    function ee(t, e, r, o, a, s) {
        return (Array.isArray(r) || i(r)) && (a = o, o = r, r = void 0), n(s) && (a = ko), ne(t, e, r, o, a)
    }

    function ne(t, n, r, i, o) {
        if (e(r) && e(r.__ob__)) return co();
        if (e(r) && e(r.is) && (n = r.is), !n) return co();
        Array.isArray(i) && "function" == typeof i[0] && ((r = r || {}).scopedSlots = {
            default: i[0]
        }, i.length = 0), o === ko ? i = ot(i) : o === Ao && (i = it(i));
        var a, s;
        if ("string" == typeof n) {
            var c;
            s = Oi.getTagNamespace(n), a = Oi.isReservedTag(n) ? new oo(Oi.parsePlatformTagName(n), r, i, void 0, void 0, t) : e(c = K(t.$options, "components", n)) ? Zt(c, r, t, i, n) : new oo(n, r, i, void 0, void 0, t)
        } else a = Zt(n, r, t, i);
        return e(a) ? (s && re(a, s), a) : co()
    }

    function re(n, r) {
        if (n.ns = r, "foreignObject" !== n.tag && e(n.children))
            for (var i = 0, o = n.children.length; i < o; i++) {
                var a = n.children[i];
                e(a.tag) && t(a.ns) && re(a, r)
            }
    }

    function ie(t, n) {
        var r, i, a, s, c;
        if (Array.isArray(t) || "string" == typeof t)
            for (r = new Array(t.length), i = 0, a = t.length; i < a; i++) r[i] = n(t[i], i);
        else if ("number" == typeof t)
            for (r = new Array(t), i = 0; i < t; i++) r[i] = n(i + 1, i);
        else if (o(t))
            for (s = Object.keys(t), r = new Array(s.length), i = 0, a = s.length; i < a; i++) c = s[i], r[i] = n(t[c], c, i);
        return e(r) && (r._isVList = !0), r
    }

    function oe(t, e, n, r) {
        var i = this.$scopedSlots[t];
        if (i) return n = n || {}, r && (n = y(y({}, r), n)), i(n) || e;
        var o = this.$slots[t];
        return o || e
    }

    function ae(t) {
        return K(this.$options, "filters", t, !0) || wi
    }

    function se(t, e, n) {
        var r = Oi.keyCodes[e] || n;
        return Array.isArray(r) ? -1 === r.indexOf(t) : r !== t
    }

    function ce(t, e, n, r, i) {
        if (n)
            if (o(n)) {
                Array.isArray(n) && (n = g(n));
                var a;
                for (var s in n) ! function(o) {
                    if ("class" === o || "style" === o || hi(o)) a = t;
                    else {
                        var s = t.attrs && t.attrs.type;
                        a = r || Oi.mustUseProp(e, s, o) ? t.domProps || (t.domProps = {}) : t.attrs || (t.attrs = {})
                    }
                    o in a || (a[o] = n[o], i && ((t.on || (t.on = {}))["update:" + o] = function(t) {
                        n[o] = t
                    }))
                }(s)
            } else;
        return t
    }

    function ue(t, e) {
        var n = this._staticTrees[t];
        return n && !e ? Array.isArray(n) ? Q(n) : Y(n) : (n = this._staticTrees[t] = this.$options.staticRenderFns[t].call(this._renderProxy), fe(n, "__static__" + t, !1), n)
    }

    function le(t, e, n) {
        return fe(t, "__once__" + e + (n ? "_" + n : ""), !0), t
    }

    function fe(t, e, n) {
        if (Array.isArray(t))
            for (var r = 0; r < t.length; r++) t[r] && "string" != typeof t[r] && pe(t[r], e + "_" + r, n);
        else pe(t, e, n)
    }

    function pe(t, e, n) {
        t.isStatic = !0, t.key = e, t.isOnce = n
    }

    function de(t, e) {
        if (e)
            if (a(e)) {
                var n = t.on = t.on ? y({}, t.on) : {};
                for (var r in e) {
                    var i = n[r],
                        o = e[r];
                    n[r] = i ? [].concat(o, i) : o
                }
            } else;
        return t
    }

    function ve(t) {
        t._vnode = null, t._staticTrees = null;
        var e = t.$vnode = t.$options._parentVnode,
            n = e && e.context;
        t.$slots = mt(t.$options._renderChildren, n), t.$scopedSlots = Si, t._c = function(e, n, r, i) {
            return ee(t, e, n, r, i, !1)
        }, t.$createElement = function(e, n, r, i) {
            return ee(t, e, n, r, i, !0)
        };
        var r = e && e.data;
        L(t, "$attrs", r && r.attrs, null, !0), L(t, "$listeners", r && r.on, null, !0)
    }

    function he(t, e) {
        var n = t.$options = Object.create(t.constructor.options);
        n.parent = e.parent, n.propsData = e.propsData, n._parentVnode = e._parentVnode, n._parentListeners = e._parentListeners, n._renderChildren = e._renderChildren, n._componentTag = e._componentTag, n._parentElm = e._parentElm, n._refElm = e._refElm, e.render && (n.render = e.render, n.staticRenderFns = e.staticRenderFns)
    }

    function me(t) {
        var e = t.options;
        if (t.super) {
            var n = me(t.super);
            if (n !== t.superOptions) {
                t.superOptions = n;
                var r = ye(t);
                r && y(t.extendOptions, r), (e = t.options = z(n, t.extendOptions)).name && (e.components[e.name] = t)
            }
        }
        return e
    }

    function ye(t) {
        var e, n = t.options,
            r = t.extendOptions,
            i = t.sealedOptions;
        for (var o in n) n[o] !== i[o] && (e || (e = {}), e[o] = ge(n[o], r[o], i[o]));
        return e
    }

    function ge(t, e, n) {
        if (Array.isArray(t)) {
            var r = [];
            n = Array.isArray(n) ? n : [n], e = Array.isArray(e) ? e : [e];
            for (var i = 0; i < t.length; i++)(e.indexOf(t[i]) >= 0 || n.indexOf(t[i]) < 0) && r.push(t[i]);
            return r
        }
        return t
    }

    function _e(t) {
        this._init(t)
    }

    function be(t) {
        t.use = function(t) {
            var e = this._installedPlugins || (this._installedPlugins = []);
            if (e.indexOf(t) > -1) return this;
            var n = m(arguments, 1);
            return n.unshift(this), "function" == typeof t.install ? t.install.apply(t, n) : "function" == typeof t && t.apply(null, n), e.push(t), this
        }
    }

    function $e(t) {
        t.mixin = function(t) {
            return this.options = z(this.options, t), this
        }
    }

    function Ce(t) {
        t.cid = 0;
        var e = 1;
        t.extend = function(t) {
            t = t || {};
            var n = this,
                r = n.cid,
                i = t._Ctor || (t._Ctor = {});
            if (i[r]) return i[r];
            var o = t.name || n.options.name,
                a = function(t) {
                    this._init(t)
                };
            return a.prototype = Object.create(n.prototype), a.prototype.constructor = a, a.cid = e++, a.options = z(n.options, t), a.super = n, a.options.props && we(a), a.options.computed && xe(a), a.extend = n.extend, a.mixin = n.mixin, a.use = n.use, Ai.forEach(function(t) {
                a[t] = n[t]
            }), o && (a.options.components[o] = a), a.superOptions = n.options, a.extendOptions = t, a.sealedOptions = y({}, a.options), i[r] = a, a
        }
    }

    function we(t) {
        var e = t.options.props;
        for (var n in e) It(t.prototype, "_props", n)
    }

    function xe(t) {
        var e = t.options.computed;
        for (var n in e) Ht(t.prototype, n, e[n])
    }

    function Ae(t) {
        Ai.forEach(function(e) {
            t[e] = function(t, n) {
                return n ? ("component" === e && a(n) && (n.name = n.name || t, n = this.options._base.extend(n)), "directive" === e && "function" == typeof n && (n = {
                    bind: n,
                    update: n
                }), this.options[e + "s"][t] = n, n) : this.options[e + "s"][t]
            }
        })
    }

    function ke(t) {
        return t && (t.Ctor.options.name || t.tag)
    }

    function Oe(t, e) {
        return Array.isArray(t) ? t.indexOf(e) > -1 : "string" == typeof t ? t.split(",").indexOf(e) > -1 : !!s(t) && t.test(e)
    }

    function Se(t, e, n) {
        for (var r in t) {
            var i = t[r];
            if (i) {
                var o = ke(i.componentOptions);
                o && !n(o) && (i !== e && Te(i), t[r] = null)
            }
        }
    }

    function Te(t) {
        t && t.componentInstance.$destroy()
    }

    function Ee(t) {
        for (var n = t.data, r = t, i = t; e(i.componentInstance);)(i = i.componentInstance._vnode).data && (n = je(i.data, n));
        for (; e(r = r.parent);) r.data && (n = je(n, r.data));
        return Ne(n.staticClass, n.class)
    }

    function je(t, n) {
        return {
            staticClass: Le(t.staticClass, n.staticClass),
            class: e(t.class) ? [t.class, n.class] : n.class
        }
    }

    function Ne(t, n) {
        return e(t) || e(n) ? Le(t, Ie(n)) : ""
    }

    function Le(t, e) {
        return t ? e ? t + " " + e : t : e || ""
    }

    function Ie(t) {
        return Array.isArray(t) ? Me(t) : o(t) ? De(t) : "string" == typeof t ? t : ""
    }

    function Me(t) {
        for (var n, r = "", i = 0, o = t.length; i < o; i++) e(n = Ie(t[i])) && "" !== n && (r && (r += " "), r += n);
        return r
    }

    function De(t) {
        var e = "";
        for (var n in t) t[n] && (e && (e += " "), e += n);
        return e
    }

    function Pe(t) {
        return Zo(t) ? "svg" : "math" === t ? "math" : void 0
    }

    function Fe(t) {
        if ("string" == typeof t) {
            var e = document.querySelector(t);
            return e || document.createElement("div")
        }
        return t
    }

    function Re(t, e) {
        var n = t.data.ref;
        if (n) {
            var r = t.context,
                i = t.componentInstance || t.elm,
                o = r.$refs;
            e ? Array.isArray(o[n]) ? p(o[n], i) : o[n] === i && (o[n] = void 0) : t.data.refInFor ? Array.isArray(o[n]) ? o[n].indexOf(i) < 0 && o[n].push(i) : o[n] = [i] : o[n] = i
        }
    }

    function He(r, i) {
        return r.key === i.key && (r.tag === i.tag && r.isComment === i.isComment && e(r.data) === e(i.data) && Be(r, i) || n(r.isAsyncPlaceholder) && r.asyncFactory === i.asyncFactory && t(i.asyncFactory.error))
    }

    function Be(t, n) {
        if ("input" !== t.tag) return !0;
        var r;
        return (e(r = t.data) && e(r = r.attrs) && r.type) === (e(r = n.data) && e(r = r.attrs) && r.type)
    }

    function Ue(t, n, r) {
        var i, o, a = {};
        for (i = n; i <= r; ++i) e(o = t[i].key) && (a[o] = i);
        return a
    }

    function Ve(t, e) {
        (t.data.directives || e.data.directives) && ze(t, e)
    }

    function ze(t, e) {
        var n, r, i, o = t === ea,
            a = e === ea,
            s = Ke(t.data.directives, t.context),
            c = Ke(e.data.directives, e.context),
            u = [],
            l = [];
        for (n in c) r = s[n], i = c[n], r ? (i.oldValue = r.value, qe(i, "update", e, t), i.def && i.def.componentUpdated && l.push(i)) : (qe(i, "bind", e, t), i.def && i.def.inserted && u.push(i));
        if (u.length) {
            var f = function() {
                for (var n = 0; n < u.length; n++) qe(u[n], "inserted", e, t)
            };
            o ? et(e.data.hook || (e.data.hook = {}), "insert", f) : f()
        }
        if (l.length && et(e.data.hook || (e.data.hook = {}), "postpatch", function() {
                for (var n = 0; n < l.length; n++) qe(l[n], "componentUpdated", e, t)
            }), !o)
            for (n in s) c[n] || qe(s[n], "unbind", t, t, a)
    }

    function Ke(t, e) {
        var n = Object.create(null);
        if (!t) return n;
        var r, i;
        for (r = 0; r < t.length; r++)(i = t[r]).modifiers || (i.modifiers = ia), n[Je(i)] = i, i.def = K(e.$options, "directives", i.name, !0);
        return n
    }

    function Je(t) {
        return t.rawName || t.name + "." + Object.keys(t.modifiers || {}).join(".")
    }

    function qe(t, e, n, r, i) {
        var o = t.def && t.def[e];
        if (o) try {
            o(n.elm, t, n, r, i)
        } catch (r) {
            k(r, n.context, "directive " + t.name + " " + e + " hook")
        }
    }

    function We(n, r) {
        var i = r.componentOptions;
        if (!(e(i) && !1 === i.Ctor.options.inheritAttrs || t(n.data.attrs) && t(r.data.attrs))) {
            var o, a, s = r.elm,
                c = n.data.attrs || {},
                u = r.data.attrs || {};
            e(u.__ob__) && (u = r.data.attrs = y({}, u));
            for (o in u) a = u[o], c[o] !== a && Ge(s, o, a);
            Mi && u.value !== c.value && Ge(s, "value", u.value);
            for (o in c) t(u[o]) && (Ko(o) ? s.removeAttributeNS(zo, Jo(o)) : Uo(o) || s.removeAttribute(o))
        }
    }

    function Ge(t, e, n) {
        Vo(e) ? qo(n) ? t.removeAttribute(e) : t.setAttribute(e, e) : Uo(e) ? t.setAttribute(e, qo(n) || "false" === n ? "false" : "true") : Ko(e) ? qo(n) ? t.removeAttributeNS(zo, Jo(e)) : t.setAttributeNS(zo, e, n) : qo(n) ? t.removeAttribute(e) : t.setAttribute(e, n)
    }

    function Ze(n, r) {
        var i = r.elm,
            o = r.data,
            a = n.data;
        if (!(t(o.staticClass) && t(o.class) && (t(a) || t(a.staticClass) && t(a.class)))) {
            var s = Ee(r),
                c = i._transitionClasses;
            e(c) && (s = Le(s, Ie(c))), s !== i._prevClass && (i.setAttribute("class", s), i._prevClass = s)
        }
    }

    function Ye(t) {
        function e() {
            (a || (a = [])).push(t.slice(v, i).trim()), v = i + 1
        }
        var n, r, i, o, a, s = !1,
            c = !1,
            u = !1,
            l = !1,
            f = 0,
            p = 0,
            d = 0,
            v = 0;
        for (i = 0; i < t.length; i++)
            if (r = n, n = t.charCodeAt(i), s) 39 === n && 92 !== r && (s = !1);
            else if (c) 34 === n && 92 !== r && (c = !1);
        else if (u) 96 === n && 92 !== r && (u = !1);
        else if (l) 47 === n && 92 !== r && (l = !1);
        else if (124 !== n || 124 === t.charCodeAt(i + 1) || 124 === t.charCodeAt(i - 1) || f || p || d) {
            switch (n) {
                case 34:
                    c = !0;
                    break;
                case 39:
                    s = !0;
                    break;
                case 96:
                    u = !0;
                    break;
                case 40:
                    d++;
                    break;
                case 41:
                    d--;
                    break;
                case 91:
                    p++;
                    break;
                case 93:
                    p--;
                    break;
                case 123:
                    f++;
                    break;
                case 125:
                    f--
            }
            if (47 === n) {
                for (var h = i - 1, m = void 0; h >= 0 && " " === (m = t.charAt(h)); h--);
                m && ca.test(m) || (l = !0)
            }
        } else void 0 === o ? (v = i + 1, o = t.slice(0, i).trim()) : e();
        if (void 0 === o ? o = t.slice(0, i).trim() : 0 !== v && e(), a)
            for (i = 0; i < a.length; i++) o = Qe(o, a[i]);
        return o
    }

    function Qe(t, e) {
        var n = e.indexOf("(");
        return n < 0 ? '_f("' + e + '")(' + t + ")" : '_f("' + e.slice(0, n) + '")(' + t + "," + e.slice(n + 1)
    }

    function Xe(t) {
        console.error("[Vue compiler]: " + t)
    }

    function tn(t, e) {
        return t ? t.map(function(t) {
            return t[e]
        }).filter(function(t) {
            return t
        }) : []
    }

    function en(t, e, n) {
        (t.props || (t.props = [])).push({
            name: e,
            value: n
        })
    }

    function nn(t, e, n) {
        (t.attrs || (t.attrs = [])).push({
            name: e,
            value: n
        })
    }

    function rn(t, e, n, r, i, o) {
        (t.directives || (t.directives = [])).push({
            name: e,
            rawName: n,
            value: r,
            arg: i,
            modifiers: o
        })
    }

    function on(t, e, n, r, i, o) {
        r && r.capture && (delete r.capture, e = "!" + e), r && r.once && (delete r.once, e = "~" + e), r && r.passive && (delete r.passive, e = "&" + e);
        var a;
        r && r.native ? (delete r.native, a = t.nativeEvents || (t.nativeEvents = {})) : a = t.events || (t.events = {});
        var s = {
                value: n,
                modifiers: r
            },
            c = a[e];
        Array.isArray(c) ? i ? c.unshift(s) : c.push(s) : a[e] = c ? i ? [s, c] : [c, s] : s
    }

    function an(t, e, n) {
        var r = sn(t, ":" + e) || sn(t, "v-bind:" + e);
        if (null != r) return Ye(r);
        if (!1 !== n) {
            var i = sn(t, e);
            if (null != i) return JSON.stringify(i)
        }
    }

    function sn(t, e) {
        var n;
        if (null != (n = t.attrsMap[e]))
            for (var r = t.attrsList, i = 0, o = r.length; i < o; i++)
                if (r[i].name === e) {
                    r.splice(i, 1);
                    break
                }
        return n
    }

    function cn(t, e, n) {
        var r = n || {},
            i = r.number,
            o = "$$v";
        r.trim && (o = "(typeof $$v === 'string'? $$v.trim(): $$v)"), i && (o = "_n(" + o + ")");
        var a = un(e, o);
        t.model = {
            value: "(" + e + ")",
            expression: '"' + e + '"',
            callback: "function ($$v) {" + a + "}"
        }
    }

    function un(t, e) {
        var n = ln(t);
        return null === n.idx ? t + "=" + e : "$set(" + n.exp + ", " + n.idx + ", " + e + ")"
    }

    function ln(t) {
        if (jo = t, Eo = jo.length, Lo = Io = Mo = 0, t.indexOf("[") < 0 || t.lastIndexOf("]") < Eo - 1) return {
            exp: t,
            idx: null
        };
        for (; !pn();) dn(No = fn()) ? hn(No) : 91 === No && vn(No);
        return {
            exp: t.substring(0, Io),
            idx: t.substring(Io + 1, Mo)
        }
    }

    function fn() {
        return jo.charCodeAt(++Lo)
    }

    function pn() {
        return Lo >= Eo
    }

    function dn(t) {
        return 34 === t || 39 === t
    }

    function vn(t) {
        var e = 1;
        for (Io = Lo; !pn();)
            if (t = fn(), dn(t)) hn(t);
            else if (91 === t && e++, 93 === t && e--, 0 === e) {
            Mo = Lo;
            break
        }
    }

    function hn(t) {
        for (var e = t; !pn() && (t = fn()) !== e;);
    }

    function mn(t, e, n) {
        var r = n && n.number,
            i = an(t, "value") || "null",
            o = an(t, "true-value") || "true",
            a = an(t, "false-value") || "false";
        en(t, "checked", "Array.isArray(" + e + ")?_i(" + e + "," + i + ")>-1" + ("true" === o ? ":(" + e + ")" : ":_q(" + e + "," + o + ")")), on(t, la, "var $$a=" + e + ",$$el=$event.target,$$c=$$el.checked?(" + o + "):(" + a + ");if(Array.isArray($$a)){var $$v=" + (r ? "_n(" + i + ")" : i) + ",$$i=_i($$a,$$v);if($$c){$$i<0&&(" + e + "=$$a.concat($$v))}else{$$i>-1&&(" + e + "=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{" + un(e, "$$c") + "}", null, !0)
    }

    function yn(t, e, n) {
        var r = n && n.number,
            i = an(t, "value") || "null";
        en(t, "checked", "_q(" + e + "," + (i = r ? "_n(" + i + ")" : i) + ")"), on(t, la, un(e, i), null, !0)
    }

    function gn(t, e, n) {
        var r = "var $$selectedVal = " + ('Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return ' + (n && n.number ? "_n(val)" : "val") + "})") + ";";
        on(t, "change", r = r + " " + un(e, "$event.target.multiple ? $$selectedVal : $$selectedVal[0]"), null, !0)
    }

    function _n(t, e, n) {
        var r = t.attrsMap.type,
            i = n || {},
            o = i.lazy,
            a = i.number,
            s = i.trim,
            c = !o && "range" !== r,
            u = o ? "change" : "range" === r ? ua : "input",
            l = "$event.target.value";
        s && (l = "$event.target.value.trim()"), a && (l = "_n(" + l + ")");
        var f = un(e, l);
        c && (f = "if($event.target.composing)return;" + f), en(t, "value", "(" + e + ")"), on(t, u, f, null, !0), (s || a) && on(t, "blur", "$forceUpdate()")
    }

    function bn(t) {
        var n;
        e(t[ua]) && (t[n = Ii ? "change" : "input"] = [].concat(t[ua], t[n] || []), delete t[ua]), e(t[la]) && (t[n = Ri ? "click" : "change"] = [].concat(t[la], t[n] || []), delete t[la])
    }

    function $n(t, e, n, r, i) {
        if (n) {
            var o = e,
                a = Po;
            e = function(n) {
                null !== (1 === arguments.length ? o(n) : o.apply(null, arguments)) && Cn(t, e, r, a)
            }
        }
        Po.addEventListener(t, e, Bi ? {
            capture: r,
            passive: i
        } : r)
    }

    function Cn(t, e, n, r) {
        (r || Po).removeEventListener(t, e, n)
    }

    function wn(n, r) {
        var i = e(r.componentOptions),
            o = i ? n.data.nativeOn : n.data.on,
            a = i ? r.data.nativeOn : r.data.on;
        t(o) && t(a) || (a = a || {}, o = o || {}, Po = r.elm, bn(a), tt(a, o, $n, Cn, r.context))
    }

    function xn(n, r) {
        if (!t(n.data.domProps) || !t(r.data.domProps)) {
            var i, o, a = r.elm,
                s = n.data.domProps || {},
                c = r.data.domProps || {};
            e(c.__ob__) && (c = r.data.domProps = y({}, c));
            for (i in s) t(c[i]) && (a[i] = "");
            for (i in c)
                if (o = c[i], "textContent" !== i && "innerHTML" !== i || (r.children && (r.children.length = 0), o !== s[i]))
                    if ("value" === i) {
                        a._value = o;
                        var u = t(o) ? "" : String(o);
                        An(a, r, u) && (a.value = u)
                    } else a[i] = o
        }
    }

    function An(t, e, n) {
        return !t.composing && ("option" === e.tag || kn(t, n) || On(t, n))
    }

    function kn(t, e) {
        return document.activeElement !== t && t.value !== e
    }

    function On(t, n) {
        var r = t.value,
            i = t._vModifiers;
        return e(i) && i.number ? l(r) !== l(n) : e(i) && i.trim ? r.trim() !== n.trim() : r !== n
    }

    function Sn(t) {
        var e = Tn(t.style);
        return t.staticStyle ? y(t.staticStyle, e) : e
    }

    function Tn(t) {
        return Array.isArray(t) ? g(t) : "string" == typeof t ? da(t) : t
    }

    function En(t, e) {
        var n, r = {};
        if (e)
            for (var i = t; i.componentInstance;)(i = i.componentInstance._vnode).data && (n = Sn(i.data)) && y(r, n);
        (n = Sn(t.data)) && y(r, n);
        for (var o = t; o = o.parent;) o.data && (n = Sn(o.data)) && y(r, n);
        return r
    }

    function jn(n, r) {
        var i = r.data,
            o = n.data;
        if (!(t(i.staticStyle) && t(i.style) && t(o.staticStyle) && t(o.style))) {
            var a, s, c = r.elm,
                u = o.staticStyle,
                l = o.normalizedStyle || o.style || {},
                f = u || l,
                p = Tn(r.data.style) || {};
            r.data.normalizedStyle = e(p.__ob__) ? y({}, p) : p;
            var d = En(r, !0);
            for (s in f) t(d[s]) && ma(c, s, "");
            for (s in d)(a = d[s]) !== f[s] && ma(c, s, null == a ? "" : a)
        }
    }

    function Nn(t, e) {
        if (e && (e = e.trim()))
            if (t.classList) e.indexOf(" ") > -1 ? e.split(/\s+/).forEach(function(e) {
                return t.classList.add(e)
            }) : t.classList.add(e);
            else {
                var n = " " + (t.getAttribute("class") || "") + " ";
                n.indexOf(" " + e + " ") < 0 && t.setAttribute("class", (n + e).trim())
            }
    }

    function Ln(t, e) {
        if (e && (e = e.trim()))
            if (t.classList) e.indexOf(" ") > -1 ? e.split(/\s+/).forEach(function(e) {
                return t.classList.remove(e)
            }) : t.classList.remove(e), t.classList.length || t.removeAttribute("class");
            else {
                for (var n = " " + (t.getAttribute("class") || "") + " ", r = " " + e + " "; n.indexOf(r) >= 0;) n = n.replace(r, " ");
                (n = n.trim()) ? t.setAttribute("class", n): t.removeAttribute("class")
            }
    }

    function In(t) {
        if (t) {
            if ("object" == typeof t) {
                var e = {};
                return !1 !== t.css && y(e, ba(t.name || "v")), y(e, t), e
            }
            return "string" == typeof t ? ba(t) : void 0
        }
    }

    function Mn(t) {
        Sa(function() {
            Sa(t)
        })
    }

    function Dn(t, e) {
        var n = t._transitionClasses || (t._transitionClasses = []);
        n.indexOf(e) < 0 && (n.push(e), Nn(t, e))
    }

    function Pn(t, e) {
        t._transitionClasses && p(t._transitionClasses, e), Ln(t, e)
    }

    function Fn(t, e, n) {
        var r = Rn(t, e),
            i = r.type,
            o = r.timeout,
            a = r.propCount;
        if (!i) return n();
        var s = i === Ca ? Aa : Oa,
            c = 0,
            u = function() {
                t.removeEventListener(s, l), n()
            },
            l = function(e) {
                e.target === t && ++c >= a && u()
            };
        setTimeout(function() {
            c < a && u()
        }, o + 1), t.addEventListener(s, l)
    }

    function Rn(t, e) {
        var n, r = window.getComputedStyle(t),
            i = r[xa + "Delay"].split(", "),
            o = r[xa + "Duration"].split(", "),
            a = Hn(i, o),
            s = r[ka + "Delay"].split(", "),
            c = r[ka + "Duration"].split(", "),
            u = Hn(s, c),
            l = 0,
            f = 0;
        return e === Ca ? a > 0 && (n = Ca, l = a, f = o.length) : e === wa ? u > 0 && (n = wa, l = u, f = c.length) : f = (n = (l = Math.max(a, u)) > 0 ? a > u ? Ca : wa : null) ? n === Ca ? o.length : c.length : 0, {
            type: n,
            timeout: l,
            propCount: f,
            hasTransform: n === Ca && Ta.test(r[xa + "Property"])
        }
    }

    function Hn(t, e) {
        for (; t.length < e.length;) t = t.concat(t);
        return Math.max.apply(null, e.map(function(e, n) {
            return Bn(e) + Bn(t[n])
        }))
    }

    function Bn(t) {
        return 1e3 * Number(t.slice(0, -1))
    }

    function Un(n, r) {
        var i = n.elm;
        e(i._leaveCb) && (i._leaveCb.cancelled = !0, i._leaveCb());
        var a = In(n.data.transition);
        if (!t(a) && !e(i._enterCb) && 1 === i.nodeType) {
            for (var s = a.css, c = a.type, u = a.enterClass, f = a.enterToClass, p = a.enterActiveClass, d = a.appearClass, v = a.appearToClass, h = a.appearActiveClass, m = a.beforeEnter, y = a.enter, g = a.afterEnter, _ = a.enterCancelled, b = a.beforeAppear, $ = a.appear, w = a.afterAppear, x = a.appearCancelled, A = a.duration, k = lo, O = lo.$vnode; O && O.parent;) k = (O = O.parent).context;
            var S = !k._isMounted || !n.isRootInsert;
            if (!S || $ || "" === $) {
                var T = S && d ? d : u,
                    E = S && h ? h : p,
                    j = S && v ? v : f,
                    N = S ? b || m : m,
                    L = S && "function" == typeof $ ? $ : y,
                    I = S ? w || g : g,
                    M = S ? x || _ : _,
                    D = l(o(A) ? A.enter : A),
                    P = !1 !== s && !Mi,
                    F = Kn(L),
                    R = i._enterCb = C(function() {
                        P && (Pn(i, j), Pn(i, E)), R.cancelled ? (P && Pn(i, T), M && M(i)) : I && I(i), i._enterCb = null
                    });
                n.data.show || et(n.data.hook || (n.data.hook = {}), "insert", function() {
                    var t = i.parentNode,
                        e = t && t._pending && t._pending[n.key];
                    e && e.tag === n.tag && e.elm._leaveCb && e.elm._leaveCb(), L && L(i, R)
                }), N && N(i), P && (Dn(i, T), Dn(i, E), Mn(function() {
                    Dn(i, j), Pn(i, T), R.cancelled || F || (zn(D) ? setTimeout(R, D) : Fn(i, c, R))
                })), n.data.show && (r && r(), L && L(i, R)), P || F || R()
            }
        }
    }

    function Vn(n, r) {
        function i() {
            x.cancelled || (n.data.show || ((a.parentNode._pending || (a.parentNode._pending = {}))[n.key] = n), v && v(a), b && (Dn(a, f), Dn(a, d), Mn(function() {
                Dn(a, p), Pn(a, f), x.cancelled || $ || (zn(w) ? setTimeout(x, w) : Fn(a, u, x))
            })), h && h(a, x), b || $ || x())
        }
        var a = n.elm;
        e(a._enterCb) && (a._enterCb.cancelled = !0, a._enterCb());
        var s = In(n.data.transition);
        if (t(s)) return r();
        if (!e(a._leaveCb) && 1 === a.nodeType) {
            var c = s.css,
                u = s.type,
                f = s.leaveClass,
                p = s.leaveToClass,
                d = s.leaveActiveClass,
                v = s.beforeLeave,
                h = s.leave,
                m = s.afterLeave,
                y = s.leaveCancelled,
                g = s.delayLeave,
                _ = s.duration,
                b = !1 !== c && !Mi,
                $ = Kn(h),
                w = l(o(_) ? _.leave : _),
                x = a._leaveCb = C(function() {
                    a.parentNode && a.parentNode._pending && (a.parentNode._pending[n.key] = null), b && (Pn(a, p), Pn(a, d)), x.cancelled ? (b && Pn(a, f), y && y(a)) : (r(), m && m(a)), a._leaveCb = null
                });
            g ? g(i) : i()
        }
    }

    function zn(t) {
        return "number" == typeof t && !isNaN(t)
    }

    function Kn(n) {
        if (t(n)) return !1;
        var r = n.fns;
        return e(r) ? Kn(Array.isArray(r) ? r[0] : r) : (n._length || n.length) > 1
    }

    function Jn(t, e) {
        !0 !== e.data.show && Un(e)
    }

    function qn(t, e, n) {
        var r = e.value,
            i = t.multiple;
        if (!i || Array.isArray(r)) {
            for (var o, a, s = 0, c = t.options.length; s < c; s++)
                if (a = t.options[s], i) o = $(r, Gn(a)) > -1, a.selected !== o && (a.selected = o);
                else if (b(Gn(a), r)) return void(t.selectedIndex !== s && (t.selectedIndex = s));
            i || (t.selectedIndex = -1)
        }
    }

    function Wn(t, e) {
        for (var n = 0, r = e.length; n < r; n++)
            if (b(Gn(e[n]), t)) return !1;
        return !0
    }

    function Gn(t) {
        return "_value" in t ? t._value : t.value
    }

    function Zn(t) {
        t.target.composing = !0
    }

    function Yn(t) {
        t.target.composing && (t.target.composing = !1, Qn(t.target, "input"))
    }

    function Qn(t, e) {
        var n = document.createEvent("HTMLEvents");
        n.initEvent(e, !0, !0), t.dispatchEvent(n)
    }

    function Xn(t) {
        return !t.componentInstance || t.data && t.data.transition ? t : Xn(t.componentInstance._vnode)
    }

    function tr(t) {
        var e = t && t.componentOptions;
        return e && e.Ctor.options.abstract ? tr(ft(e.children)) : t
    }

    function er(t) {
        var e = {},
            n = t.$options;
        for (var r in n.propsData) e[r] = t[r];
        var i = n._parentListeners;
        for (var o in i) e[gi(o)] = i[o];
        return e
    }

    function nr(t, e) {
        if (/\d-keep-alive$/.test(e.tag)) return t("keep-alive", {
            props: e.componentOptions.propsData
        })
    }

    function rr(t) {
        for (; t = t.parent;)
            if (t.data.transition) return !0
    }

    function ir(t, e) {
        return e.key === t.key && e.tag === t.tag
    }

    function or(t) {
        return t.isComment && t.asyncFactory
    }

    function ar(t) {
        t.elm._moveCb && t.elm._moveCb(), t.elm._enterCb && t.elm._enterCb()
    }

    function sr(t) {
        t.data.newPos = t.elm.getBoundingClientRect()
    }

    function cr(t) {
        var e = t.data.pos,
            n = t.data.newPos,
            r = e.left - n.left,
            i = e.top - n.top;
        if (r || i) {
            t.data.moved = !0;
            var o = t.elm.style;
            o.transform = o.WebkitTransform = "translate(" + r + "px," + i + "px)", o.transitionDuration = "0s"
        }
    }

    function ur(t, e) {
        var n = e ? Ba(e) : Ra;
        if (n.test(t)) {
            for (var r, i, o = [], a = n.lastIndex = 0; r = n.exec(t);) {
                (i = r.index) > a && o.push(JSON.stringify(t.slice(a, i)));
                var s = Ye(r[1].trim());
                o.push("_s(" + s + ")"), a = i + r[0].length
            }
            return a < t.length && o.push(JSON.stringify(t.slice(a))), o.join("+")
        }
    }

    function lr(t, e) {
        var n = e ? Cs : $s;
        return t.replace(n, function(t) {
            return bs[t]
        })
    }

    function fr(t, e) {
        function n(e) {
            l += e, t = t.substring(e)
        }

        function r(t, n, r) {
            var i, s;
            if (null == n && (n = l), null == r && (r = l), t && (s = t.toLowerCase()), t)
                for (i = a.length - 1; i >= 0 && a[i].lowerCasedTag !== s; i--);
            else i = 0;
            if (i >= 0) {
                for (var c = a.length - 1; c >= i; c--) e.end && e.end(a[c].tag, n, r);
                a.length = i, o = i && a[i - 1].tag
            } else "br" === s ? e.start && e.start(t, [], !0, n, r) : "p" === s && (e.start && e.start(t, [], !1, n, r), e.end && e.end(t, n, r))
        }
        for (var i, o, a = [], s = e.expectHTML, c = e.isUnaryTag || Ci, u = e.canBeLeftOpenTag || Ci, l = 0; t;) {
            if (i = t, o && gs(o)) {
                var f = 0,
                    p = o.toLowerCase(),
                    d = _s[p] || (_s[p] = new RegExp("([\\s\\S]*?)(</" + p + "[^>]*>)", "i")),
                    v = t.replace(d, function(t, n, r) {
                        return f = r.length, gs(p) || "noscript" === p || (n = n.replace(/<!--([\s\S]*?)-->/g, "$1").replace(/<!\[CDATA\[([\s\S]*?)]]>/g, "$1")), xs(p, n) && (n = n.slice(1)), e.chars && e.chars(n), ""
                    });
                l += t.length - v.length, t = v, r(p, l - f, l)
            } else {
                xs(o, t) && n(1);
                var h = t.indexOf("<");
                if (0 === h) {
                    if (os.test(t)) {
                        var m = t.indexOf("--\x3e");
                        if (m >= 0) {
                            e.shouldKeepComment && e.comment(t.substring(4, m)), n(m + 3);
                            continue
                        }
                    }
                    if (as.test(t)) {
                        var y = t.indexOf("]>");
                        if (y >= 0) {
                            n(y + 2);
                            continue
                        }
                    }
                    var g = t.match(is);
                    if (g) {
                        n(g[0].length);
                        continue
                    }
                    var _ = t.match(rs);
                    if (_) {
                        var b = l;
                        n(_[0].length), r(_[1], b, l);
                        continue
                    }
                    var $ = function() {
                        var e = t.match(es);
                        if (e) {
                            var r = {
                                tagName: e[1],
                                attrs: [],
                                start: l
                            };
                            n(e[0].length);
                            for (var i, o; !(i = t.match(ns)) && (o = t.match(Qa));) n(o[0].length), r.attrs.push(o);
                            if (i) return r.unarySlash = i[1], n(i[0].length), r.end = l, r
                        }
                    }();
                    if ($) {
                        ! function(t) {
                            var n = t.tagName,
                                i = t.unarySlash;
                            s && ("p" === o && Ja(n) && r(o), u(n) && o === n && r(n));
                            for (var l = c(n) || !!i, f = t.attrs.length, p = new Array(f), d = 0; d < f; d++) {
                                var v = t.attrs[d];
                                ss && -1 === v[0].indexOf('""') && ("" === v[3] && delete v[3], "" === v[4] && delete v[4], "" === v[5] && delete v[5]);
                                var h = v[3] || v[4] || v[5] || "";
                                p[d] = {
                                    name: v[1],
                                    value: lr(h, e.shouldDecodeNewlines)
                                }
                            }
                            l || (a.push({
                                tag: n,
                                lowerCasedTag: n.toLowerCase(),
                                attrs: p
                            }), o = n), e.start && e.start(n, p, l, t.start, t.end)
                        }($);
                        continue
                    }
                }
                var C = void 0,
                    w = void 0,
                    x = void 0;
                if (h >= 0) {
                    for (w = t.slice(h); !(rs.test(w) || es.test(w) || os.test(w) || as.test(w) || (x = w.indexOf("<", 1)) < 0);) h += x, w = t.slice(h);
                    C = t.substring(0, h), n(h)
                }
                h < 0 && (C = t, t = ""), e.chars && C && e.chars(C)
            }
            if (t === i) {
                e.chars && e.chars(t);
                break
            }
        }
        r()
    }

    function pr(t, e) {
        function n(t) {
            t.pre && (s = !1), ds(t.tag) && (c = !1)
        }
        cs = e.warn || Xe, ds = e.isPreTag || Ci, vs = e.mustUseProp || Ci, hs = e.getTagNamespace || Ci, ls = tn(e.modules, "transformNode"), fs = tn(e.modules, "preTransformNode"), ps = tn(e.modules, "postTransformNode"), us = e.delimiters;
        var r, i, o = [],
            a = !1 !== e.preserveWhitespace,
            s = !1,
            c = !1;
        return fr(t, {
            warn: cs,
            expectHTML: e.expectHTML,
            isUnaryTag: e.isUnaryTag,
            canBeLeftOpenTag: e.canBeLeftOpenTag,
            shouldDecodeNewlines: e.shouldDecodeNewlines,
            shouldKeepComment: e.comments,
            start: function(t, a, u) {
                function l(t) {}
                var f = i && i.ns || hs(t);
                Ii && "svg" === f && (a = jr(a));
                var p = {
                    type: 1,
                    tag: t,
                    attrsList: a,
                    attrsMap: Sr(a),
                    parent: i,
                    children: []
                };
                f && (p.ns = f), Er(p) && !Ki() && (p.forbidden = !0);
                for (var d = 0; d < fs.length; d++) fs[d](p, e);
                if (s || (dr(p), p.pre && (s = !0)), ds(p.tag) && (c = !0), s) vr(p);
                else {
                    yr(p), gr(p), Cr(p), hr(p), p.plain = !p.key && !a.length, mr(p), wr(p), xr(p);
                    for (var v = 0; v < ls.length; v++) ls[v](p, e);
                    Ar(p)
                }
                if (r ? o.length || r.if && (p.elseif || p.else) && (l(), $r(r, {
                        exp: p.elseif,
                        block: p
                    })) : (r = p, l()), i && !p.forbidden)
                    if (p.elseif || p.else) _r(p, i);
                    else if (p.slotScope) {
                    i.plain = !1;
                    var h = p.slotTarget || '"default"';
                    (i.scopedSlots || (i.scopedSlots = {}))[h] = p
                } else i.children.push(p), p.parent = i;
                u ? n(p) : (i = p, o.push(p));
                for (var m = 0; m < ps.length; m++) ps[m](p, e)
            },
            end: function() {
                var t = o[o.length - 1],
                    e = t.children[t.children.length - 1];
                e && 3 === e.type && " " === e.text && !c && t.children.pop(), o.length -= 1, i = o[o.length - 1], n(t)
            },
            chars: function(t) {
                if (i && (!Ii || "textarea" !== i.tag || i.attrsMap.placeholder !== t)) {
                    var e = i.children;
                    if (t = c || t.trim() ? Tr(i) ? t : Ns(t) : a && e.length ? " " : "") {
                        var n;
                        !s && " " !== t && (n = ur(t, us)) ? e.push({
                            type: 2,
                            expression: n,
                            text: t
                        }) : " " === t && e.length && " " === e[e.length - 1].text || e.push({
                            type: 3,
                            text: t
                        })
                    }
                }
            },
            comment: function(t) {
                i.children.push({
                    type: 3,
                    text: t,
                    isComment: !0
                })
            }
        }), r
    }

    function dr(t) {
        null != sn(t, "v-pre") && (t.pre = !0)
    }

    function vr(t) {
        var e = t.attrsList.length;
        if (e)
            for (var n = t.attrs = new Array(e), r = 0; r < e; r++) n[r] = {
                name: t.attrsList[r].name,
                value: JSON.stringify(t.attrsList[r].value)
            };
        else t.pre || (t.plain = !0)
    }

    function hr(t) {
        var e = an(t, "key");
        e && (t.key = e)
    }

    function mr(t) {
        var e = an(t, "ref");
        e && (t.ref = e, t.refInFor = kr(t))
    }

    function yr(t) {
        var e;
        if (e = sn(t, "v-for")) {
            var n = e.match(Os);
            if (!n) return;
            t.for = n[2].trim();
            var r = n[1].trim(),
                i = r.match(Ss);
            i ? (t.alias = i[1].trim(), t.iterator1 = i[2].trim(), i[3] && (t.iterator2 = i[3].trim())) : t.alias = r
        }
    }

    function gr(t) {
        var e = sn(t, "v-if");
        if (e) t.if = e, $r(t, {
            exp: e,
            block: t
        });
        else {
            null != sn(t, "v-else") && (t.else = !0);
            var n = sn(t, "v-else-if");
            n && (t.elseif = n)
        }
    }

    function _r(t, e) {
        var n = br(e.children);
        n && n.if && $r(n, {
            exp: t.elseif,
            block: t
        })
    }

    function br(t) {
        for (var e = t.length; e--;) {
            if (1 === t[e].type) return t[e];
            t.pop()
        }
    }

    function $r(t, e) {
        t.ifConditions || (t.ifConditions = []), t.ifConditions.push(e)
    }

    function Cr(t) {
        null != sn(t, "v-once") && (t.once = !0)
    }

    function wr(t) {
        if ("slot" === t.tag) t.slotName = an(t, "name");
        else {
            var e = an(t, "slot");
            e && (t.slotTarget = '""' === e ? '"default"' : e), "template" === t.tag && (t.slotScope = sn(t, "scope"))
        }
    }

    function xr(t) {
        var e;
        (e = an(t, "is")) && (t.component = e), null != sn(t, "inline-template") && (t.inlineTemplate = !0)
    }

    function Ar(t) {
        var e, n, r, i, o, a, s, c = t.attrsList;
        for (e = 0, n = c.length; e < n; e++)
            if (r = i = c[e].name, o = c[e].value, ks.test(r))
                if (t.hasBindings = !0, (a = Or(r)) && (r = r.replace(js, "")), Es.test(r)) r = r.replace(Es, ""), o = Ye(o), s = !1, a && (a.prop && (s = !0, "innerHtml" === (r = gi(r)) && (r = "innerHTML")), a.camel && (r = gi(r)), a.sync && on(t, "update:" + gi(r), un(o, "$event"))), t.component || !s && !vs(t.tag, t.attrsMap.type, r) ? nn(t, r, o) : en(t, r, o);
                else if (As.test(r)) on(t, r = r.replace(As, ""), o, a, !1, cs);
        else {
            var u = (r = r.replace(ks, "")).match(Ts),
                l = u && u[1];
            l && (r = r.slice(0, -(l.length + 1))), rn(t, r, i, o, l, a)
        } else nn(t, r, JSON.stringify(o))
    }

    function kr(t) {
        for (var e = t; e;) {
            if (void 0 !== e.for) return !0;
            e = e.parent
        }
        return !1
    }

    function Or(t) {
        var e = t.match(js);
        if (e) {
            var n = {};
            return e.forEach(function(t) {
                n[t.slice(1)] = !0
            }), n
        }
    }

    function Sr(t) {
        for (var e = {}, n = 0, r = t.length; n < r; n++) e[t[n].name] = t[n].value;
        return e
    }

    function Tr(t) {
        return "script" === t.tag || "style" === t.tag
    }

    function Er(t) {
        return "style" === t.tag || "script" === t.tag && (!t.attrsMap.type || "text/javascript" === t.attrsMap.type)
    }

    function jr(t) {
        for (var e = [], n = 0; n < t.length; n++) {
            var r = t[n];
            Ls.test(r.name) || (r.name = r.name.replace(Is, ""), e.push(r))
        }
        return e
    }

    function Nr(t, e) {
        t && (ms = Ms(e.staticKeys || ""), ys = e.isReservedTag || Ci, Lr(t), Ir(t, !1))
    }

    function Lr(t) {
        if (t.static = Mr(t), 1 === t.type) {
            if (!ys(t.tag) && "slot" !== t.tag && null == t.attrsMap["inline-template"]) return;
            for (var e = 0, n = t.children.length; e < n; e++) {
                var r = t.children[e];
                Lr(r), r.static || (t.static = !1)
            }
            if (t.ifConditions)
                for (var i = 1, o = t.ifConditions.length; i < o; i++) {
                    var a = t.ifConditions[i].block;
                    Lr(a), a.static || (t.static = !1)
                }
        }
    }

    function Ir(t, e) {
        if (1 === t.type) {
            if ((t.static || t.once) && (t.staticInFor = e), t.static && t.children.length && (1 !== t.children.length || 3 !== t.children[0].type)) return void(t.staticRoot = !0);
            if (t.staticRoot = !1, t.children)
                for (var n = 0, r = t.children.length; n < r; n++) Ir(t.children[n], e || !!t.for);
            if (t.ifConditions)
                for (var i = 1, o = t.ifConditions.length; i < o; i++) Ir(t.ifConditions[i].block, e)
        }
    }

    function Mr(t) {
        return 2 !== t.type && (3 === t.type || !(!t.pre && (t.hasBindings || t.if || t.for || vi(t.tag) || !ys(t.tag) || Dr(t) || !Object.keys(t).every(ms))))
    }

    function Dr(t) {
        for (; t.parent;) {
            if ("template" !== (t = t.parent).tag) return !1;
            if (t.for) return !0
        }
        return !1
    }

    function Pr(t, e, n) {
        var r = e ? "nativeOn:{" : "on:{";
        for (var i in t) {
            var o = t[i];
            r += '"' + i + '":' + Fr(i, o) + ","
        }
        return r.slice(0, -1) + "}"
    }

    function Fr(t, e) {
        if (!e) return "function(){}";
        if (Array.isArray(e)) return "[" + e.map(function(e) {
            return Fr(t, e)
        }).join(",") + "]";
        var n = Ps.test(e.value),
            r = Ds.test(e.value);
        if (e.modifiers) {
            var i = "",
                o = "",
                a = [];
            for (var s in e.modifiers) Hs[s] ? (o += Hs[s], Fs[s] && a.push(s)) : a.push(s);
            return a.length && (i += Rr(a)), o && (i += o), "function($event){" + i + (n ? e.value + "($event)" : r ? "(" + e.value + ")($event)" : e.value) + "}"
        }
        return n || r ? e.value : "function($event){" + e.value + "}"
    }

    function Rr(t) {
        return "if(!('button' in $event)&&" + t.map(Hr).join("&&") + ")return null;"
    }

    function Hr(t) {
        var e = parseInt(t, 10);
        if (e) return "$event.keyCode!==" + e;
        var n = Fs[t];
        return "_k($event.keyCode," + JSON.stringify(t) + (n ? "," + JSON.stringify(n) : "") + ")"
    }

    function Br(t, e) {
        var n = new Us(e);
        return {
            render: "with(this){return " + (t ? Ur(t, n) : '_c("div")') + "}",
            staticRenderFns: n.staticRenderFns
        }
    }

    function Ur(t, e) {
        if (t.staticRoot && !t.staticProcessed) return Vr(t, e);
        if (t.once && !t.onceProcessed) return zr(t, e);
        if (t.for && !t.forProcessed) return qr(t, e);
        if (t.if && !t.ifProcessed) return Kr(t, e);
        if ("template" !== t.tag || t.slotTarget) {
            if ("slot" === t.tag) return ai(t, e);
            var n;
            if (t.component) n = si(t.component, t, e);
            else {
                var r = t.plain ? void 0 : Wr(t, e),
                    i = t.inlineTemplate ? null : ti(t, e, !0);
                n = "_c('" + t.tag + "'" + (r ? "," + r : "") + (i ? "," + i : "") + ")"
            }
            for (var o = 0; o < e.transforms.length; o++) n = e.transforms[o](t, n);
            return n
        }
        return ti(t, e) || "void 0"
    }

    function Vr(t, e) {
        return t.staticProcessed = !0, e.staticRenderFns.push("with(this){return " + Ur(t, e) + "}"), "_m(" + (e.staticRenderFns.length - 1) + (t.staticInFor ? ",true" : "") + ")"
    }

    function zr(t, e) {
        if (t.onceProcessed = !0, t.if && !t.ifProcessed) return Kr(t, e);
        if (t.staticInFor) {
            for (var n = "", r = t.parent; r;) {
                if (r.for) {
                    n = r.key;
                    break
                }
                r = r.parent
            }
            return n ? "_o(" + Ur(t, e) + "," + e.onceId++ + (n ? "," + n : "") + ")" : Ur(t, e)
        }
        return Vr(t, e)
    }

    function Kr(t, e, n, r) {
        return t.ifProcessed = !0, Jr(t.ifConditions.slice(), e, n, r)
    }

    function Jr(t, e, n, r) {
        function i(t) {
            return n ? n(t, e) : t.once ? zr(t, e) : Ur(t, e)
        }
        if (!t.length) return r || "_e()";
        var o = t.shift();
        return o.exp ? "(" + o.exp + ")?" + i(o.block) + ":" + Jr(t, e, n, r) : "" + i(o.block)
    }

    function qr(t, e, n, r) {
        var i = t.for,
            o = t.alias,
            a = t.iterator1 ? "," + t.iterator1 : "",
            s = t.iterator2 ? "," + t.iterator2 : "";
        return t.forProcessed = !0, (r || "_l") + "((" + i + "),function(" + o + a + s + "){return " + (n || Ur)(t, e) + "})"
    }

    function Wr(t, e) {
        var n = "{",
            r = Gr(t, e);
        r && (n += r + ","), t.key && (n += "key:" + t.key + ","), t.ref && (n += "ref:" + t.ref + ","), t.refInFor && (n += "refInFor:true,"), t.pre && (n += "pre:true,"), t.component && (n += 'tag:"' + t.tag + '",');
        for (var i = 0; i < e.dataGenFns.length; i++) n += e.dataGenFns[i](t);
        if (t.attrs && (n += "attrs:{" + ci(t.attrs) + "},"), t.props && (n += "domProps:{" + ci(t.props) + "},"), t.events && (n += Pr(t.events, !1, e.warn) + ","), t.nativeEvents && (n += Pr(t.nativeEvents, !0, e.warn) + ","), t.slotTarget && (n += "slot:" + t.slotTarget + ","), t.scopedSlots && (n += Yr(t.scopedSlots, e) + ","), t.model && (n += "model:{value:" + t.model.value + ",callback:" + t.model.callback + ",expression:" + t.model.expression + "},"), t.inlineTemplate) {
            var o = Zr(t, e);
            o && (n += o + ",")
        }
        return n = n.replace(/,$/, "") + "}", t.wrapData && (n = t.wrapData(n)), t.wrapListeners && (n = t.wrapListeners(n)), n
    }

    function Gr(t, e) {
        var n = t.directives;
        if (n) {
            var r, i, o, a, s = "directives:[",
                c = !1;
            for (r = 0, i = n.length; r < i; r++) {
                o = n[r], a = !0;
                var u = e.directives[o.name];
                u && (a = !!u(t, o, e.warn)), a && (c = !0, s += '{name:"' + o.name + '",rawName:"' + o.rawName + '"' + (o.value ? ",value:(" + o.value + "),expression:" + JSON.stringify(o.value) : "") + (o.arg ? ',arg:"' + o.arg + '"' : "") + (o.modifiers ? ",modifiers:" + JSON.stringify(o.modifiers) : "") + "},")
            }
            return c ? s.slice(0, -1) + "]" : void 0
        }
    }

    function Zr(t, e) {
        var n = t.children[0];
        if (1 === n.type) {
            var r = Br(n, e.options);
            return "inlineTemplate:{render:function(){" + r.render + "},staticRenderFns:[" + r.staticRenderFns.map(function(t) {
                return "function(){" + t + "}"
            }).join(",") + "]}"
        }
    }

    function Yr(t, e) {
        return "scopedSlots:_u([" + Object.keys(t).map(function(n) {
            return Qr(n, t[n], e)
        }).join(",") + "])"
    }

    function Qr(t, e, n) {
        return e.for && !e.forProcessed ? Xr(t, e, n) : "{key:" + t + ",fn:function(" + String(e.attrsMap.scope) + "){return " + ("template" === e.tag ? ti(e, n) || "void 0" : Ur(e, n)) + "}}"
    }

    function Xr(t, e, n) {
        var r = e.for,
            i = e.alias,
            o = e.iterator1 ? "," + e.iterator1 : "",
            a = e.iterator2 ? "," + e.iterator2 : "";
        return e.forProcessed = !0, "_l((" + r + "),function(" + i + o + a + "){return " + Qr(t, e, n) + "})"
    }

    function ti(t, e, n, r, i) {
        var o = t.children;
        if (o.length) {
            var a = o[0];
            if (1 === o.length && a.for && "template" !== a.tag && "slot" !== a.tag) return (r || Ur)(a, e);
            var s = n ? ei(o, e.maybeComponent) : 0,
                c = i || ri;
            return "[" + o.map(function(t) {
                return c(t, e)
            }).join(",") + "]" + (s ? "," + s : "")
        }
    }

    function ei(t, e) {
        for (var n = 0, r = 0; r < t.length; r++) {
            var i = t[r];
            if (1 === i.type) {
                if (ni(i) || i.ifConditions && i.ifConditions.some(function(t) {
                        return ni(t.block)
                    })) {
                    n = 2;
                    break
                }(e(i) || i.ifConditions && i.ifConditions.some(function(t) {
                    return e(t.block)
                })) && (n = 1)
            }
        }
        return n
    }

    function ni(t) {
        return void 0 !== t.for || "template" === t.tag || "slot" === t.tag
    }

    function ri(t, e) {
        return 1 === t.type ? Ur(t, e) : 3 === t.type && t.isComment ? oi(t) : ii(t)
    }

    function ii(t) {
        return "_v(" + (2 === t.type ? t.expression : ui(JSON.stringify(t.text))) + ")"
    }

    function oi(t) {
        return "_e('" + t.text + "')"
    }

    function ai(t, e) {
        var n = t.slotName || '"default"',
            r = ti(t, e),
            i = "_t(" + n + (r ? "," + r : ""),
            o = t.attrs && "{" + t.attrs.map(function(t) {
                return gi(t.name) + ":" + t.value
            }).join(",") + "}",
            a = t.attrsMap["v-bind"];
        return !o && !a || r || (i += ",null"), o && (i += "," + o), a && (i += (o ? "" : ",null") + "," + a), i + ")"
    }

    function si(t, e, n) {
        var r = e.inlineTemplate ? null : ti(e, n, !0);
        return "_c(" + t + "," + Wr(e, n) + (r ? "," + r : "") + ")"
    }

    function ci(t) {
        for (var e = "", n = 0; n < t.length; n++) {
            var r = t[n];
            e += '"' + r.name + '":' + ui(r.value) + ","
        }
        return e.slice(0, -1)
    }

    function ui(t) {
        return t.replace(/\u2028/g, "\\u2028").replace(/\u2029/g, "\\u2029")
    }

    function li(t, e) {
        try {
            return new Function(t)
        } catch (n) {
            return e.push({
                err: n,
                code: t
            }), _
        }
    }

    function fi(t) {
        var e = Object.create(null);
        return function(n, r, i) {
            var o = (r = r || {}).delimiters ? String(r.delimiters) + n : n;
            if (e[o]) return e[o];
            var a = t(n, r),
                s = {},
                c = [];
            return s.render = li(a.render, c), s.staticRenderFns = a.staticRenderFns.map(function(t) {
                return li(t, c)
            }), e[o] = s
        }
    }

    function pi(t) {
        if (t.outerHTML) return t.outerHTML;
        var e = document.createElement("div");
        return e.appendChild(t.cloneNode(!0)), e.innerHTML
    }
    var di = Object.prototype.toString,
        vi = f("slot,component", !0),
        hi = f("key,ref,slot,is"),
        mi = Object.prototype.hasOwnProperty,
        yi = /-(\w)/g,
        gi = v(function(t) {
            return t.replace(yi, function(t, e) {
                return e ? e.toUpperCase() : ""
            })
        }),
        _i = v(function(t) {
            return t.charAt(0).toUpperCase() + t.slice(1)
        }),
        bi = /([^-])([A-Z])/g,
        $i = v(function(t) {
            return t.replace(bi, "$1-$2").replace(bi, "$1-$2").toLowerCase()
        }),
        Ci = function(t, e, n) {
            return !1
        },
        wi = function(t) {
            return t
        },
        xi = "data-server-rendered",
        Ai = ["component", "directive", "filter"],
        ki = ["beforeCreate", "created", "beforeMount", "mounted", "beforeUpdate", "updated", "beforeDestroy", "destroyed", "activated", "deactivated"],
        Oi = {
            optionMergeStrategies: Object.create(null),
            silent: !1,
            productionTip: !1,
            devtools: !1,
            performance: !1,
            errorHandler: null,
            warnHandler: null,
            ignoredElements: [],
            keyCodes: Object.create(null),
            isReservedTag: Ci,
            isReservedAttr: Ci,
            isUnknownElement: Ci,
            getTagNamespace: _,
            parsePlatformTagName: wi,
            mustUseProp: Ci,
            _lifecycleHooks: ki
        },
        Si = Object.freeze({}),
        Ti = /[^\w.$]/,
        Ei = _,
        ji = "__proto__" in {},
        Ni = "undefined" != typeof window,
        Li = Ni && window.navigator.userAgent.toLowerCase(),
        Ii = Li && /msie|trident/.test(Li),
        Mi = Li && Li.indexOf("msie 9.0") > 0,
        Di = Li && Li.indexOf("edge/") > 0,
        Pi = Li && Li.indexOf("android") > 0,
        Fi = Li && /iphone|ipad|ipod|ios/.test(Li),
        Ri = Li && /chrome\/\d+/.test(Li) && !Di,
        Hi = {}.watch,
        Bi = !1;
    if (Ni) try {
        var Ui = {};
        Object.defineProperty(Ui, "passive", {
            get: function() {
                Bi = !0
            }
        }), window.addEventListener("test-passive", null, Ui)
    } catch (t) {}
    var Vi, zi, Ki = function() {
            return void 0 === Vi && (Vi = !Ni && "undefined" != typeof global && "server" === global.process.env.VUE_ENV), Vi
        },
        Ji = Ni && window.__VUE_DEVTOOLS_GLOBAL_HOOK__,
        qi = "undefined" != typeof Symbol && O(Symbol) && "undefined" != typeof Reflect && O(Reflect.ownKeys),
        Wi = function() {
            function t() {
                r = !1;
                var t = n.slice(0);
                n.length = 0;
                for (var e = 0; e < t.length; e++) t[e]()
            }
            var e, n = [],
                r = !1;
            if ("undefined" != typeof Promise && O(Promise)) {
                var i = Promise.resolve(),
                    o = function(t) {
                        console.error(t)
                    };
                e = function() {
                    i.then(t).catch(o), Fi && setTimeout(_)
                }
            } else if ("undefined" == typeof MutationObserver || !O(MutationObserver) && "[object MutationObserverConstructor]" !== MutationObserver.toString()) e = function() {
                setTimeout(t, 0)
            };
            else {
                var a = 1,
                    s = new MutationObserver(t),
                    c = document.createTextNode(String(a));
                s.observe(c, {
                    characterData: !0
                }), e = function() {
                    a = (a + 1) % 2, c.data = String(a)
                }
            }
            return function(t, i) {
                var o;
                if (n.push(function() {
                        if (t) try {
                            t.call(i)
                        } catch (t) {
                            k(t, i, "nextTick")
                        } else o && o(i)
                    }), r || (r = !0, e()), !t && "undefined" != typeof Promise) return new Promise(function(t, e) {
                    o = t
                })
            }
        }();
    zi = "undefined" != typeof Set && O(Set) ? Set : function() {
        function t() {
            this.set = Object.create(null)
        }
        return t.prototype.has = function(t) {
            return !0 === this.set[t]
        }, t.prototype.add = function(t) {
            this.set[t] = !0
        }, t.prototype.clear = function() {
            this.set = Object.create(null)
        }, t
    }();
    var Gi = 0,
        Zi = function() {
            this.id = Gi++, this.subs = []
        };
    Zi.prototype.addSub = function(t) {
        this.subs.push(t)
    }, Zi.prototype.removeSub = function(t) {
        p(this.subs, t)
    }, Zi.prototype.depend = function() {
        Zi.target && Zi.target.addDep(this)
    }, Zi.prototype.notify = function() {
        for (var t = this.subs.slice(), e = 0, n = t.length; e < n; e++) t[e].update()
    }, Zi.target = null;
    var Yi = [],
        Qi = Array.prototype,
        Xi = Object.create(Qi);
    ["push", "pop", "shift", "unshift", "splice", "sort", "reverse"].forEach(function(t) {
        var e = Qi[t];
        x(Xi, t, function() {
            for (var n = [], r = arguments.length; r--;) n[r] = arguments[r];
            var i, o = e.apply(this, n),
                a = this.__ob__;
            switch (t) {
                case "push":
                case "unshift":
                    i = n;
                    break;
                case "splice":
                    i = n.slice(2)
            }
            return i && a.observeArray(i), a.dep.notify(), o
        })
    });
    var to = Object.getOwnPropertyNames(Xi),
        eo = {
            shouldConvert: !0
        },
        no = function(t) {
            this.value = t, this.dep = new Zi, this.vmCount = 0, x(t, "__ob__", this), Array.isArray(t) ? ((ji ? E : j)(t, Xi, to), this.observeArray(t)) : this.walk(t)
        };
    no.prototype.walk = function(t) {
        for (var e = Object.keys(t), n = 0; n < e.length; n++) L(t, e[n], t[e[n]])
    }, no.prototype.observeArray = function(t) {
        for (var e = 0, n = t.length; e < n; e++) N(t[e])
    };
    var ro = Oi.optionMergeStrategies;
    ro.data = function(t, e, n) {
        return n ? F(t, e, n) : e && "function" != typeof e ? t : F.call(this, t, e)
    }, ki.forEach(function(t) {
        ro[t] = R
    }), Ai.forEach(function(t) {
        ro[t + "s"] = H
    }), ro.watch = function(t, e) {
        if (t === Hi && (t = void 0), e === Hi && (e = void 0), !e) return Object.create(t || null);
        if (!t) return e;
        var n = {};
        y(n, t);
        for (var r in e) {
            var i = n[r],
                o = e[r];
            i && !Array.isArray(i) && (i = [i]), n[r] = i ? i.concat(o) : Array.isArray(o) ? o : [o]
        }
        return n
    }, ro.props = ro.methods = ro.inject = ro.computed = function(t, e) {
        if (!e) return Object.create(t || null);
        if (!t) return e;
        var n = Object.create(null);
        return y(n, t), y(n, e), n
    }, ro.provide = F;
    var io = function(t, e) {
            return void 0 === e ? t : e
        },
        oo = function(t, e, n, r, i, o, a, s) {
            this.tag = t, this.data = e, this.children = n, this.text = r, this.elm = i, this.ns = void 0, this.context = o, this.functionalContext = void 0, this.key = e && e.key, this.componentOptions = a, this.componentInstance = void 0, this.parent = void 0, this.raw = !1, this.isStatic = !1, this.isRootInsert = !0, this.isComment = !1, this.isCloned = !1, this.isOnce = !1, this.asyncFactory = s, this.asyncMeta = void 0, this.isAsyncPlaceholder = !1
        },
        ao = {
            child: {}
        };
    ao.child.get = function() {
        return this.componentInstance
    }, Object.defineProperties(oo.prototype, ao);
    var so, co = function(t) {
            void 0 === t && (t = "");
            var e = new oo;
            return e.text = t, e.isComment = !0, e
        },
        uo = v(function(t) {
            var e = "&" === t.charAt(0),
                n = "~" === (t = e ? t.slice(1) : t).charAt(0),
                r = "!" === (t = n ? t.slice(1) : t).charAt(0);
            return t = r ? t.slice(1) : t, {
                name: t,
                once: n,
                capture: r,
                passive: e
            }
        }),
        lo = null,
        fo = [],
        po = [],
        vo = {},
        ho = !1,
        mo = !1,
        yo = 0,
        go = 0,
        _o = function(t, e, n, r) {
            this.vm = t, t._watchers.push(this), r ? (this.deep = !!r.deep, this.user = !!r.user, this.lazy = !!r.lazy, this.sync = !!r.sync) : this.deep = this.user = this.lazy = this.sync = !1, this.cb = n, this.id = ++go, this.active = !0, this.dirty = this.lazy, this.deps = [], this.newDeps = [], this.depIds = new zi, this.newDepIds = new zi, this.expression = "", "function" == typeof e ? this.getter = e : (this.getter = A(e), this.getter || (this.getter = function() {})), this.value = this.lazy ? void 0 : this.get()
        };
    _o.prototype.get = function() {
        S(this);
        var t, e = this.vm;
        try {
            t = this.getter.call(e, e)
        } catch (t) {
            if (!this.user) throw t;
            k(t, e, 'getter for watcher "' + this.expression + '"')
        } finally {
            this.deep && Nt(t), T(), this.cleanupDeps()
        }
        return t
    }, _o.prototype.addDep = function(t) {
        var e = t.id;
        this.newDepIds.has(e) || (this.newDepIds.add(e), this.newDeps.push(t), this.depIds.has(e) || t.addSub(this))
    }, _o.prototype.cleanupDeps = function() {
        for (var t = this, e = this.deps.length; e--;) {
            var n = t.deps[e];
            t.newDepIds.has(n.id) || n.removeSub(t)
        }
        var r = this.depIds;
        this.depIds = this.newDepIds, this.newDepIds = r, this.newDepIds.clear(), r = this.deps, this.deps = this.newDeps, this.newDeps = r, this.newDeps.length = 0
    }, _o.prototype.update = function() {
        this.lazy ? this.dirty = !0 : this.sync ? this.run() : jt(this)
    }, _o.prototype.run = function() {
        if (this.active) {
            var t = this.get();
            if (t !== this.value || o(t) || this.deep) {
                var e = this.value;
                if (this.value = t, this.user) try {
                    this.cb.call(this.vm, t, e)
                } catch (t) {
                    k(t, this.vm, 'callback for watcher "' + this.expression + '"')
                } else this.cb.call(this.vm, t, e)
            }
        }
    }, _o.prototype.evaluate = function() {
        this.value = this.get(), this.dirty = !1
    }, _o.prototype.depend = function() {
        for (var t = this, e = this.deps.length; e--;) t.deps[e].depend()
    }, _o.prototype.teardown = function() {
        var t = this;
        if (this.active) {
            this.vm._isBeingDestroyed || p(this.vm._watchers, this);
            for (var e = this.deps.length; e--;) t.deps[e].removeSub(t);
            this.active = !1
        }
    };
    var bo = new zi,
        $o = {
            enumerable: !0,
            configurable: !0,
            get: _,
            set: _
        },
        Co = {
            lazy: !0
        },
        wo = {
            init: function(t, e, n, r) {
                if (!t.componentInstance || t.componentInstance._isDestroyed)(t.componentInstance = Yt(t, lo, n, r)).$mount(e ? t.elm : void 0, e);
                else if (t.data.keepAlive) {
                    var i = t;
                    wo.prepatch(i, i)
                }
            },
            prepatch: function(t, e) {
                var n = e.componentOptions;
                $t(e.componentInstance = t.componentInstance, n.propsData, n.listeners, e, n.children)
            },
            insert: function(t) {
                var e = t.context,
                    n = t.componentInstance;
                n._isMounted || (n._isMounted = !0, At(n, "mounted")), t.data.keepAlive && (e._isMounted ? Tt(n) : wt(n, !0))
            },
            destroy: function(t) {
                var e = t.componentInstance;
                e._isDestroyed || (t.data.keepAlive ? xt(e, !0) : e.$destroy())
            }
        },
        xo = Object.keys(wo),
        Ao = 1,
        ko = 2,
        Oo = 0;
    ! function(t) {
        t.prototype._init = function(t) {
            var e = this;
            e._uid = Oo++, e._isVue = !0, t && t._isComponent ? he(e, t) : e.$options = z(me(e.constructor), t || {}, e), e._renderProxy = e, e._self = e, _t(e), pt(e), ve(e), At(e, "beforeCreate"), Jt(e), Mt(e), Kt(e), At(e, "created"), e.$options.el && e.$mount(e.$options.el)
        }
    }(_e),
    function(t) {
        var e = {};
        e.get = function() {
            return this._data
        };
        var n = {};
        n.get = function() {
            return this._props
        }, Object.defineProperty(t.prototype, "$data", e), Object.defineProperty(t.prototype, "$props", n), t.prototype.$set = I, t.prototype.$delete = M, t.prototype.$watch = function(t, e, n) {
            var r = this;
            if (a(e)) return zt(r, t, e, n);
            (n = n || {}).user = !0;
            var i = new _o(r, t, e, n);
            return n.immediate && e.call(r, i.value),
                function() {
                    i.teardown()
                }
        }
    }(_e),
    function(t) {
        var e = /^hook:/;
        t.prototype.$on = function(t, n) {
            var r = this,
                i = this;
            if (Array.isArray(t))
                for (var o = 0, a = t.length; o < a; o++) r.$on(t[o], n);
            else(i._events[t] || (i._events[t] = [])).push(n), e.test(t) && (i._hasHookEvent = !0);
            return i
        }, t.prototype.$once = function(t, e) {
            function n() {
                r.$off(t, n), e.apply(r, arguments)
            }
            var r = this;
            return n.fn = e, r.$on(t, n), r
        }, t.prototype.$off = function(t, e) {
            var n = this,
                r = this;
            if (!arguments.length) return r._events = Object.create(null), r;
            if (Array.isArray(t)) {
                for (var i = 0, o = t.length; i < o; i++) n.$off(t[i], e);
                return r
            }
            var a = r._events[t];
            if (!a) return r;
            if (1 === arguments.length) return r._events[t] = null, r;
            for (var s, c = a.length; c--;)
                if ((s = a[c]) === e || s.fn === e) {
                    a.splice(c, 1);
                    break
                }
            return r
        }, t.prototype.$emit = function(t) {
            var e = this,
                n = e._events[t];
            if (n) {
                n = n.length > 1 ? m(n) : n;
                for (var r = m(arguments, 1), i = 0, o = n.length; i < o; i++) try {
                    n[i].apply(e, r)
                } catch (n) {
                    k(n, e, 'event handler for "' + t + '"')
                }
            }
            return e
        }
    }(_e),
    function(t) {
        t.prototype._update = function(t, e) {
            var n = this;
            n._isMounted && At(n, "beforeUpdate");
            var r = n.$el,
                i = n._vnode,
                o = lo;
            lo = n, n._vnode = t, i ? n.$el = n.__patch__(i, t) : (n.$el = n.__patch__(n.$el, t, e, !1, n.$options._parentElm, n.$options._refElm), n.$options._parentElm = n.$options._refElm = null), lo = o, r && (r.__vue__ = null), n.$el && (n.$el.__vue__ = n), n.$vnode && n.$parent && n.$vnode === n.$parent._vnode && (n.$parent.$el = n.$el)
        }, t.prototype.$forceUpdate = function() {
            var t = this;
            t._watcher && t._watcher.update()
        }, t.prototype.$destroy = function() {
            var t = this;
            if (!t._isBeingDestroyed) {
                At(t, "beforeDestroy"), t._isBeingDestroyed = !0;
                var e = t.$parent;
                !e || e._isBeingDestroyed || t.$options.abstract || p(e.$children, t), t._watcher && t._watcher.teardown();
                for (var n = t._watchers.length; n--;) t._watchers[n].teardown();
                t._data.__ob__ && t._data.__ob__.vmCount--, t._isDestroyed = !0, t.__patch__(t._vnode, null), At(t, "destroyed"), t.$off(), t.$el && (t.$el.__vue__ = null)
            }
        }
    }(_e),
    function(t) {
        t.prototype.$nextTick = function(t) {
            return Wi(t, this)
        }, t.prototype._render = function() {
            var t = this,
                e = t.$options,
                n = e.render,
                r = e.staticRenderFns,
                i = e._parentVnode;
            if (t._isMounted)
                for (var o in t.$slots) t.$slots[o] = Q(t.$slots[o]);
            t.$scopedSlots = i && i.data.scopedSlots || Si, r && !t._staticTrees && (t._staticTrees = []), t.$vnode = i;
            var a;
            try {
                a = n.call(t._renderProxy, t.$createElement)
            } catch (e) {
                k(e, t, "render function"), a = t._vnode
            }
            return a instanceof oo || (a = co()), a.parent = i, a
        }, t.prototype._o = le, t.prototype._n = l, t.prototype._s = u, t.prototype._l = ie, t.prototype._t = oe, t.prototype._q = b, t.prototype._i = $, t.prototype._m = ue, t.prototype._f = ae, t.prototype._k = se, t.prototype._b = ce, t.prototype._v = Z, t.prototype._e = co, t.prototype._u = gt, t.prototype._g = de
    }(_e);
    var So = [String, RegExp, Array],
        To = {
            KeepAlive: {
                name: "keep-alive",
                abstract: !0,
                props: {
                    include: So,
                    exclude: So
                },
                created: function() {
                    this.cache = Object.create(null)
                },
                destroyed: function() {
                    var t = this;
                    for (var e in t.cache) Te(t.cache[e])
                },
                watch: {
                    include: function(t) {
                        Se(this.cache, this._vnode, function(e) {
                            return Oe(t, e)
                        })
                    },
                    exclude: function(t) {
                        Se(this.cache, this._vnode, function(e) {
                            return !Oe(t, e)
                        })
                    }
                },
                render: function() {
                    var t = ft(this.$slots.default),
                        e = t && t.componentOptions;
                    if (e) {
                        var n = ke(e);
                        if (n && (this.include && !Oe(this.include, n) || this.exclude && Oe(this.exclude, n))) return t;
                        var r = null == t.key ? e.Ctor.cid + (e.tag ? "::" + e.tag : "") : t.key;
                        this.cache[r] ? t.componentInstance = this.cache[r].componentInstance : this.cache[r] = t, t.data.keepAlive = !0
                    }
                    return t
                }
            }
        };
    ! function(t) {
        var e = {};
        e.get = function() {
            return Oi
        }, Object.defineProperty(t, "config", e), t.util = {
            warn: Ei,
            extend: y,
            mergeOptions: z,
            defineReactive: L
        }, t.set = I, t.delete = M, t.nextTick = Wi, t.options = Object.create(null), Ai.forEach(function(e) {
            t.options[e + "s"] = Object.create(null)
        }), t.options._base = t, y(t.options.components, To), be(t), $e(t), Ce(t), Ae(t)
    }(_e), Object.defineProperty(_e.prototype, "$isServer", {
        get: Ki
    }), Object.defineProperty(_e.prototype, "$ssrContext", {
        get: function() {
            return this.$vnode && this.$vnode.ssrContext
        }
    }), _e.version = "2.4.0";
    var Eo, jo, No, Lo, Io, Mo, Do, Po, Fo, Ro = f("style,class"),
        Ho = f("input,textarea,option,select"),
        Bo = function(t, e, n) {
            return "value" === n && Ho(t) && "button" !== e || "selected" === n && "option" === t || "checked" === n && "input" === t || "muted" === n && "video" === t
        },
        Uo = f("contenteditable,draggable,spellcheck"),
        Vo = f("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible"),
        zo = "http://www.w3.org/1999/xlink",
        Ko = function(t) {
            return ":" === t.charAt(5) && "xlink" === t.slice(0, 5)
        },
        Jo = function(t) {
            return Ko(t) ? t.slice(6, t.length) : ""
        },
        qo = function(t) {
            return null == t || !1 === t
        },
        Wo = {
            svg: "http://www.w3.org/2000/svg",
            math: "http://www.w3.org/1998/Math/MathML"
        },
        Go = f("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),
        Zo = f("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view", !0),
        Yo = function(t) {
            return Go(t) || Zo(t)
        },
        Qo = Object.create(null),
        Xo = Object.freeze({
            createElement: function(t, e) {
                var n = document.createElement(t);
                return "select" !== t ? n : (e.data && e.data.attrs && void 0 !== e.data.attrs.multiple && n.setAttribute("multiple", "multiple"), n)
            },
            createElementNS: function(t, e) {
                return document.createElementNS(Wo[t], e)
            },
            createTextNode: function(t) {
                return document.createTextNode(t)
            },
            createComment: function(t) {
                return document.createComment(t)
            },
            insertBefore: function(t, e, n) {
                t.insertBefore(e, n)
            },
            removeChild: function(t, e) {
                t.removeChild(e)
            },
            appendChild: function(t, e) {
                t.appendChild(e)
            },
            parentNode: function(t) {
                return t.parentNode
            },
            nextSibling: function(t) {
                return t.nextSibling
            },
            tagName: function(t) {
                return t.tagName
            },
            setTextContent: function(t, e) {
                t.textContent = e
            },
            setAttribute: function(t, e, n) {
                t.setAttribute(e, n)
            }
        }),
        ta = {
            create: function(t, e) {
                Re(e)
            },
            update: function(t, e) {
                t.data.ref !== e.data.ref && (Re(t, !0), Re(e))
            },
            destroy: function(t) {
                Re(t, !0)
            }
        },
        ea = new oo("", {}, []),
        na = ["create", "activate", "update", "remove", "destroy"],
        ra = {
            create: Ve,
            update: Ve,
            destroy: function(t) {
                Ve(t, ea)
            }
        },
        ia = Object.create(null),
        oa = [ta, ra],
        aa = {
            create: We,
            update: We
        },
        sa = {
            create: Ze,
            update: Ze
        },
        ca = /[\w).+\-_$\]]/,
        ua = "__r",
        la = "__c",
        fa = {
            create: wn,
            update: wn
        },
        pa = {
            create: xn,
            update: xn
        },
        da = v(function(t) {
            var e = {},
                n = /;(?![^(]*\))/g,
                r = /:(.+)/;
            return t.split(n).forEach(function(t) {
                if (t) {
                    var n = t.split(r);
                    n.length > 1 && (e[n[0].trim()] = n[1].trim())
                }
            }), e
        }),
        va = /^--/,
        ha = /\s*!important$/,
        ma = function(t, e, n) {
            if (va.test(e)) t.style.setProperty(e, n);
            else if (ha.test(n)) t.style.setProperty(e, n.replace(ha, ""), "important");
            else {
                var r = ga(e);
                if (Array.isArray(n))
                    for (var i = 0, o = n.length; i < o; i++) t.style[r] = n[i];
                else t.style[r] = n
            }
        },
        ya = ["Webkit", "Moz", "ms"],
        ga = v(function(t) {
            if (Fo = Fo || document.createElement("div").style, "filter" !== (t = gi(t)) && t in Fo) return t;
            for (var e = t.charAt(0).toUpperCase() + t.slice(1), n = 0; n < ya.length; n++) {
                var r = ya[n] + e;
                if (r in Fo) return r
            }
        }),
        _a = {
            create: jn,
            update: jn
        },
        ba = v(function(t) {
            return {
                enterClass: t + "-enter",
                enterToClass: t + "-enter-to",
                enterActiveClass: t + "-enter-active",
                leaveClass: t + "-leave",
                leaveToClass: t + "-leave-to",
                leaveActiveClass: t + "-leave-active"
            }
        }),
        $a = Ni && !Mi,
        Ca = "transition",
        wa = "animation",
        xa = "transition",
        Aa = "transitionend",
        ka = "animation",
        Oa = "animationend";
    $a && (void 0 === window.ontransitionend && void 0 !== window.onwebkittransitionend && (xa = "WebkitTransition", Aa = "webkitTransitionEnd"), void 0 === window.onanimationend && void 0 !== window.onwebkitanimationend && (ka = "WebkitAnimation", Oa = "webkitAnimationEnd"));
    var Sa = Ni && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : setTimeout,
        Ta = /\b(transform|all)(,|$)/,
        Ea = function(r) {
            function o(t) {
                return new oo(E.tagName(t).toLowerCase(), {}, [], void 0, t)
            }

            function a(t, e) {
                function n() {
                    0 == --n.listeners && s(t)
                }
                return n.listeners = e, n
            }

            function s(t) {
                var n = E.parentNode(t);
                e(n) && E.removeChild(n, t)
            }

            function c(t, r, i, o, a) {
                if (t.isRootInsert = !a, !u(t, r, i, o)) {
                    var s = t.data,
                        c = t.children,
                        l = t.tag;
                    e(l) ? (t.elm = t.ns ? E.createElementNS(t.ns, l) : E.createElement(l, t), y(t), v(t, c, r), e(s) && m(t, r), d(i, t.elm, o)) : n(t.isComment) ? (t.elm = E.createComment(t.text), d(i, t.elm, o)) : (t.elm = E.createTextNode(t.text), d(i, t.elm, o))
                }
            }

            function u(t, r, i, o) {
                var a = t.data;
                if (e(a)) {
                    var s = e(t.componentInstance) && a.keepAlive;
                    if (e(a = a.hook) && e(a = a.init) && a(t, !1, i, o), e(t.componentInstance)) return l(t, r), n(s) && p(t, r, i, o), !0
                }
            }

            function l(t, n) {
                e(t.data.pendingInsert) && (n.push.apply(n, t.data.pendingInsert), t.data.pendingInsert = null), t.elm = t.componentInstance.$el, h(t) ? (m(t, n), y(t)) : (Re(t), n.push(t))
            }

            function p(t, n, r, i) {
                for (var o, a = t; a.componentInstance;)
                    if (a = a.componentInstance._vnode, e(o = a.data) && e(o = o.transition)) {
                        for (o = 0; o < S.activate.length; ++o) S.activate[o](ea, a);
                        n.push(a);
                        break
                    }
                d(r, t.elm, i)
            }

            function d(t, n, r) {
                e(t) && (e(r) ? r.parentNode === t && E.insertBefore(t, n, r) : E.appendChild(t, n))
            }

            function v(t, e, n) {
                if (Array.isArray(e))
                    for (var r = 0; r < e.length; ++r) c(e[r], n, t.elm, null, !0);
                else i(t.text) && E.appendChild(t.elm, E.createTextNode(t.text))
            }

            function h(t) {
                for (; t.componentInstance;) t = t.componentInstance._vnode;
                return e(t.tag)
            }

            function m(t, n) {
                for (var r = 0; r < S.create.length; ++r) S.create[r](ea, t);
                e(k = t.data.hook) && (e(k.create) && k.create(ea, t), e(k.insert) && n.push(t))
            }

            function y(t) {
                for (var n, r = t; r;) e(n = r.context) && e(n = n.$options._scopeId) && E.setAttribute(t.elm, n, ""), r = r.parent;
                e(n = lo) && n !== t.context && e(n = n.$options._scopeId) && E.setAttribute(t.elm, n, "")
            }

            function g(t, e, n, r, i, o) {
                for (; r <= i; ++r) c(n[r], o, t, e)
            }

            function _(t) {
                var n, r, i = t.data;
                if (e(i))
                    for (e(n = i.hook) && e(n = n.destroy) && n(t), n = 0; n < S.destroy.length; ++n) S.destroy[n](t);
                if (e(n = t.children))
                    for (r = 0; r < t.children.length; ++r) _(t.children[r])
            }

            function b(t, n, r, i) {
                for (; r <= i; ++r) {
                    var o = n[r];
                    e(o) && (e(o.tag) ? ($(o), _(o)) : s(o.elm))
                }
            }

            function $(t, n) {
                if (e(n) || e(t.data)) {
                    var r, i = S.remove.length + 1;
                    for (e(n) ? n.listeners += i : n = a(t.elm, i), e(r = t.componentInstance) && e(r = r._vnode) && e(r.data) && $(r, n), r = 0; r < S.remove.length; ++r) S.remove[r](t, n);
                    e(r = t.data.hook) && e(r = r.remove) ? r(t, n) : n()
                } else s(t.elm)
            }

            function C(n, r, i, o, a) {
                for (var s, u, l, f = 0, p = 0, d = r.length - 1, v = r[0], h = r[d], m = i.length - 1, y = i[0], _ = i[m], $ = !a; f <= d && p <= m;) t(v) ? v = r[++f] : t(h) ? h = r[--d] : He(v, y) ? (w(v, y, o), v = r[++f], y = i[++p]) : He(h, _) ? (w(h, _, o), h = r[--d], _ = i[--m]) : He(v, _) ? (w(v, _, o), $ && E.insertBefore(n, v.elm, E.nextSibling(h.elm)), v = r[++f], _ = i[--m]) : He(h, y) ? (w(h, y, o), $ && E.insertBefore(n, h.elm, v.elm), h = r[--d], y = i[++p]) : (t(s) && (s = Ue(r, f, d)), t(u = e(y.key) ? s[y.key] : null) ? (c(y, o, n, v.elm), y = i[++p]) : He(l = r[u], y) ? (w(l, y, o), r[u] = void 0, $ && E.insertBefore(n, l.elm, v.elm), y = i[++p]) : (c(y, o, n, v.elm), y = i[++p]));
                f > d ? g(n, t(i[m + 1]) ? null : i[m + 1].elm, i, p, m, o) : p > m && b(n, r, f, d)
            }

            function w(r, i, o, a) {
                if (r !== i) {
                    var s = i.elm = r.elm;
                    if (n(r.isAsyncPlaceholder)) e(i.asyncFactory.resolved) ? A(r.elm, i, o) : i.isAsyncPlaceholder = !0;
                    else if (n(i.isStatic) && n(r.isStatic) && i.key === r.key && (n(i.isCloned) || n(i.isOnce))) i.componentInstance = r.componentInstance;
                    else {
                        var c, u = i.data;
                        e(u) && e(c = u.hook) && e(c = c.prepatch) && c(r, i);
                        var l = r.children,
                            f = i.children;
                        if (e(u) && h(i)) {
                            for (c = 0; c < S.update.length; ++c) S.update[c](r, i);
                            e(c = u.hook) && e(c = c.update) && c(r, i)
                        }
                        t(i.text) ? e(l) && e(f) ? l !== f && C(s, l, f, o, a) : e(f) ? (e(r.text) && E.setTextContent(s, ""), g(s, null, f, 0, f.length - 1, o)) : e(l) ? b(s, l, 0, l.length - 1) : e(r.text) && E.setTextContent(s, "") : r.text !== i.text && E.setTextContent(s, i.text), e(u) && e(c = u.hook) && e(c = c.postpatch) && c(r, i)
                    }
                }
            }

            function x(t, r, i) {
                if (n(i) && e(t.parent)) t.parent.data.pendingInsert = r;
                else
                    for (var o = 0; o < r.length; ++o) r[o].data.hook.insert(r[o])
            }

            function A(t, r, i) {
                if (n(r.isComment) && e(r.asyncFactory)) return r.elm = t, r.isAsyncPlaceholder = !0, !0;
                r.elm = t;
                var o = r.tag,
                    a = r.data,
                    s = r.children;
                if (e(a) && (e(k = a.hook) && e(k = k.init) && k(r, !0), e(k = r.componentInstance))) return l(r, i), !0;
                if (e(o)) {
                    if (e(s))
                        if (t.hasChildNodes()) {
                            for (var c = !0, u = t.firstChild, f = 0; f < s.length; f++) {
                                if (!u || !A(u, s[f], i)) {
                                    c = !1;
                                    break
                                }
                                u = u.nextSibling
                            }
                            if (!c || u) return !1
                        } else v(r, s, i);
                    if (e(a))
                        for (var p in a)
                            if (!j(p)) {
                                m(r, i);
                                break
                            }
                } else t.data !== r.text && (t.data = r.text);
                return !0
            }
            var k, O, S = {},
                T = r.modules,
                E = r.nodeOps;
            for (k = 0; k < na.length; ++k)
                for (S[na[k]] = [], O = 0; O < T.length; ++O) e(T[O][na[k]]) && S[na[k]].push(T[O][na[k]]);
            var j = f("attrs,style,class,staticClass,staticStyle,key");
            return function(r, i, a, s, u, l) {
                if (!t(i)) {
                    var f = !1,
                        p = [];
                    if (t(r)) f = !0, c(i, p, u, l);
                    else {
                        var d = e(r.nodeType);
                        if (!d && He(r, i)) w(r, i, p, s);
                        else {
                            if (d) {
                                if (1 === r.nodeType && r.hasAttribute(xi) && (r.removeAttribute(xi), a = !0), n(a) && A(r, i, p)) return x(i, p, !0), r;
                                r = o(r)
                            }
                            var v = r.elm,
                                m = E.parentNode(v);
                            if (c(i, p, v._leaveCb ? null : m, E.nextSibling(v)), e(i.parent)) {
                                for (var y = i.parent; y;) y.elm = i.elm, y = y.parent;
                                if (h(i))
                                    for (var g = 0; g < S.create.length; ++g) S.create[g](ea, i.parent)
                            }
                            e(m) ? b(m, [r], 0, 0) : e(r.tag) && _(r)
                        }
                    }
                    return x(i, p, f), i.elm
                }
                e(r) && _(r)
            }
        }({
            nodeOps: Xo,
            modules: [aa, sa, fa, pa, _a, Ni ? {
                create: Jn,
                activate: Jn,
                remove: function(t, e) {
                    !0 !== t.data.show ? Vn(t, e) : e()
                }
            } : {}].concat(oa)
        }),
        ja = f("text,number,password,search,email,tel,url");
    Mi && document.addEventListener("selectionchange", function() {
        var t = document.activeElement;
        t && t.vmodel && Qn(t, "input")
    });
    var Na = {
            model: {
                inserted: function(t, e, n) {
                    if ("select" === n.tag) {
                        var r = function() {
                            qn(t, e, n.context)
                        };
                        r(), (Ii || Di) && setTimeout(r, 0)
                    } else("textarea" === n.tag || ja(t.type)) && (t._vModifiers = e.modifiers, e.modifiers.lazy || (t.addEventListener("change", Yn), Pi || (t.addEventListener("compositionstart", Zn), t.addEventListener("compositionend", Yn)), Mi && (t.vmodel = !0)))
                },
                componentUpdated: function(t, e, n) {
                    "select" === n.tag && (qn(t, e, n.context), (t.multiple ? e.value.some(function(e) {
                        return Wn(e, t.options)
                    }) : e.value !== e.oldValue && Wn(e.value, t.options)) && Qn(t, "change"))
                }
            },
            show: {
                bind: function(t, e, n) {
                    var r = e.value,
                        i = (n = Xn(n)).data && n.data.transition,
                        o = t.__vOriginalDisplay = "none" === t.style.display ? "" : t.style.display;
                    r && i && !Mi ? (n.data.show = !0, Un(n, function() {
                        t.style.display = o
                    })) : t.style.display = r ? o : "none"
                },
                update: function(t, e, n) {
                    var r = e.value;
                    r !== e.oldValue && ((n = Xn(n)).data && n.data.transition && !Mi ? (n.data.show = !0, r ? Un(n, function() {
                        t.style.display = t.__vOriginalDisplay
                    }) : Vn(n, function() {
                        t.style.display = "none"
                    })) : t.style.display = r ? t.__vOriginalDisplay : "none")
                },
                unbind: function(t, e, n, r, i) {
                    i || (t.style.display = t.__vOriginalDisplay)
                }
            }
        },
        La = {
            name: String,
            appear: Boolean,
            css: Boolean,
            mode: String,
            type: String,
            enterClass: String,
            leaveClass: String,
            enterToClass: String,
            leaveToClass: String,
            enterActiveClass: String,
            leaveActiveClass: String,
            appearClass: String,
            appearActiveClass: String,
            appearToClass: String,
            duration: [Number, String, Object]
        },
        Ia = {
            name: "transition",
            props: La,
            abstract: !0,
            render: function(t) {
                var e = this,
                    n = this.$options._renderChildren;
                if (n && (n = n.filter(function(t) {
                        return t.tag || or(t)
                    })).length) {
                    var r = this.mode,
                        o = n[0];
                    if (rr(this.$vnode)) return o;
                    var a = tr(o);
                    if (!a) return o;
                    if (this._leaving) return nr(t, o);
                    var s = "__transition-" + this._uid + "-";
                    a.key = null == a.key ? a.isComment ? s + "comment" : s + a.tag : i(a.key) ? 0 === String(a.key).indexOf(s) ? a.key : s + a.key : a.key;
                    var c = (a.data || (a.data = {})).transition = er(this),
                        u = this._vnode,
                        l = tr(u);
                    if (a.data.directives && a.data.directives.some(function(t) {
                            return "show" === t.name
                        }) && (a.data.show = !0), l && l.data && !ir(a, l) && !or(l)) {
                        var f = l && (l.data.transition = y({}, c));
                        if ("out-in" === r) return this._leaving = !0, et(f, "afterLeave", function() {
                            e._leaving = !1, e.$forceUpdate()
                        }), nr(t, o);
                        if ("in-out" === r) {
                            if (or(a)) return u;
                            var p, d = function() {
                                p()
                            };
                            et(c, "afterEnter", d), et(c, "enterCancelled", d), et(f, "delayLeave", function(t) {
                                p = t
                            })
                        }
                    }
                    return o
                }
            }
        },
        Ma = y({
            tag: String,
            moveClass: String
        }, La);
    delete Ma.mode;
    var Da = {
        Transition: Ia,
        TransitionGroup: {
            props: Ma,
            render: function(t) {
                for (var e = this.tag || this.$vnode.data.tag || "span", n = Object.create(null), r = this.prevChildren = this.children, i = this.$slots.default || [], o = this.children = [], a = er(this), s = 0; s < i.length; s++) {
                    var c = i[s];
                    c.tag && null != c.key && 0 !== String(c.key).indexOf("__vlist") && (o.push(c), n[c.key] = c, (c.data || (c.data = {})).transition = a)
                }
                if (r) {
                    for (var u = [], l = [], f = 0; f < r.length; f++) {
                        var p = r[f];
                        p.data.transition = a, p.data.pos = p.elm.getBoundingClientRect(), n[p.key] ? u.push(p) : l.push(p)
                    }
                    this.kept = t(e, null, u), this.removed = l
                }
                return t(e, null, o)
            },
            beforeUpdate: function() {
                this.__patch__(this._vnode, this.kept, !1, !0), this._vnode = this.kept
            },
            updated: function() {
                var t = this.prevChildren,
                    e = this.moveClass || (this.name || "v") + "-move";
                if (t.length && this.hasMove(t[0].elm, e)) {
                    t.forEach(ar), t.forEach(sr), t.forEach(cr);
                    document.body.offsetHeight;
                    t.forEach(function(t) {
                        if (t.data.moved) {
                            var n = t.elm,
                                r = n.style;
                            Dn(n, e), r.transform = r.WebkitTransform = r.transitionDuration = "", n.addEventListener(Aa, n._moveCb = function t(r) {
                                r && !/transform$/.test(r.propertyName) || (n.removeEventListener(Aa, t), n._moveCb = null, Pn(n, e))
                            })
                        }
                    })
                }
            },
            methods: {
                hasMove: function(t, e) {
                    if (!$a) return !1;
                    if (this._hasMove) return this._hasMove;
                    var n = t.cloneNode();
                    t._transitionClasses && t._transitionClasses.forEach(function(t) {
                        Ln(n, t)
                    }), Nn(n, e), n.style.display = "none", this.$el.appendChild(n);
                    var r = Rn(n);
                    return this.$el.removeChild(n), this._hasMove = r.hasTransform
                }
            }
        }
    };
    _e.config.mustUseProp = Bo, _e.config.isReservedTag = Yo, _e.config.isReservedAttr = Ro, _e.config.getTagNamespace = Pe, _e.config.isUnknownElement = function(t) {
        if (!Ni) return !0;
        if (Yo(t)) return !1;
        if (t = t.toLowerCase(), null != Qo[t]) return Qo[t];
        var e = document.createElement(t);
        return t.indexOf("-") > -1 ? Qo[t] = e.constructor === window.HTMLUnknownElement || e.constructor === window.HTMLElement : Qo[t] = /HTMLUnknownElement/.test(e.toString())
    }, y(_e.options.directives, Na), y(_e.options.components, Da), _e.prototype.__patch__ = Ni ? Ea : _, _e.prototype.$mount = function(t, e) {
        return t = t && Ni ? Fe(t) : void 0, bt(this, t, e)
    }, setTimeout(function() {
        Oi.devtools && Ji && Ji.emit("init", _e)
    }, 0);
    var Pa, Fa = !!Ni && function(t, e) {
            var n = document.createElement("div");
            return n.innerHTML = '<div a="' + t + '"/>', n.innerHTML.indexOf(e) > 0
        }("\n", "&#10;"),
        Ra = /\{\{((?:.|\n)+?)\}\}/g,
        Ha = /[-.*+?^${}()|[\]\/\\]/g,
        Ba = v(function(t) {
            var e = t[0].replace(Ha, "\\$&"),
                n = t[1].replace(Ha, "\\$&");
            return new RegExp(e + "((?:.|\\n)+?)" + n, "g")
        }),
        Ua = [{
            staticKeys: ["staticClass"],
            transformNode: function(t, e) {
                e.warn;
                var n = sn(t, "class");
                n && (t.staticClass = JSON.stringify(n));
                var r = an(t, "class", !1);
                r && (t.classBinding = r)
            },
            genData: function(t) {
                var e = "";
                return t.staticClass && (e += "staticClass:" + t.staticClass + ","), t.classBinding && (e += "class:" + t.classBinding + ","), e
            }
        }, {
            staticKeys: ["staticStyle"],
            transformNode: function(t, e) {
                e.warn;
                var n = sn(t, "style");
                n && (t.staticStyle = JSON.stringify(da(n)));
                var r = an(t, "style", !1);
                r && (t.styleBinding = r)
            },
            genData: function(t) {
                var e = "";
                return t.staticStyle && (e += "staticStyle:" + t.staticStyle + ","), t.styleBinding && (e += "style:(" + t.styleBinding + "),"), e
            }
        }],
        Va = {
            model: function(t, e, n) {
                Do = n;
                var r = e.value,
                    i = e.modifiers,
                    o = t.tag,
                    a = t.attrsMap.type;
                if (t.component) return cn(t, r, i), !1;
                if ("select" === o) gn(t, r, i);
                else if ("input" === o && "checkbox" === a) mn(t, r, i);
                else if ("input" === o && "radio" === a) yn(t, r, i);
                else if ("input" === o || "textarea" === o) _n(t, r, i);
                else if (!Oi.isReservedTag(o)) return cn(t, r, i), !1;
                return !0
            },
            text: function(t, e) {
                e.value && en(t, "textContent", "_s(" + e.value + ")")
            },
            html: function(t, e) {
                e.value && en(t, "innerHTML", "_s(" + e.value + ")")
            }
        },
        za = f("area,base,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr"),
        Ka = f("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source"),
        Ja = f("address,article,aside,base,blockquote,body,caption,col,colgroup,dd,details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,title,tr,track"),
        qa = {
            expectHTML: !0,
            modules: Ua,
            directives: Va,
            isPreTag: function(t) {
                return "pre" === t
            },
            isUnaryTag: za,
            mustUseProp: Bo,
            canBeLeftOpenTag: Ka,
            isReservedTag: Yo,
            getTagNamespace: Pe,
            staticKeys: function(t) {
                return t.reduce(function(t, e) {
                    return t.concat(e.staticKeys || [])
                }, []).join(",")
            }(Ua)
        },
        Wa = {
            decode: function(t) {
                return Pa = Pa || document.createElement("div"), Pa.innerHTML = t, Pa.textContent
            }
        },
        Ga = /([^\s"'<>/=]+)/,
        Za = /(?:=)/,
        Ya = [/"([^"]*)"+/.source, /'([^']*)'+/.source, /([^\s"'=<>`]+)/.source],
        Qa = new RegExp("^\\s*" + Ga.source + "(?:\\s*(" + Za.source + ")\\s*(?:" + Ya.join("|") + "))?"),
        Xa = "[a-zA-Z_][\\w\\-\\.]*",
        ts = "((?:" + Xa + "\\:)?" + Xa + ")",
        es = new RegExp("^<" + ts),
        ns = /^\s*(\/?)>/,
        rs = new RegExp("^<\\/" + ts + "[^>]*>"),
        is = /^<!DOCTYPE [^>]+>/i,
        os = /^<!--/,
        as = /^<!\[/,
        ss = !1;
    "x".replace(/x(.)?/g, function(t, e) {
        ss = "" === e
    });
    var cs, us, ls, fs, ps, ds, vs, hs, ms, ys, gs = f("script,style,textarea", !0),
        _s = {},
        bs = {
            "&lt;": "<",
            "&gt;": ">",
            "&quot;": '"',
            "&amp;": "&",
            "&#10;": "\n"
        },
        $s = /&(?:lt|gt|quot|amp);/g,
        Cs = /&(?:lt|gt|quot|amp|#10);/g,
        ws = f("pre,textarea", !0),
        xs = function(t, e) {
            return t && ws(t) && "\n" === e[0]
        },
        As = /^@|^v-on:/,
        ks = /^v-|^@|^:/,
        Os = /(.*?)\s+(?:in|of)\s+(.*)/,
        Ss = /\((\{[^}]*\}|[^,]*),([^,]*)(?:,([^,]*))?\)/,
        Ts = /:(.*)$/,
        Es = /^:|^v-bind:/,
        js = /\.[^.]+/g,
        Ns = v(Wa.decode),
        Ls = /^xmlns:NS\d+/,
        Is = /^NS\d+:/,
        Ms = v(function(t) {
            return f("type,tag,attrsList,attrsMap,plain,parent,children,attrs" + (t ? "," + t : ""))
        }),
        Ds = /^\s*([\w$_]+|\([^)]*?\))\s*=>|^function\s*\(/,
        Ps = /^\s*[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['.*?']|\[".*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*\s*$/,
        Fs = {
            esc: 27,
            tab: 9,
            enter: 13,
            space: 32,
            up: 38,
            left: 37,
            right: 39,
            down: 40,
            delete: [8, 46]
        },
        Rs = function(t) {
            return "if(" + t + ")return null;"
        },
        Hs = {
            stop: "$event.stopPropagation();",
            prevent: "$event.preventDefault();",
            self: Rs("$event.target !== $event.currentTarget"),
            ctrl: Rs("!$event.ctrlKey"),
            shift: Rs("!$event.shiftKey"),
            alt: Rs("!$event.altKey"),
            meta: Rs("!$event.metaKey"),
            left: Rs("'button' in $event && $event.button !== 0"),
            middle: Rs("'button' in $event && $event.button !== 1"),
            right: Rs("'button' in $event && $event.button !== 2")
        },
        Bs = {
            on: function(t, e) {
                t.wrapListeners = function(t) {
                    return "_g(" + t + "," + e.value + ")"
                }
            },
            bind: function(t, e) {
                t.wrapData = function(n) {
                    return "_b(" + n + ",'" + t.tag + "'," + e.value + "," + (e.modifiers && e.modifiers.prop ? "true" : "false") + (e.modifiers && e.modifiers.sync ? ",true" : "") + ")"
                }
            },
            cloak: _
        },
        Us = function(t) {
            this.options = t, this.warn = t.warn || Xe, this.transforms = tn(t.modules, "transformCode"), this.dataGenFns = tn(t.modules, "genData"), this.directives = y(y({}, Bs), t.directives);
            var e = t.isReservedTag || Ci;
            this.maybeComponent = function(t) {
                return !e(t.tag)
            }, this.onceId = 0, this.staticRenderFns = []
        },
        Vs = function(t) {
            return function(e) {
                function n(n, r) {
                    var i = Object.create(e),
                        o = [],
                        a = [];
                    if (i.warn = function(t, e) {
                            (e ? a : o).push(t)
                        }, r) {
                        r.modules && (i.modules = (e.modules || []).concat(r.modules)), r.directives && (i.directives = y(Object.create(e.directives), r.directives));
                        for (var s in r) "modules" !== s && "directives" !== s && (i[s] = r[s])
                    }
                    var c = t(n, i);
                    return c.errors = o, c.tips = a, c
                }
                return {
                    compile: n,
                    compileToFunctions: fi(n)
                }
            }
        }(function(t, e) {
            var n = pr(t.trim(), e);
            Nr(n, e);
            var r = Br(n, e);
            return {
                ast: n,
                render: r.render,
                staticRenderFns: r.staticRenderFns
            }
        })(qa).compileToFunctions,
        zs = v(function(t) {
            var e = Fe(t);
            return e && e.innerHTML
        }),
        Ks = _e.prototype.$mount;
    return _e.prototype.$mount = function(t, e) {
        if ((t = t && Fe(t)) === document.body || t === document.documentElement) return this;
        var n = this.$options;
        if (!n.render) {
            var r = n.template;
            if (r)
                if ("string" == typeof r) "#" === r.charAt(0) && (r = zs(r));
                else {
                    if (!r.nodeType) return this;
                    r = r.innerHTML
                }
            else t && (r = pi(t));
            if (r) {
                var i = Vs(r, {
                        shouldDecodeNewlines: Fa,
                        delimiters: n.delimiters,
                        comments: n.comments
                    }, this),
                    o = i.render,
                    a = i.staticRenderFns;
                n.render = o, n.staticRenderFns = a
            }
        }
        return Ks.call(this, t, e)
    }, _e.compile = Vs, _e
});